{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/38225.txt", 
    "id": "38225", 
    "cves": [
        "CVE-2015-6923"
    ]
}