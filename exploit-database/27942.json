{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/dos/27942.txt", 
    "id": "27942", 
    "cves": [
        "CVE-2013-4980", 
        "CVE-2013-4981", 
        "CVE-2013-4982"
    ]
}