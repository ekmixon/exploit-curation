{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/local/10213.txt", 
    "id": "10213", 
    "cves": [
        "CVE-2009-3578"
    ]
}