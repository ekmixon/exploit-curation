{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/36613.txt", 
    "id": "36613", 
    "cves": [
        "CVE-2015-2824"
    ]
}