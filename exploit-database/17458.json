{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/17458.txt", 
    "id": "17458", 
    "cves": [
        "CVE-2011-1515", 
        "CVE-2011-1514", 
        "CVE-2011-1865"
    ]
}