{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/webapps/35238.txt", 
    "id": "35238", 
    "cves": [
        "CVE-2014-8682"
    ]
}