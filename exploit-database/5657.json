{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/5657.txt", 
    "id": "5657", 
    "cves": [
        "CVE-2008-2276"
    ]
}