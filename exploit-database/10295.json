{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/local/10295.txt", 
    "id": "10295", 
    "cves": [
        "CVE-2009-4148"
    ]
}