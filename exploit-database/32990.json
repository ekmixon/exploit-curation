{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/32990.pl", 
    "id": "32990", 
    "cves": [
        "CVE-2010-4107"
    ]
}