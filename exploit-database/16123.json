{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/remote/16123.txt", 
    "id": "16123", 
    "cves": [
        "CVE-2011-0887", 
        "CVE-2011-0886", 
        "CVE-2011-0885"
    ]
}