{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/27289.txt", 
    "id": "27289", 
    "cves": [
        "CVE-2013-2581", 
        "CVE-2013-2580", 
        "CVE-2013-2579", 
        "CVE-2013-2578"
    ]
}