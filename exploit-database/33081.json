{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/remote/33081.cpp", 
    "id": "33081", 
    "cves": [
        "CVE-2009-1019"
    ]
}