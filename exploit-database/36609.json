{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/webapps/36609.txt", 
    "id": "36609", 
    "cves": [
        "CVE-2014-5288", 
        "CVE-2014-5287"
    ]
}