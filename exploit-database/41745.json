{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/local/41745.txt", 
    "id": "41745", 
    "cves": [
        "CVE-2017-5227"
    ]
}