{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/local/37098.txt", 
    "id": "37098", 
    "cves": [
        "CVE-2015-0003"
    ]
}