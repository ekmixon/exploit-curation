{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/41478.txt", 
    "id": "41478", 
    "cves": [
        "CVE-2017-6411"
    ]
}