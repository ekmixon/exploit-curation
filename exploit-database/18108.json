{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/18108.rb", 
    "id": "18108", 
    "cves": [
        "CVE-2011-3829", 
        "CVE-2011-3833"
    ]
}