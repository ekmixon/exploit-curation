{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/28959.txt", 
    "id": "28959", 
    "cves": [
        "CVE-2013-5978", 
        "CVE-2013-5977"
    ]
}