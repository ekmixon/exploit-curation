{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/40921.sh", 
    "id": "40921", 
    "cves": [
        "CVE-2016-9566", 
        "CVE-2016-9565"
    ]
}