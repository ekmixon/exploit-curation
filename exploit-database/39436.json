{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/39436.txt", 
    "id": "39436", 
    "cves": [
        "CVE-2015-7567", 
        "CVE-2015-7572", 
        "CVE-2015-7570", 
        "CVE-2015-7571", 
        "CVE-2015-7569", 
        "CVE-2015-7568"
    ]
}