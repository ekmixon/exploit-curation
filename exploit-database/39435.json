{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/webapps/39435.txt", 
    "id": "39435", 
    "cves": [
        "CVE-2016-0956"
    ]
}