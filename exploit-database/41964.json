{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/macos/remote/41964.html", 
    "id": "41964", 
    "cves": [
        "CVE-2017-2491"
    ]
}