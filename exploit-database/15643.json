{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/15643.txt", 
    "id": "15643", 
    "cves": [
        "CVE-2010-4282", 
        "CVE-2010-4283", 
        "CVE-2010-4281"
    ]
}