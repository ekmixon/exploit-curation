{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/jsp/webapps/42402.rb", 
    "id": "42402", 
    "cves": [
        "CVE-2016-9351", 
        "CVE-2016-9349"
    ]
}