{
    "source": "exploit-database", 
    "exploit": "Vk13YXJlIFRvb2xzIHVwZGF0ZSBPUyBDb21tYW5kIEluamVjdGlvbg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQoxLiBBZHZpc29yeSBJbmZvcm1hdGlvbg0KQWR2aXNvcnkgSUQ6IEJPTlNBSS0yMDEwLTAxMTANCkRhdGUgcHVibGlzaGVkOiBUaHUgRGVjIDksIDIwMTANClZlbmRvcnMgY29udGFjdGVkOiBWTXdhcmUNClJlbGVhc2UgbW9kZTogQ29vcmRpbmF0ZWQgcmVsZWFzZQ0KDQoyLiBWdWxuZXJhYmlsaXR5IEluZm9ybWF0aW9uDQpDbGFzczogSW5qZWN0aW9uDQpSZW1vdGVseSBFeHBsb2l0YWJsZTogWWVzDQpMb2NhbGx5IEV4cGxvaXRhYmxlOiBZZXMNCkNWRSBOYW1lOiBDVkUtMjAxMC00Mjk3DQoNCjMuIFNvZnR3YXJlIERlc2NyaXB0aW9uDQpWTXdhcmUgVG9vbHMgaXMgYSBzdWl0ZSBvZiB1dGlsaXRpZXMgdGhhdCBlbmhhbmNlcyB0aGUgcGVyZm9ybWFuY2Ugb2YNCnRoZSB2aXJ0dWFsIG1hY2hpbmUncyBndWVzdCBvcGVyYXRpbmcgc3lzdGVtIGFuZCBpbXByb3ZlcyBtYW5hZ2VtZW50IG9mDQp0aGUgdmlydHVhbCBtYWNoaW5lLiBXaXRob3V0IFZNd2FyZSBUb29scyBpbnN0YWxsZWQgaW4geW91ciBndWVzdA0Kb3BlcmF0aW5nIHN5c3RlbSwgZ3Vlc3QgcGVyZm9ybWFuY2UgbGFja3MgaW1wb3J0YW50IGZ1bmN0aW9uYWxpdHkuDQpJbnN0YWxsaW5nIFZNd2FyZSBUb29scyBlbGltaW5hdGVzIG9yIGltcHJvdmVzIHRoZSBmb2xsb3dpbmcgaXNzdWVzOg0KDQogICAgKiBsb3cgdmlkZW8gcmVzb2x1dGlvbg0KICAgICogaW5hZGVxdWF0ZSBjb2xvciBkZXB0aA0KICAgICogaW5jb3JyZWN0IGRpc3BsYXkgb2YgbmV0d29yayBzcGVlZA0KICAgICogcmVzdHJpY3RlZCBtb3ZlbWVudCBvZiB0aGUgbW91c2UNCiAgICAqIGluYWJpbGl0eSB0byBjb3B5IGFuZCBwYXN0ZSBhbmQgZHJhZy1hbmQtZHJvcCBmaWxlcw0KICAgICogbWlzc2luZyBzb3VuZA0KDQpWTXdhcmUgVG9vbHMgaW5jbHVkZXMgdGhlc2UgY29tcG9uZW50czoNCg0KICAgICogVk13YXJlIFRvb2xzIHNlcnZpY2UNCiAgICAqIFZNd2FyZSBkZXZpY2UgZHJpdmVycw0KICAgICogVk13YXJlIHVzZXIgcHJvY2Vzcw0KICAgICogVk13YXJlIFRvb2xzIGNvbnRyb2wgcGFuZWwNCg0KVk13YXJlIFRvb2xzIGlzIHByb3ZpZGVkIGluIHRoZSBmb2xsb3dpbmcgZm9ybWF0czoNCg0KICAgICogSVNPcyAoY29udGFpbiAudGFyIGFuZCAucnBtIGZpbGVzKSDigJMgcGFja2FnZWQgd2l0aCB0aGUgcHJvZHVjdCBhbmQNCmFyZSBpbnN0YWxsZWQgaW4gYSBudW1iZXIgb2Ygd2F5cywgZGVwZW5kaW5nIHVwb24gdGhlIFZNd2FyZSBwcm9kdWN0IGFuZA0KdGhlIGd1ZXN0IG9wZXJhdGluZyBzeXN0ZW0gaW5zdGFsbGVkIGluIHRoZSB2aXJ0dWFsIG1hY2hpbmUuIFZNd2FyZQ0KVG9vbHMgcHJvdmlkZXMgYSBkaWZmZXJlbnQgSVNPIGZpbGUgZm9yIGVhY2ggdHlwZSBvZiBzdXBwb3J0ZWQgZ3Vlc3QNCm9wZXJhdGluZyBzeXN0ZW06IFdpbmRvd3MsIExpbnV4LCBOZXRXYXJlLCBTb2xhcmlzLCBhbmQgRnJlZUJTRC4NCiAgICAqIE9wZXJhdGluZyBTeXN0ZW0gU3BlY2lmaWMgUGFja2FnZXMgKE9TUHMpIOKAkyBkb3dubG9hZGVkIGFuZA0KaW5zdGFsbGVkIGZyb20gdGhlIGNvbW1hbmQgbGluZS4gVk13YXJlIFRvb2xzIGlzIGF2YWlsYWJsZSBhcyBzZXBhcmF0ZQ0KZG93bmxvYWRhYmxlLCBsaWdodC13ZWlnaHQgcGFja2FnZXMgdGhhdCBhcmUgc3BlY2lmaWMgdG8gZWFjaCBzdXBwb3J0ZWQNCkxpbnV4IG9wZXJhdGluZyBzeXN0ZW0gYW5kIFZNd2FyZSBwcm9kdWN0LiBPU1BzIGFyZSBhbiBhbHRlcm5hdGl2ZSB0bw0KdGhlIGV4aXN0aW5nIG1lY2hhbmlzbSBmb3IgaW5zdGFsbGluZyBWTXdhcmUgVG9vbHMgYW5kIG9ubHkgc3VwcG9ydA0KTGludXggc3lzdGVtcyBydW5uaW5nIG9uIEVTWC4NCg0KNC4gVnVsbmVyYWJpbGl0eSBEZXNjcmlwdGlvbg0KSW5qZWN0aW9uIGZsYXdzLCBzdWNoIGFzIFNRTCwgT1MsIGFuZCBMREFQIGluamVjdGlvbiwgb2NjdXIgd2hlbg0KdW50cnVzdGVkIGRhdGEgaXMgc2VudCB0byBhbiBpbnRlcnByZXRlciBhcyBwYXJ0IG9mIGEgY29tbWFuZCBvciBxdWVyeS4NClRoZSBhdHRhY2tlcuKAmXMgaG9zdGlsZSBkYXRhIGNhbiB0cmljayB0aGUgaW50ZXJwcmV0ZXIgaW50byBleGVjdXRpbmcNCnVuaW50ZW5kZWQgY29tbWFuZHMgb3IgYWNjZXNzaW5nIHVuYXV0aG9yaXplZCBkYXRhLg0KDQo1LiBWdWxuZXJhYmxlIHBhY2thZ2VzDQpDb2x1bW4gNCBvZiB0aGUgZm9sbG93aW5nIHRhYmxlIGxpc3RzIHRoZSBhY3Rpb24gcmVxdWlyZWQgdG8gcmVtZWRpYXRlDQp0aGUgdnVsbmVyYWJpbGl0eSBpbiBlYWNoIHJlbGVhc2UsIGlmIGEgc29sdXRpb24gaXMgYXZhaWxhYmxlOg0KVk1XYXJlIFByb2R1Y3QJUHJvZHVjdCBWZXJzaW9uCVJ1bm5pbmcgT24JUmVwbGFjZSB3aXRoIC8gQXBwbHkgUGF0Y2gNClZpcnR1YWxDZW50ZXIJYW55CVdpbmRvd3MJbm90IGFmZmVjdGVkDQpXb3Jrc3RhdGlvbgk3LlgJYW55CTcuMS4yIEJ1aWxkIDMwMTU0OCBvciBsYXRlcg0KV29ya3N0YXRpb24JNi41LlgJYW55CTYuNS41IEJ1aWxkIDMyODA1MiBvciBsYXRlcg0KUGxheWVyCTMuMS5YCWFueQkzLjEuMiBCdWlsZCAzMDE1NDggb3IgbGF0ZXINClBsYXllcgkyLjUuWAlhbnkJMi41LjUgQnVpbGQgMzI4MDUyIG9yIGxhdGVyDQpBTVMJYW55CWFueQlub3QgYWZmZWN0ZWQNClNlcnZlcgkyLjAuMglhbnkJYWZmZWN0ZWQsIG5vIHBhdGNoIHBsYW5uZWQNCkZ1c2lvbgkzLjEuWAlNYWMgT1NYCTMuMS4yIEJ1aWxkIDMzMjEwMQ0KRnVzaW9uCTIuWAlNYWMgT1NYCTIuMC44IEJ1aWxkIDMyODAzNQ0KRVNYaQk0LjEJRVNYaQlFU1hpNDEwLTIwMTAxMDQwMi1CRw0KRVNYaQk0LjAJRVNYaQlFU1hpNDAwLTIwMTAwOTQwMi1CRw0KRVNYaQkzLjUJRVNYaQlFU1hlMzUwLTIwMTAwODQwMi1ULUJHICoqDQpFU1gJNC4xCUVTWAlFU1g0MTAtMjAxMDEwNDA1LUJHDQpFU1gJNC4wCUVTWAlFU1g0MDAtMjAxMDA5NDAxLVNHDQpFU1gJMy41CUVTWAlFU1gzNTAtMjAxMDA4NDA5LUJHICoqDQpFU1gJMy4wLjMJRVNYCW5vdCBhZmZlY3RlZA0KDQogICogaG9zdGVkIHByb2R1Y3RzIGFyZSBWTXdhcmUgV29ya3N0YXRpb24sIFBsYXllciwgQUNFLCBGdXNpb24uDQogICoqIE5vbiBXaW5kb3dzLWJhc2VkIGd1ZXN0IHN5c3RlbXMgb24gRVNYaSAzLjUgYW5kIEVTWCAzLjUgb25seToNCiAgICAgLSBJbnN0YWxsIHRoZSByZWxldmFudCBFU1ggcGF0Y2guDQogICAgIC0gTWFudWFsbHkgdXBncmFkZSB0b29scyBpbiB0aGUgdmlydHVhbCBtYWNoaW5lICh2aXJ0dWFsIG1hY2hpbmUNCnVzZXJzIHdpbGwgbm90IGJlIHByb21wdGVkIHRvIHVwZ3JhZGUgdG9vbHMpLiAgTm90ZSB0aGUgVkkgQ2xpZW50IG1heQ0Kbm90IHNob3cgdGhhdCB0aGUgVk13YXJlIHRvb2xzIGlzIG91dCBvZiBkYXRlIGluIHRoIHN1bW1hcnkgdGFiLg0KRnVsbCBWTVdhcmUgYWR2aXNvcnkgY291bGQgYmUgZm91bmQgYXQ6DQpodHRwOi8vd3d3LnZtd2FyZS5jb20vc2VjdXJpdHkvYWR2aXNvcmllcy9WTVNBLTIwMTAtMDAxOC5odG1sDQoNCjYuIE5vbi12dWxuZXJhYmxlIHBhY2thZ2VzDQpTZWUgYWJvdmUgdGFibGUuDQoNCjcuIENyZWRpdHMNClRoaXMgdnVsbmVyYWJpbGl0eSB3YXMgZGlzY292ZXJlZCBieSBOYWh1ZWwgR3Jpc29saWEgKCBuYWh1ZWwgLWF0LQ0KYm9uc2FpLXNlYy5jb20gKS4NCg0KOC4gVGVjaG5pY2FsIERlc2NyaXB0aW9uDQo4LjEuIE9TIENvbW1hbmQgSW5qZWN0aW9uIOKAkyBQb0MgRXhhbXBsZQ0KQ1ZTU3YyIFNjb3JlOiA4LjUgKEFWOk4vQUM6TS9BdTpTL0M6Qy9JOkMvQTpDKQ0KVk13YXJlIFNlcnZlciBJbmZyYXN0cnVjdHVyZSBXZWIgQWNjZXNzIGlzIHByb25lIHRvIHJlbW90ZSBjb21tYW5kDQpleGVjdXRpb24gdnVsbmVyYWJpbGl0eSBiZWNhdXNlIHRoZSBzb2Z0d2FyZSBmYWlscyB0byBhZGVxdWF0ZWx5DQpzYW5pdGl6ZSB1c2VyLXN1cHBsaWVkIGlucHV0Lg0KV2hlbiBVcGRhdGluZyB0aGUgVk1Ub29scyBvbiBhIGNlcnRhaW4gR3Vlc3QgVmlydHVhbCBNYWNoaW5lLCBhIGNvbW1hbmQNCmluamVjdGlvbiBhdHRhY2sgY2FuIGJlIGV4ZWN1dGVkIGlmIHNwZWNpYWxseSBjcmFmdGVkIHBhcmFtZXRlcnMgYXJlIHNlbnQuDQpTdWNjZXNzZnVsIGF0dGFja3MgY2FuIGNvbXByb21pc2UgdGhlIGFmZmVjdGVkIEd1ZXN0IFZpcnR1YWwgTWFjaGluZQ0Kd2l0aCByb290IHByaXZpbGVnZXMuDQpUaGUgZm9sbG93aW5nIHByb29mIG9mIGNvbmNlcHQgaXMgZ2l2ZW4uIEl0IHdhcyBleHBsb2l0ZWQgaW4gYSBHTlUvTGludXgNCkd1ZXN0IHdpdGggVk13YXJlIFRvb2xzIGluc3RhbGxlZCBidXQgbm90IGZ1bGx5IHVwZGF0ZWQ6DQpQT1NUIC91aS9zYiBIVFRQLzEuMQ0KW+KApl0NCkNvb2tpZTogSlNFU1NJT05JRD1GNzhDQ0E3REQzQ0Y0RTJFODI1ODdCMjM2NjYwQzlFRDsgdXNlcl9uYW1lPXZtdXNlcjsNCmw9aHR0cCUzQSUyRiUyRmxvY2FsaG9zdCUzQTgwJTJGc2RrDQpb4oCmXQ0KW3tpOiIzNzgiLGV4ZWM6Ii9jbWQvdm0iLGFyZ3M6WyJVcGdyYWRlVG9vbHNfVGFzayIse19pOiJWaXJ0dWFsTWFjaGluZXw5NjAifSwiOw0KSU5KRUNURUQgQ09NTUFORCBIRVJFIDsiXX1dDQoNCg0KOS4gUmVwb3J0IFRpbWVsaW5lDQrigKIgMjAxMC0wNC0yNCAvIFZ1bG5lcmFiaWxpdGllcyB3ZXJlIGlkZW50aWZpZWQNCuKAoiAyMDEwLTA0LTI5IOKAkyAyMDEwLTEyLTAyIC8gTXVsdGlwbGUgQ29udGFjdHMgd2l0aCBWZW5kb3INCuKAoiAyMDEwLTEyLTA5IC8gVnVsbmVyYWJpbGl0eSBpcyBEaXNjbG9zZWQg4oCTIFBvQyBhdHRhY2hlZA0KDQoxMC4gQWJvdXQgQm9uc2FpDQpCb25zYWkgaXMgYSBjb21wYW55IGludm9sdmVkIGluIHByb3ZpZGluZyBwcm9mZXNzaW9uYWwgY29tcHV0ZXINCmluZm9ybWF0aW9uIHNlY3VyaXR5IHNlcnZpY2VzLiBDdXJyZW50bHkgYSBzb3VuZCBncm93dGggY29tcGFueSwgc2luY2UNCml0cyBmb3VuZGF0aW9uIGluIGVhcmx5IDIwMDkgaW4gQnVlbm9zIEFpcmVzLCBBcmdlbnRpbmEsIHdlIGFyZSBmdWxseQ0KY29tbWl0dGVkIHRvIHF1YWxpdHkgc2VydmljZSBhbmQgZm9jdXNlZCBvbiBvdXIgY3VzdG9tZXJz4oCZIHJlYWwgbmVlZHMuDQoNCjExLiBEaXNjbGFpbWVyDQpUaGUgY29udGVudHMgb2YgdGhpcyBhZHZpc29yeSBhcmUgY29weXJpZ2h0IChjKSAyMDEwIEJvbnNhaSBJbmZvcm1hdGlvbg0KU2VjdXJpdHksIGFuZCBtYXkgYmUgZGlzdHJpYnV0ZWQgZnJlZWx5IHByb3ZpZGVkIHRoYXQgbm8gZmVlIGlzIGNoYXJnZWQNCmZvciB0aGlzIGRpc3RyaWJ1dGlvbiBhbmQgcHJvcGVyIGNyZWRpdCBpcyBnaXZlbi4NCg0KMTIuIFJlc2VhcmNoDQpodHRwOi8vd3d3LmJvbnNhaS1zZWMuY29tL2VuL3Jlc2VhcmNoL3Z1bG5lcmFiaWxpdHkucGhwDQpodHRwOi8vd3d3LmJvbnNhaS1zZWMuY29tL2VuL3Jlc2VhcmNoL3Z1bG5lcmFiaWxpdGllcy92bXdhcmUtdG9vbHMtb3MtY29tbWFuZC1pbmplY3Rpb24tMDExMC5waHA=", 
    "filename": "platforms/multiple/remote/15717.txt", 
    "id": "15717", 
    "cves": [
        "CVE-2010-4297"
    ]
}