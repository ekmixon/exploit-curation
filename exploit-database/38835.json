{
    "cpes": {
        "cpe:/o:redhat:enterprise_linux:7.0:ga:server": {
            "scores": {
                "stride": "000000"
            }
        }
    }, 
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/local/38835.py", 
    "id": "38835", 
    "cves": [
        "CVE-2015-5273", 
        "CVE-2015-5287"
    ]
}