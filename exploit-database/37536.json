{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/remote/37536.rb", 
    "id": "37536", 
    "cves": [
        "CVE-2015-3043", 
        "CVE-2015-3113"
    ]
}