{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/41625.txt", 
    "id": "41625", 
    "cves": [
        "CVE-2015-8258"
    ]
}