{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/6387.rb", 
    "id": "6387", 
    "cves": [
        "CVE-2008-2639"
    ]
}