{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/36422.txt", 
    "id": "36422", 
    "cves": [
        "CVE-2015-2281"
    ]
}