{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/36506.txt", 
    "id": "36506", 
    "cves": [
        "CVE-2015-2294", 
        "CVE-2015-2295"
    ]
}