{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/39246.txt", 
    "id": "39246", 
    "cves": [
        "CVE-2015-8356"
    ]
}