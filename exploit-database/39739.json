{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/39739.py", 
    "id": "39739", 
    "cves": [
        "CVE-2014-9222", 
        "CVE-2015-9222"
    ]
}