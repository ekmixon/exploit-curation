{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/42520.txt", 
    "id": "42520", 
    "cves": [
        "CVE-2017-12971", 
        "CVE-2017-12970", 
        "CVE-2017-12965"
    ]
}