{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/dos/41984.txt", 
    "id": "41984", 
    "cves": [
        "CVE-2017-2800"
    ]
}