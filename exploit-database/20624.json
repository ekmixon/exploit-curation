{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/20624.rb", 
    "id": "20624", 
    "cves": [
        "CVE-2012-1535"
    ]
}