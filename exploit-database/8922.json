{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/8922.txt", 
    "id": "8922", 
    "cves": [
        "CVE-2009-2011"
    ]
}