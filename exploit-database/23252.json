{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/23252.txt", 
    "id": "23252", 
    "cves": [
        "CVE-2012-5849"
    ]
}