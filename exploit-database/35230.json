{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/35230.rb", 
    "id": "35230", 
    "cves": [
        "CVE-2014-6332"
    ]
}