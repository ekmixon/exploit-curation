{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/jsp/webapps/41926.txt", 
    "id": "41926", 
    "cves": [
        "CVE-2017-3549"
    ]
}