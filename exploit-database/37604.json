{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/37604.txt", 
    "id": "37604", 
    "cves": [
        "CVE-2014-8677", 
        "CVE-2014-8676", 
        "CVE-2014-8675", 
        "CVE-2014-8674", 
        "CVE-2014-8673"
    ]
}