{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/37623.txt", 
    "id": "37623", 
    "cves": [
        "CVE-2011-0997"
    ]
}