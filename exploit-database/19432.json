{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/jsp/webapps/19432.rb", 
    "id": "19432", 
    "cves": [
        "CVE-2008-6508"
    ]
}