{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/18572.rb", 
    "id": "18572", 
    "cves": [
        "CVE-2012-0754"
    ]
}