{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/cgi/webapps/41842.txt", 
    "id": "41842", 
    "cves": [
        "CVE-2017-6359", 
        "CVE-2017-6360", 
        "CVE-2017-6361"
    ]
}