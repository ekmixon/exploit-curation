{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/8934.py", 
    "id": "8934", 
    "cves": [
        "CVE-2009-0950"
    ]
}