{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/jsp/webapps/39687.txt", 
    "id": "39687", 
    "cves": [
        "CVE-2016-1596", 
        "CVE-2016-1595", 
        "CVE-2016-1594", 
        "CVE-2016-1593"
    ]
}