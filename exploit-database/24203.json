{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/webapps/24203.txt", 
    "id": "24203", 
    "cves": [
        "CVE-2013-1360"
    ]
}