{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/37088.c", 
    "id": "37088", 
    "cves": [
        "CVE-2015-1325"
    ]
}