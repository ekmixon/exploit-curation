{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/35972.txt", 
    "id": "35972", 
    "cves": [
        "CVE-2015-1428"
    ]
}