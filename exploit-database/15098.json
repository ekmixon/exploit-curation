{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/15098.txt", 
    "id": "15098", 
    "cves": [
        "CVE-2010-3490"
    ]
}