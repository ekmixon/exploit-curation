{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/18371.rb", 
    "id": "18371", 
    "cves": [
        "CVE-2011-4107"
    ]
}