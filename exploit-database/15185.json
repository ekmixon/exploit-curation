{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/asp/webapps/15185.txt", 
    "id": "15185", 
    "cves": [
        "CVE-2010-3486"
    ]
}