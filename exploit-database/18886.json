{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/18886.txt", 
    "id": "18886", 
    "cves": [
        "CVE-2012-2629"
    ]
}