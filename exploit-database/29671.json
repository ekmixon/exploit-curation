{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/29671.txt", 
    "id": "29671", 
    "cves": [
        "CVE-2013-6356"
    ]
}