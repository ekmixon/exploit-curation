{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/24536.txt", 
    "id": "24536", 
    "cves": [
        "CVE-2013-1466"
    ]
}