{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/24022.txt", 
    "id": "24022", 
    "cves": [
        "CVE-2012-5876", 
        "CVE-2012-5877"
    ]
}