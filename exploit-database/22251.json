{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/remote/22251.sh", 
    "id": "22251", 
    "cves": [
        "CVE-1999-0101"
    ]
}