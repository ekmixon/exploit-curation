{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/40679.sh", 
    "id": "40679", 
    "cves": [
        "CVE-2016-6662", 
        "CVE-2016-6663", 
        "CVE-2016-6664", 
        "CVE-2016-5616", 
        "CVE-2016-5617"
    ]
}