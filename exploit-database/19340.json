{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/19340.txt", 
    "id": "19340", 
    "cves": [
        "CVE-2012-2614"
    ]
}