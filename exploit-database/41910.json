{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/remote/41910.sh", 
    "id": "41910", 
    "cves": [
        "CVE-2017-7692"
    ]
}