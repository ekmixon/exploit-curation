{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/23574.txt", 
    "id": "23574", 
    "cves": [
        "CVE-2012-5875"
    ]
}