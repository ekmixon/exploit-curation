{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/40774.sh", 
    "id": "40774", 
    "cves": [
        "CVE-2016-8641"
    ]
}