{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/dos/41991.py", 
    "id": "41991", 
    "cves": [
        "CVE-2017-8852"
    ]
}