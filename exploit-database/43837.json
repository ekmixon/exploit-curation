{
    "source": "exploit-database", 
    "exploit": "R2FsbGVyeSAyIE11bHRpcGxlIFZ1bG5lcmFiaWxpdGllcw0KDQpWZW5kb3I6IEJoYXJhdCBNZWRpcmF0dGENClByb2R1Y3Q6IEdhbGxlcnkgMg0KVmVyc2lvbjogPD0gMi4wLjINCldlYnNpdGU6IGh0dHA6Ly9nYWxsZXJ5Lm1lbmFsdG8uY29tLw0KDQpCSUQ6IDE2OTQwIA0KQ1ZFOiBDVkUtMjAwNi0xMTI3IENWRS0yMDA2LTExMjggDQpPU1ZEQjogMjM1OTYgMjM1OTcgDQpTRUNVTklBOiAxOTEwNCANClBBQ0tFVFNUT1JNOiA0NDM1OCANCg0KRGVzY3JpcHRpb246DQpHYWxsZXJ5MiwgdGhlIG9wZW4gc291cmNlIHdlYiBiYXNlZCBwaG90byBhbGJ1bSBvcmdhbml6ZXIgaXMgb25lIG9mIHRoZSBtb3N0IHBvcHVsYXIgcGhwIHdlYiBhcHBsaWNhdGlvbnMgYXZhaWxhYmxlIHRvZGF5LiBHYWxsZXJ5MiBzdWZmZXJzIGZyb20gYSBudW1iZXIgb2YgdnVsbmVyYWJpbGl0aWVzIGluY2x1ZGluZyBJUCBTcG9vZmluZyB2aWEgWF9GT1JXQVJERURfRk9SIHRoYXQgbWF5IGFsbG93IGEgbWFsaWNpb3VzIHVzZXIgdG8gaGlkZSB0aGVpciBpZGVudGl0eSwgc2NyaXB0IGluamVjdGlvbiB2aWEgdGhlIGZhdWx0eSBYX0ZPUldBUkRFRF9GT1IgaW1wbGVtZW50YXRpb24sIGFuZCBhbHNvIGFyYml0cmFyeSBmaWxlIGFjY2VzcyB3aGljaCBjb3VsZCB1bHRpbWF0ZWx5IGxlYWQgdG8gdGhlIGRlbGV0aW9uIG9mIGFyYml0cmFyeSBmaWxlcyBvbiB0aGUgd2Vic2VydmVyLiBBIG5ldyB2ZXJzaW9uIG9mIEdhbGxlcnkgMiBoYXMgYmVlbiByZWxlYXNlZCBhbmQgdXNlcnMgc2hvdWxkIHVwZ3JhZGUgdGhlaXIgR2FsbGVyeSAyIGluc3RhbGxhdGlvbnMuIA0KDQoNCklQIFNwb29maW5nOg0KVGhlcmUgaXMgYW4gaXNzdWUgd2l0aCBHYWxsZXJ5MiB0aGF0IGFsbG93cyBmb3IgdXNlcnMgdG8gcGVyZm9ybSBhY3Rpb25zIGFub255bW91c2x5IGJ5IHNwb29maW5nIHRoZWlyIGlkZW50aXR5IHdpdGggYSBib2d1cyBYX0ZPUldBUkRFRF9GT1IgSFRUUCBIZWFkZXIuIA0KDQpmdW5jdGlvbiBnZXRSZW1vdGVIb3N0QWRkcmVzcygpIHsNCmlmIChpc3NldCgkX1NFUlZFUlsnSFRUUF9YX0ZPUldBUkRFRF9GT1InXSkpIHsNCiAgICAkaXAgPSAkX1NFUlZFUlsnSFRUUF9YX0ZPUldBUkRFRF9GT1InXTsNCn0gZWxzZSBpZiAoaXNzZXQoJF9TRVJWRVJbJ0hUVFBfQ0xJRU5UX0lQJ10pKSB7DQogICAgJGlwID0gJF9TRVJWRVJbJ0hUVFBfQ0xJRU5UX0lQJ107DQp9IGVsc2UgaWYgKGlzc2V0KCRfU0VSVkVSWydSRU1PVEVfQUREUiddKSkgew0KICAgICRpcCA9ICRfU0VSVkVSWydSRU1PVEVfQUREUiddOw0KfSBlbHNlIHsNCiAgICByZXR1cm4gbnVsbDsNCn0NCnJldHVybiAkaXA7DQp9DQoNClRoZSBhYm92ZSBjb2RlIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgcHJldmlvdXNseSBtZW50aW9uZWQgcHJvYmxlbSBiZWNhdXNlIGl0IGFsbG93cyB0aGUgcG9zc2libHkgdXNlciBzdXBwbGllZCBoZWFkZXIgWF9GT1JXQVJERURfRk9SIHRvIHRha2UgcHJlY2VkZW5jZSBvdmVyIFJFTU9URV9BRERSLiBVbmZvcnR1bmF0ZWx5IHRoaXMgc2FtZSBpc3N1ZXMgY2FuIGJlIGxldmVyZWdlZCB0byBjYXJyeSBvdXQgbW9yZSBzaW5pc3RlciBhdHRhY2tzLiANCg0KDQpTY3JpcHQgSW5qZWN0aW9uOg0KQmVjYXVzZSB0aGUgSVAgQWRkcmVzcyByZXR1cm5lZCBieSBHYWxsZXJ5MiBpcyB0aG91Z2h0IHRvIGJlIHNhZmUgdGhlcmUgYXJlIGEgbnVtYmVyIG9mIG90aGVyIGlzc3VlcyB0aGF0IGNhbiBiZSBleHBsb2l0ZWQgYnkgc2VuZGluZyBhIGJvZ3VzIFhfRk9SV0FSREVEX0ZPUiBoZWFkZXIuIEZvciBleGFtcGxlLCB3aGVuIGFkZGluZyBjb21tZW50cyBpbiBhbiBhbGJ1bSB0aGUgdXNlcidzIElQIGlzIGxvZ2dlZCBhbmQgZGlzcGxheWVkIGFsb25nIHdpdGggc2FpZCBjb21tZW50LiBUaGlzIGNvdWxkIGJlIHVzZWQgdG8gZXhlY3V0ZSBhcmJpdHJhcnkgY2xpZW50IHNpZGUgY29kZSBzdWNoIGFzIEphdmFTY3JpcHQgaW4gdGhlIGNvbnRleHQgb2YgYSB1c2VyJ3MgKGFkbWluLCBtYXliZT8pIGJyb3dzZXIuIA0KDQoNCkFyYml0cmFyeSBGaWxlIEFjY2VzczoNCkdhbGxlcnkyIGlzIHZ1bG5lcmFibGUgdG8gYW4gYXJiaXRyYXJ5IGZpbGUgYWNjZXNzIGlzc3VlIHdpdGhpbiBpdCdzIHNlc3Npb24gaGFuZGxpbmcgY2xhc3MuIFRoaXMgdnVsbmVyYWJpbGl0eSBhbGxvd3MgZm9yIGFuIGF0dGFja2VyIHRvIHBvc3NpYmx5IGFjY2VzcyBjZXJ0YWluIGZpbGUgaW5mb3JtYXRpb24sIGFuZCBkZWxldGUgYXJiaXRyYXJ5IGZpbGVzIG9uIHRoZSB3ZWIgc2VydmVyLiAoc3VjaCBhcyB0aGUgY29uZmlnIGZpbGUgb3IgYWNjZXNzIGNvbnRyb2wgZmlsZXMgbGlrZSAuaHRhY2Nlc3MpIA0KDQpmdW5jdGlvbiBfaXNTZXNzaW9uVmFsaWQoKSB7DQpnbG9iYWwgJGdhbGxlcnk7DQokcGxhdGZvcm0gPSAkZ2FsbGVyeS0+Z2V0UGxhdGZvcm0oKTsNCg0KaWYgKCFlbXB0eSgkdGhpcy0+X3Nlc3Npb25JZCkpIHsNCiAgICAvKiBDaGVjayBpZiB0aGUgc2Vzc2lvbiBoYXMgZXhwaXJlZCAqLw0KICAgICRzZXNzaW9uRmlsZSA9ICRnYWxsZXJ5LT5nZXRDb25maWcoJ2RhdGEuZ2FsbGVyeS5zZXNzaW9ucycpIC4gJHRoaXMtPl9zZXNzaW9uSWQ7DQogICAgaWYgKCRwbGF0Zm9ybS0+ZmlsZV9leGlzdHMoJHNlc3Npb25GaWxlKSkgew0KCWxpc3QgKCRyZXQsICRsaWZldGltZSkgPQ0KCSAgICBHYWxsZXJ5Q29yZUFwaTo6Z2V0UGx1Z2luUGFyYW1ldGVyKCdtb2R1bGUnLCAnY29yZScsICdzZXNzaW9uLmxpZmV0aW1lJyk7DQoJaWYgKCRyZXQtPmlzRXJyb3IoKSkgew0KCSAgICByZXR1cm4gYXJyYXkoJHJldC0+d3JhcChfX0ZJTEVfXywgX19MSU5FX18pLCBudWxsKTsNCgl9DQoJbGlzdCAoJHJldCwgJGluYWN0aXZpdHlUaW1lb3V0KSA9DQoJICAgIEdhbGxlcnlDb3JlQXBpOjpnZXRQbHVnaW5QYXJhbWV0ZXIoJ21vZHVsZScsICdjb3JlJywNCgkJCQkJICAgICAgICdzZXNzaW9uLmluYWN0aXZpdHlUaW1lb3V0Jyk7DQoJaWYgKCRyZXQtPmlzRXJyb3IoKSkgew0KCSAgICByZXR1cm4gYXJyYXkoJHJldC0+d3JhcChfX0ZJTEVfXywgX19MSU5FX18pLCBudWxsKTsNCgl9DQoJJGxpZmV0aW1lQ3V0b2ZmID0gdGltZSgpIC0gJGxpZmV0aW1lOw0KCSRpbmFjdGl2ZUN1dG9mZiA9IHRpbWUoKSAtICRpbmFjdGl2aXR5VGltZW91dDsNCgkkc3RhdERhdGEgPSAkcGxhdGZvcm0tPnN0YXQoJHNlc3Npb25GaWxlKTsNCglpZiAoJHN0YXREYXRhWydtdGltZSddIDwgJGluYWN0aXZlQ3V0b2ZmIHx8ICRzdGF0RGF0YVsnY3RpbWUnXSA8ICRsaWZldGltZUN1dG9mZikgew0KCSAgICAvKiBUaGUgc2Vzc2lvbiBoYXMgdGltZWQgb3V0LCByZW1vdmUgaXQgKi8NCgkgICAgJHBsYXRmb3JtLT51bmxpbmsoJHNlc3Npb25GaWxlKTsNCgl9IGVsc2Ugew0KCSAgICByZXR1cm4gYXJyYXkoR2FsbGVyeVN0YXR1czo6c3VjY2VzcygpLCB0cnVlKTsNCgl9DQogICAgfSBlbHNlIHsNCglyZXR1cm4gYXJyYXkoR2FsbGVyeVN0YXR1czo6c3VjY2VzcygpLCB0cnVlKTsNCiAgICB9DQp9DQpyZXR1cm4gYXJyYXkoR2FsbGVyeVN0YXR1czo6c3VjY2VzcygpLCBmYWxzZSk7DQp9DQoNClRoZSBhYm92ZSBjb2RlIGlzIHRoZSBmdW5jdGlvbiBmcm9tIHRoZSBHYWxsZXJ5MiBzZXNzaW9uIGNsYXNzIHRoYXQgY2hlY2tzIHRvIHNlZSB3aGV0aGVyIG9yIG5vdCBhIHNlc3Npb24gaXMgdmFsaWQuIFVuZm9ydHVuYXRlbHkgdGhpcyBjb2RlLCBsaWtlIG1vc3Qgb2YgdGhlIGNvZGUgaW4gdGhlIHNlc3Npb24gY2xhc3MgcmVsaWVzIG9uIHRoZSB2YWx1ZSBvZiAkdGhpcy0+X3Nlc3Npb25JZCB0byBiZSB2YWxpZC4gSG93ZXZlciwgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHRoZSBzZXNzaW9uIGNsYXNzIGEgY2hlY2sgaXMgbWFkZSBmb3IgYSBzZXNzaW9uIGNvb2tpZSwgYW5kIGlmIHRoYXQgY29va2llIGlzIHByZXNlbnQgdGhlbiBpdCBpcyBibGluZGx5IGxvYWRlZCBpbnRvIF9zZXNzaW9uSWQgd2l0aCBhYnNvbHV0ZWx5IG5vIHNhbml0YXRpb24uIA0KKiBTYW5pdGl6ZSB0aGUgc2Vzc2lvbiBpZCAod2hpY2ggbWF5IGhhdmUgY29tZSBmcm9tIHVzZXIgaW5wdXQpIHRvDQoqIGF2b2lkIHBvc3NpYmx5IHdyaXRpbmcgb3V0c2lkZSB0aGUgc2Vzc2lvbiBzdG9yYWdlIGRpci4NCiovDQokdGhpcy0+X3Nlc3Npb25JZCA9IHByZWdfcmVwbGFjZSgnL1teYS16QS1aMC05XS8nLCAnJywgJHRoaXMtPl9zZXNzaW9uSWQpOw0KDQpUaGUgYWJvdmUgY29kZSBET0VTIHNhbml0aXplIHRoZSBzZXNzaW9uIGlkLCBidXQgbm90IHVudGlsIGFmdGVyIHRoZSBzZXNzaW9uIGlkIGlzIGFscmVhZHkgc2VudCB0byB0aGUgX2lzU2Vzc2lvblZhbGlkKCkgZnVuY3Rpb24uIFNvLCBpdCBpcyBubyBwcm9ibGVtIGZvciBhbiBhdHRhY2tlciB0byBzcGVjaWZ5IGEgcGF0aCBvdXRzaWRlIG9mIHRoZSB3ZWIgZGlyZWN0b3J5LCBhbmQgYmVjYXVzZSB0aGVyZSBpcyBub3RoaW5nIGZvbGxvd2luZyB0aGUgdXNlciBzdXBwbGllZCBkYXRhIHdpdGhpbiB0aGUgY29uc3RydWN0ZWQgJHNlc3Npb25GaWxlIHBhdGgsIHRoZXJlIGlzIG5vIG5lZWQgdG8gc3BlY2lmeSBhIG51bGwgYnl0ZS4gU28sIHRoaXMgd29ya3Mgd2l0aCBtYWdpYyBxdW90ZXMgb24gYXMgd2VsbCBhcyB3aXRoIG1hZ2ljIHF1b3RlcyBvZmYuIFRoaXMgY291bGQgbGVhZCB0byBvdGhlciBhdHRhY2tzIHN1Y2ggYXMgZ2FpbmluZyBhY2Nlc3MgdG8gYSByZXN0cmljdGVkIHdlYiBkaXJlY3RvcnkgYnkgZGVsZXRpbmcgYSAuaHRhY2Nlc3MgZmlsZSB1c2luZyB0aGUgcHJldmlvdXNseSBtZW50aW9uZWQgdnVsbmVyYWJpbGl0eS4gDQoNCg0KU29sdXRpb246DQpUaGFua3MgdG8gQmhhcmF0IE1lZGlyYXR0YSBmb3IgYSB2ZXJ5IHByb21wdCByZXNvbHV0aW9uIHRvIHRoZXNlIGlzc3Vlcy4gQSBuZXcgdmVyc2lvbiBvZiBHYWxsZXJ5IDIgaGFzIGJlZW4gcmVsZWFzZWQgdG9kYXkuIA0KDQpodHRwOi8vZ2FsbGVyeS5tZW5hbHRvLmNvbS9nYWxsZXJ5XzIuMC4zX3JlbGVhc2VkIA0KDQpVc2VycyBzaG91bGQgdXBncmFkZSB0aGVpciBHYWxsZXJ5IDIgaW5zdGFsbGF0aW9ucyBhcyBzb29uIGFzIHBvc3NpYmxlIHRvIHRoZSBsYXRlc3QgYXZhaWxhYmxlIHZlcnNpb24uIA0KDQoNCkNyZWRpdHM6DQpKYW1lcyBCZXJjZWdheSBvZiB0aGUgR3VsZlRlY2ggU2VjdXJpdHkgUmVzZWFyY2ggVGVhbQ==", 
    "id": "43837", 
    "cves": [
        "CVE-2006-1128", 
        "CVE-2006-1127"
    ]
}