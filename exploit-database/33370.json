{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/webapps/33370.html", 
    "id": "33370", 
    "cves": [
        "CVE-2014-3120"
    ]
}