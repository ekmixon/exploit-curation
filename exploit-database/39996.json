{
    "source": "exploit-database", 
    "exploit": "QXBwbGljYXRpb246IFNBUCBOZXRXZWF2ZXIgQVMgSkFWQQ0KDQpWZXJzaW9ucyBBZmZlY3RlZDogU0FQIE5ldFdlYXZlciAgQVMgSkFWQSA3LjEgLSA3LjUNCg0KVmVuZG9yIFVSTDogaHR0cDovL1NBUC5jb20NCg0KQnVnOiBEaXJlY3RvcnkgdHJhdmVyc2FsDQoNClNlbnQ6ICAyOS4wOS4yMDE1DQoNClJlcG9ydGVkOiAyOS4wOS4yMDE1DQoNClZlbmRvciByZXNwb25zZTogMzAuMDkuMjAxNQ0KDQpEYXRlIG9mIFB1YmxpYyBBZHZpc29yeTogMDguMDMuMjAxNg0KDQpSZWZlcmVuY2U6IFNBUCBTZWN1cml0eSBOb3RlIDIyMzQ5NzENCg0KQXV0aG9yOiAgICAgICAgIFZhaGFnbiBWYXJkYW55YW4gIChFUlBTY2FuKQ0KDQoNCg0KDQpEZXNjcmlwdGlvbg0KDQoNCjEuIEFEVklTT1JZIElORk9STUFUSU9ODQoNClRpdGxlOiBbRVJQU0NBTi0xNi0wMTJdIFNBUCBOZXRXZWF2ZXIgQVMgSmF2YSBkaXJlY3RvcnkgdHJhdmVyc2FsIHZ1bG5lcmFiaWxpdHkNCg0KQWR2aXNvcnkgSUQ6IFtFUlBTQ0FOLTE2LTAxMl0NCg0KUmlzazogbWVkaXVtDQoNCkFkdmlzb3J5IFVSTDogaHR0cHM6Ly9lcnBzY2FuLmNvbS9hZHZpc29yaWVzL2VycHNjYW4tMTYtMDEyLw0KDQpEYXRlIHB1Ymxpc2hlZDogMDguMDMuMjAxNg0KDQpWZW5kb3JzIGNvbnRhY3RlZDogU0FQDQoNCg0KMi4gVlVMTkVSQUJJTElUWSBJTkZPUk1BVElPTg0KDQpDbGFzczogZGlyZWN0b3J5IHRyYXZlcnNhbA0KDQpJbXBhY3Q6IHJlbW90ZWx5IHJlYWQgZmlsZSBmcm9tIHNlcnZlcg0KDQpSZW1vdGVseSBFeHBsb2l0YWJsZTogWWVzDQoNCkxvY2FsbHkgRXhwbG9pdGFibGU6IE5vDQoNCkNWRS0yMDE2LTM5NzYNCg0KDQpDVlNTIEluZm9ybWF0aW9uDQoNCkNWU1MgQmFzZSBTY29yZSB2MzogIDcuNSAgLyAxMA0KDQpDVlNTIEJhc2UgVmVjdG9yOg0KDQpBViA6IEF0dGFjayBWZWN0b3IgKFJlbGF0ZWQgZXhwbG9pdCByYW5nZSkgTmV0d29yayAoTikNCg0KQUMgOiBBdHRhY2sgQ29tcGxleGl0eSAoUmVxdWlyZWQgYXR0YWNrIGNvbXBsZXhpdHkpIExvdyAoTCkNCg0KUFIgOiBQcml2aWxlZ2VzIFJlcXVpcmVkIChMZXZlbCBvZiBwcml2aWxlZ2VzIG5lZWRlZCB0byBleHBsb2l0KSBOb25lIChOKQ0KDQpVSSA6IFVzZXIgSW50ZXJhY3Rpb24gKFJlcXVpcmVkIHVzZXIgcGFydGljaXBhdGlvbikgTm9uZSAoTikNCg0KUyA6IFNjb3BlIChDaGFuZ2UgaW4gc2NvcGUgZHVlIHRvIGltcGFjdCBjYXVzZWQgdG8gY29tcG9uZW50cyBiZXlvbmQNCnRoZSB2dWxuZXJhYmxlIGNvbXBvbmVudCkgQ2hhbmdlZCAoQykNCg0KQyA6IEltcGFjdCB0byBDb25maWRlbnRpYWxpdHkgTG93IChMKQ0KDQpJIDogSW1wYWN0IHRvIEludGVncml0eSBOb25lIChOKQ0KDQpBIDogSW1wYWN0IHRvIEF2YWlsYWJpbGl0eSBOb25lIChOKQ0KDQoNCg0KMy4gVlVMTkVSQUJJTElUWSBERVNDUklQVElPTg0KDQpBbiBhdXRob3JpemVkIGF0dGFja2VyIGNhbiB1c2UgYSBzcGVjaWFsIHJlcXVlc3QgdG8gcmVhZCBmaWxlcyBmcm9tDQp0aGUgc2VydmVyIGFuZCB0aGVuIGVzY2FsYXRlIGhpcyBvciBoZXIgcHJpdmlsZWdlcy4NCg0KDQoNCg0KNC4gVlVMTkVSQUJMRSBQQUNLQUdFUw0KDQpTQVAgTmV0V2VhdmVyIEFTIEpBVkEgNy4xIC0gNy41DQoNCk90aGVyIHZlcnNpb25zIGFyZSBwcm9iYWJseSBhZmZlY3RlZCB0b28sIGJ1dCB0aGV5IHdlcmUgbm90IGNoZWNrZWQuDQoNCg0KNS4gU09MVVRJT05TIEFORCBXT1JLQVJPVU5EUw0KDQpUbyBjb3JyZWN0IHRoaXMgdnVsbmVyYWJpbGl0eSwgaW5zdGFsbCBTQVAgU2VjdXJpdHkgTm90ZSAyMjM0OTcxDQoNCg0KDQo2LiBBVVRIT1INCg0KVmFoYWduIFZhcmRhbnlhbiAgKEVSUFNjYW4pDQoNCg0KDQo3LiBURUNITklDQUwgREVTQ1JJUFRJT04NCg0KQW4gYXR0YWNrZXIgY2FuIHVzZSBhbiBTQVAgTmV0V2VhdmVyIGZ1bmN0aW9uIENyYXNoRmlsZURvd25sb2FkU2VydmxldA0KdG8gcmVhZCBmaWxlcyBmcm9tIHRoZSBzZXJ2ZXIuDQoNCg0KUG9DDQoNCg0KR0VUIC9YWFgvQ3Jhc2hGaWxlRG93bmxvYWRTZXJ2bGV0P2ZpbGVOYW1lPS4uXHNlY3VyaXR5XGRhdGFcU2VjU3RvcmUua2V5DQoNCg0KRGlzY2xhaW1lcjogQWNjb3JkaW5nIHRvIHRoZSBwYXJ0bmVyc2hpcCBhZ3JlZW1lbnQgYmV0d2VlbiBFUlBTY2FuIGFuZA0KU0FQLCBvdXIgY29tcGFueSBpcyBub3QgZW50aXRsZWQgdG8gcHVibGlzaCBhbnkgZGV0YWlsZWQgaW5mb3JtYXRpb24NCmFib3V0IGRldGVjdGVkIHZ1bG5lcmFiaWxpdGllcyBiZWZvcmUgU0FQIHJlbGVhc2VzIGEgcGF0Y2guIEFmdGVyIHRoZQ0KcmVsZWFzZSwgU0FQIHN1Z2dlc3RzIHJlc3BlY3RpbmcgYW4gaW1wbGVtZW50YXRpb24gdGltZSBvZiB0aHJlZQ0KbW9udGhzIGFuZCBhc2tzIHNlY3VyaXR5IHJlc2VhcmNoZXJzIHRvIG5vdCB0byByZXZlYWwgYW55IGRldGFpbHMNCmR1cmluZyB0aGlzIHRpbWUuIEhvd2V2ZXIsIEluIHRoaXMgY2FzZSwgdGhlIHZ1bG5lcmFiaWxpdHkgYWxsb3dzIGFuDQphdHRhY2tlciB0byByZWFkIGFyYml0cmFyeSBmaWxlcyBvbiBhIHJlbW90ZSBzZXJ2ZXIsIHBvc3NpYmx5DQpkaXNjbG9zaW5nIGNvbmZpZGVudGlhbCBpbmZvcm1hdGlvbiwgYW5kIG1hbnkgc3VjaCBzZXJ2aWNlcyBhcmUNCmV4cG9zZWQgdG8gdGhlIEludGVybmV0LiBBcyByZXNwb25zaWJsZSBzZWN1cml0eSByZXNlYXJjaGVycywgRVJQU2Nhbg0KdGVhbSBtYWRlIGEgZGVjaXNpb24gbm90IHRvIGRpc3NlbWluYXRlIHRoZSBmdWxsIFBvQyBldmVuIGFmdGVyIHRoZQ0Kc3BlY2lmaWVkIHRpbWUuDQoNCg0KDQo4LiBSRVBPUlQgVElNRUxJTkUNCg0KU2VuZDogMjkuMDkuMjAxNQ0KDQpSZXBvcnRlZDogMjkuMDkuMjAxNQ0KDQpWZW5kb3IgcmVzcG9uc2U6IDMwLjA5LjIwMTUNCg0KRGF0ZSBvZiBQdWJsaWMgQWR2aXNvcnk6IDA4LjAzLjIwMTYNCg0KDQoNCg0KOS4gUkVGRVJFTkNFUw0KDQpodHRwczovL2VycHNjYW4uY29tL2Fkdmlzb3JpZXMvZXJwc2Nhbi0xNi0wMTIvDQoNCg0KMTAuIEFCT1VUIEVSUFNjYW4gUmVzZWFyY2gNCg0KVGhlIGNvbXBhbnnigJlzIGV4cGVydGlzZSBpcyBiYXNlZCBvbiB0aGUgcmVzZWFyY2ggc3ViZGl2aXNpb24gb2YNCkVSUFNjYW4sIHdoaWNoIGlzIGVuZ2FnZWQgaW4gdnVsbmVyYWJpbGl0eSByZXNlYXJjaCBhbmQgYW5hbHlzaXMgb2YNCmNyaXRpY2FsIGVudGVycHJpc2UgYXBwbGljYXRpb25zLiBJdCBoYXMgYWNoaWV2ZWQgbXVsdGlwbGUNCmFja25vd2xlZGdtZW50cyBmcm9tIHRoZSBsYXJnZXN0IHNvZnR3YXJlIHZlbmRvcnMgbGlrZSBTQVAsIE9yYWNsZSwNCk1pY3Jvc29mdCwgSUJNLCBWTXdhcmUsIEhQIGZvciBkaXNjb3ZlcmluZyBtb3JlIHRoYW4gNDAwDQp2dWxuZXJhYmlsaXRpZXMgaW4gdGhlaXIgc29sdXRpb25zICgyMDAgb2YgdGhlbSBqdXN0IGluIFNBUCEpLg0KDQpFUlBTY2FuIHJlc2VhcmNoZXJzIGFyZSBwcm91ZCB0byBoYXZlIGV4cG9zZWQgbmV3IHR5cGVzIG9mDQp2dWxuZXJhYmlsaXRpZXMgKFRPUCAxMCBXZWIgSGFja2luZyBUZWNobmlxdWVzIDIwMTIpIGFuZCB0byBiZQ0Kbm9taW5hdGVkIGZvciB0aGUgYmVzdCBzZXJ2ZXItc2lkZSB2dWxuZXJhYmlsaXR5IGF0IEJsYWNrSGF0IDIwMTMuDQoNCkVSUFNjYW4gZXhwZXJ0cyBoYXZlIGJlZW4gaW52aXRlZCB0byBzcGVhaywgcHJlc2VudCwgYW5kIHRyYWluIGF0IDYwKw0KcHJpbWUgaW50ZXJuYXRpb25hbCBzZWN1cml0eSBjb25mZXJlbmNlcyBpbiAyNSsgY291bnRyaWVzIGFjcm9zcyB0aGUNCmNvbnRpbmVudHMuIFRoZXNlIGluY2x1ZGUgQmxhY2tIYXQsIFJTQSwgSElUQiwgYW5kIHByaXZhdGUgU0FQDQp0cmFpbmluZ3MgaW4gc2V2ZXJhbCBGb3J0dW5lIDIwMDAgY29tcGFuaWVzLg0KDQpFUlBTY2FuIHJlc2VhcmNoZXJzIGxlYWQgdGhlIHByb2plY3QgRUFTLVNFQywgd2hpY2ggaXMgZm9jdXNlZCBvbg0KZW50ZXJwcmlzZSBhcHBsaWNhdGlvbiBzZWN1cml0eSByZXNlYXJjaCBhbmQgYXdhcmVuZXNzLiBUaGV5IGhhdmUNCnB1Ymxpc2hlZCAzIGV4aGF1c3RpdmUgYW5udWFsIGF3YXJkLXdpbm5pbmcgc3VydmV5cyBhYm91dCBTQVANCnNlY3VyaXR5Lg0KDQpFUlBTY2FuIGV4cGVydHMgaGF2ZSBiZWVuIGludGVydmlld2VkIGJ5IGxlYWRpbmcgbWVkaWEgcmVzb3VyY2VzIGFuZA0KZmVhdHVyZWQgaW4gc3BlY2lhbGl6ZWQgaW5mby1zZWMgcHVibGljYXRpb25zIHdvcmxkd2lkZS4gVGhlc2UgaW5jbHVkZQ0KUmV1dGVycywgWWFob28sIFNDIE1hZ2F6aW5lLCBUaGUgUmVnaXN0ZXIsIENJTywgUEMgV29ybGQsIERhcmtSZWFkaW5nLA0KSGVpc2UsIGFuZCBDaGluYWJ5dGUsIHRvIG5hbWUgYSBmZXcuDQoNCldlIGhhdmUgaGlnaGx5IHF1YWxpZmllZCBleHBlcnRzIGluIHN0YWZmIHdpdGggZXhwZXJpZW5jZSBpbiBtYW55DQpkaWZmZXJlbnQgZmllbGRzIG9mIHNlY3VyaXR5LCBmcm9tIHdlYiBhcHBsaWNhdGlvbnMgYW5kDQptb2JpbGUvZW1iZWRkZWQgdG8gcmV2ZXJzZSBlbmdpbmVlcmluZyBhbmQgSUNTL1NDQURBIHN5c3RlbXMsDQphY2N1bXVsYXRpbmcgdGhlaXIgZXhwZXJpZW5jZSB0byBjb25kdWN0IHRoZSBiZXN0IFNBUCBzZWN1cml0eQ0KcmVzZWFyY2guDQoNCg0KDQoxMS4gQUJPVVQgRVJQU2Nhbg0KDQpFUlBTY2FuIGlzIHRoZSBtb3N0IHJlc3BlY3RlZCBhbmQgY3JlZGlibGUgQnVzaW5lc3MgQXBwbGljYXRpb24NClNlY3VyaXR5IHByb3ZpZGVyLiBGb3VuZGVkIGluIDIwMTAsIHRoZSBjb21wYW55IG9wZXJhdGVzIGdsb2JhbGx5IGFuZA0KZW5hYmxlcyBsYXJnZSBPaWwgYW5kIEdhcywgRmluYW5jaWFsIGFuZCBSZXRhaWwgb3JnYW5pemF0aW9ucyB0bw0Kc2VjdXJlIHRoZWlyIG1pc3Npb24tY3JpdGljYWwgcHJvY2Vzc2VzLiBOYW1lZCBhcyBhbiDigJhFbWVyZ2luZyBWZW5kb3LigJkNCmluIFNlY3VyaXR5IGJ5IENSTiwgbGlzdGVkIGFtb25nIOKAnFRPUCAxMDAgU0FQIFNvbHV0aW9uIHByb3ZpZGVyc+KAnSBhbmQNCmRpc3Rpbmd1aXNoZWQgYnkgMzArIG90aGVyIGF3YXJkcywgRVJQU2NhbiBpcyB0aGUgbGVhZGluZyBTQVAgU0UNCnBhcnRuZXIgaW4gZGlzY292ZXJpbmcgYW5kIHJlc29sdmluZyBzZWN1cml0eSB2dWxuZXJhYmlsaXRpZXMuIEVSUFNjYW4NCmNvbnN1bHRhbnRzIHdvcmsgd2l0aCBTQVAgU0UgaW4gV2FsbGRvcmYgdG8gYXNzaXN0IGluIGltcHJvdmluZyB0aGUNCnNlY3VyaXR5IG9mIHRoZWlyIGxhdGVzdCBzb2x1dGlvbnMuDQoNCkVSUFNjYW7igJlzIHByaW1hcnkgbWlzc2lvbiBpcyB0byBjbG9zZSB0aGUgZ2FwIGJldHdlZW4gdGVjaG5pY2FsIGFuZA0KYnVzaW5lc3Mgc2VjdXJpdHksIGFuZCBwcm92aWRlIHNvbHV0aW9ucyB0byBldmFsdWF0ZSBhbmQgc2VjdXJlIFNBUA0KYW5kIE9yYWNsZSBFUlAgc3lzdGVtcyBhbmQgYnVzaW5lc3MtY3JpdGljYWwgYXBwbGljYXRpb25zIGZyb20gYm90aCwNCmN5YmVyLWF0dGFja3MgYXMgd2VsbCBhcyBpbnRlcm5hbCBmcmF1ZC4gVXN1YWxseSBvdXIgY2xpZW50cyBhcmUgbGFyZ2UNCmVudGVycHJpc2VzLCBGb3J0dW5lIDIwMDAgY29tcGFuaWVzIGFuZCBtYW5hZ2VkIHNlcnZpY2UgcHJvdmlkZXJzDQp3aG9zZSByZXF1aXJlbWVudHMgYXJlIHRvIGFjdGl2ZWx5IG1vbml0b3IgYW5kIG1hbmFnZSBzZWN1cml0eSBvZiB2YXN0DQpTQVAgbGFuZHNjYXBlcyBvbiBhIGdsb2JhbCBzY2FsZS4NCg0KV2Ug4oCYZm9sbG93IHRoZSBzdW7igJkgYW5kIGZ1bmN0aW9uIGluIHR3byBodWJzLCBsb2NhdGVkIGluIHRoZSBQYWxvIEFsdG8NCmFuZCBBbXN0ZXJkYW0gdG8gcHJvdmlkZSB0aHJlYXQgaW50ZWxsaWdlbmNlIHNlcnZpY2VzLCBhZ2lsZSBzdXBwb3J0DQphbmQgb3BlcmF0ZSBsb2NhbCBvZmZpY2VzIGFuZCBwYXJ0bmVyIG5ldHdvcmsgc3Bhbm5pbmcgMjArIGNvdW50cmllcw0KYXJvdW5kIHRoZSBnbG9iZS4=", 
    "filename": "platforms/java/webapps/39996.txt", 
    "id": "39996", 
    "cves": [
        "CVE-2016-3976"
    ]
}