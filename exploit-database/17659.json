{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/17659.rb", 
    "id": "17659", 
    "cves": [
        "CVE-2010-0480"
    ]
}