{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/local/42382.rb", 
    "id": "42382", 
    "cves": [
        "CVE-2015-0096", 
        "CVE-2017-8464"
    ]
}