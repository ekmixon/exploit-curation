{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/41361.txt", 
    "id": "41361", 
    "cves": [
        "CVE-2016-9315", 
        "CVE-2016-9314", 
        "CVE-2016-9316", 
        "CVE-2016-9269"
    ]
}