{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/multiple/remote/24084.py", 
    "id": "24084", 
    "cves": [
        "CVE-2012-6096"
    ]
}