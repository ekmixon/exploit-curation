{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/webapps/38514.py", 
    "id": "38514", 
    "cves": [
        "CVE-2015-4051"
    ]
}