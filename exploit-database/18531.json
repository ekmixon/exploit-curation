{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/18531.html", 
    "id": "18531", 
    "cves": [
        "CVE-2011-2371"
    ]
}