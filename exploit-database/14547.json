{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/webapps/14547.txt", 
    "id": "14547", 
    "cves": [
        "CVE-2010-2709"
    ]
}