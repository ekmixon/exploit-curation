{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/win_x86/shellcode/14288.asm", 
    "id": "14288", 
    "cves": [
        "CVE-2010-0425"
    ]
}