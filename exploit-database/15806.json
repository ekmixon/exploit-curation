{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/remote/15806.txt", 
    "id": "15806", 
    "cves": [
        "CVE-2010-4566"
    ]
}