{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/dos/42433.txt", 
    "id": "42433", 
    "cves": [
        "CVE-2017-11661", 
        "CVE-2017-11662", 
        "CVE-2017-11663", 
        "CVE-2017-11664"
    ]
}