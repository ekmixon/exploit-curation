{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/xml/webapps/42517.txt", 
    "id": "42517", 
    "cves": [
        "CVE-2017-9978", 
        "CVE-2017-9979"
    ]
}