{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/15488.txt", 
    "id": "15488", 
    "cves": [
        "CVE-2010-2892"
    ]
}