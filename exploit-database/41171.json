{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/41171.txt", 
    "id": "41171", 
    "cves": [
        "CVE-2016-10156"
    ]
}