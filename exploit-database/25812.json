{
    "source": "exploit-database", 
    "exploit": "Q29yZSBTZWN1cml0eSAtIENvcmVsYWJzIEFkdmlzb3J5DQpodHRwOi8vY29yZWxhYnMuY29yZXNlY3VyaXR5LmNvbQ0KDQpUUC1MaW5rIElQIENhbWVyYXMgTXVsdGlwbGUgVnVsbmVyYWJpbGl0aWVzDQoNCjEuICpBZHZpc29yeSBJbmZvcm1hdGlvbioNCg0KVGl0bGU6IFRQLUxpbmsgSVAgQ2FtZXJhcyBNdWx0aXBsZSBWdWxuZXJhYmlsaXRpZXMNCkFkdmlzb3J5IElEOiBDT1JFLTIwMTMtMDMxOA0KQWR2aXNvcnkgVVJMOg0KaHR0cDovL3d3dy5jb3Jlc2VjdXJpdHkuY29tL2Fkdmlzb3JpZXMvdHAtbGluay1JUC1jYW1lcmFzLW11bHRpcGxlLXZ1bG5lcmFiaWxpdGllcw0KRGF0ZSBwdWJsaXNoZWQ6IDIwMTMtMDUtMjgNCkRhdGUgb2YgbGFzdCB1cGRhdGU6IDIwMTMtMDUtMjgNClZlbmRvcnMgY29udGFjdGVkOiBUUC1MaW5rDQpSZWxlYXNlIG1vZGU6IENvb3JkaW5hdGVkIHJlbGVhc2UNCg0KMi4gKlZ1bG5lcmFiaWxpdHkgSW5mb3JtYXRpb24qDQoNCkNsYXNzOiBVc2Ugb2YgaGFyZC1jb2RlZCBjcmVkZW50aWFscyBbQ1dFLTc5OF0sIE9TIGNvbW1hbmQgaW5qZWN0aW9uDQpbQ1dFLTc4XQ0KSW1wYWN0OiBDb2RlIGV4ZWN1dGlvbiwgU2VjdXJpdHkgYnlwYXNzDQpSZW1vdGVseSBFeHBsb2l0YWJsZTogWWVzDQpMb2NhbGx5IEV4cGxvaXRhYmxlOiBObw0KQ1ZFIE5hbWU6IENWRS0yMDEzLTI1NzIsIENWRS0yMDEzLTI1NzMNCg0KMy4gKlZ1bG5lcmFiaWxpdHkgRGVzY3JpcHRpb24qDQoNCk11bHRpcGxlIHZ1bG5lcmFiaWxpdGllcyBoYXZlIGJlZW4gZm91bmQgaW4gVFAtTGluayBJUCBjYW1lcmFzIGJhc2VkIG9uDQpmaXJtd2FyZSB2MS42LjE4UDEyIGFuZCBiZWxvdywgdGhhdCBjb3VsZCBhbGxvdyBhbiB1bmF1dGhlbnRpY2F0ZWQNCnJlbW90ZSBhdHRhY2tlcjoNCg0KICAgMS4gW0NWRS0yMDEzLTI1NzJdIHRvIGJ5cGFzcyB1c2VyIHdlYiBpbnRlcmZhY2UgYXV0aGVudGljYXRpb24gdXNpbmcNCmhhcmQtY29kZWQgY3JlZGVudGlhbHMuDQogICAyLiBbQ1ZFLTIwMTMtMjU3M10gdG8gZXhlY3V0ZSBhcmJpdHJhcnkgY29tbWFuZHMgZnJvbSB0aGUNCmFkbWluaXN0cmF0aW9uIHdlYiBpbnRlcmZhY2UuIFRoaXMgZmxhdyBjYW4gYWxzbyBiZSB1c2VkIHRvIG9idGFpbiBhbGwNCmNyZWRlbnRpYWxzIG9mIHJlZ2lzdGVyZWQgdXNlcnMuDQoNCjQuICpWdWxuZXJhYmxlIFBhY2thZ2VzKg0KDQogICAuIFRQLUxpbmsgSVAgY2FtZXJhcyBiYXNlZCBvbiBmaXJtd2FyZSB2MS42LjE4UDEyIGFuZCBiZWxvdy4NClRlc3RzIGFuZCBQb0Mgd2VyZSBydW4gb246DQoNCiAgIC4gVEwtU0MgMzEzMCBbQ1ZFLTIwMTMtMjU3Ml0gd29ya3Mgd2l0aCB0aGlzIGRldmljZSBvbmx5DQogICAuIFRMLVNDIDMxMzBHDQogICAuIFRMLVNDIDMxNzFHDQogICAuIFRMLVNDIDQxNzFHDQoNCk90aGVyIFRQLUxpbmsgY2FtZXJhcyBhbmQgZmlybXdhcmUgdmVyc2lvbnMgYXJlIHByb2JhYmx5IGFmZmVjdGVkIHRvbywNCmJ1dCB0aGV5IHdlcmUgbm90IGNoZWNrZWQuDQoNCjUuICpWZW5kb3IgSW5mb3JtYXRpb24sIFNvbHV0aW9ucyBhbmQgV29ya2Fyb3VuZHMqDQoNClZlbmRvciBwcm92aWRlcyB0aGUgbGlua3MgdG8gcGF0Y2hlZCBmaXJtd2FyZSB2ZXJzaW9ucy4gVGhpcyBzb2Z0d2FyZSBpcw0KKmJldGEqLCBUUC1MaW5rIHdpbGwgcmVsZWFzZSB0aGUgZmluYWwgdmVyc2lvbnMgd2l0aCByZWxlYXNlIG5vdGVzIGFuZA0Kc29tZSBuZXcgZnVuY3Rpb25zIGFuZCBmaXhlcyBpbiB0aGUgZm9sbG93aW5nIGRheXMuDQoNCiAgIC4gaHR0cDovL3d3dy50cC1saW5rLmNvbS9yZXNvdXJjZXMvc29mdHdhcmUvVEwtU0MzNDMwX1YxXzEzMDUyNy56aXANCiAgIC4gaHR0cDovL3d3dy50cC1saW5rLmNvbS9yZXNvdXJjZXMvc29mdHdhcmUvVEwtU0MzNDMwTl9WMV8xMzA1MjcuemlwDQogICAuIGh0dHA6Ly93d3cudHAtbGluay5jb20vcmVzb3VyY2VzL3NvZnR3YXJlL1RMLVNDMzEzMF9WMV8xMzA1MjcuemlwDQogICAuIGh0dHA6Ly93d3cudHAtbGluay5jb20vcmVzb3VyY2VzL3NvZnR3YXJlL1RMLVNDMzEzMEdfVjFfMTMwNTI3LnppcA0KICAgLiBodHRwOi8vd3d3LnRwLWxpbmsuY29tL3Jlc291cmNlcy9zb2Z0d2FyZS9UTC1TQzMxNzFfVjFfMTMwNTI3LnppcA0KICAgLiBodHRwOi8vd3d3LnRwLWxpbmsuY29tL3Jlc291cmNlcy9zb2Z0d2FyZS9UTC1TQzMxNzFHX1YxXzEzMDUyNy56aXANCiAgIC4gaHR0cDovL3d3dy50cC1saW5rLmNvbS9yZXNvdXJjZXMvc29mdHdhcmUvVEwtU0M0MTcxR19WMV8xMzA1MjcuemlwDQoNCjYuICpDcmVkaXRzKg0KDQpUaGVzZSB2dWxuZXJhYmlsaXRpZXMgd2VyZSBkaXNjb3ZlcmVkIGFuZCByZXNlYXJjaGVkIGJ5IE5haHVlbCBSaXZhIGFuZA0KRnJhbmNpc2NvIEZhbGNvbiBmcm9tIENvcmUgRXhwbG9pdCBXcml0ZXJzIFRlYW0uIFRoZSBwdWJsaWNhdGlvbiBvZiB0aGlzDQphZHZpc29yeSB3YXMgY29vcmRpbmF0ZWQgYnkgRmVybmFuZG8gTWlyYW5kYSBmcm9tIENvcmUgQWR2aXNvcmllcyBUZWFtLg0KDQo3LiAqVGVjaG5pY2FsIERlc2NyaXB0aW9uIC8gUHJvb2Ygb2YgQ29uY2VwdCBDb2RlKg0KDQo3LjEuICpIYXJkLUNvZGVkIENyZWRlbnRpYWxzIGluIEFkbWluaXN0cmF0aXZlIFdlYiBJbnRlcmZhY2UqDQoNCltDVkUtMjAxMy0yNTcyXSBUUC1MaW5rIElQIGNhbWVyYXMgdXNlIHRoZSBCb2Egd2ViIHNlcnZlciBbMV0sIGEgcG9wdWxhcg0KdGlueSBzZXJ2ZXIgZm9yIGVtYmVkZGVkIExpbnV4IGRldmljZXMuICdib2EuY29uZicgaXMgdGhlIEJvYQ0KY29uZmlndXJhdGlvbiBmaWxlLCBhbmQgdGhlIGZvbGxvd2luZyBhY2NvdW50IGNhbiBiZSBmb3VuZCBpbnNpZGU6DQoNCi8tLS0tLQ0KIyBNRlQ6IFNwZWNpZnkgbWFudWZhY3R1cmUgY29tbWFuZHMgdXNlciBuYW1lIGFuZCBwYXNzd29yZA0KTUZUIG1hbnVmYWN0dXJlIGVydXRjYWZ1bmFtDQotLS0tLS8NCg0KVGhpcyBhY2NvdW50IGlzIG5vdCB2aXNpYmxlIGZyb20gdGhlIHVzZXIgd2ViIGludGVyZmFjZTsgdXNlcnMgYXJlIG5vdA0KYXdhcmUgb2YgdGhlIGV4aXN0ZW5jZSBhbmQgY2Fubm90IGVsaW1pbmF0ZSBpdC4gVGhyb3VnaCB0aGlzIGFjY291bnQgaXQNCmlzIHBvc3NpYmxlIHRvIGFjY2VzcyB0d28gQ0dJIGZpbGVzIGxvY2F0ZWQgaW4gJy9jZ2ktYmluL21mdC8nOg0KDQogICAxLiAnbWFudWZhY3R1cmUuY2dpJw0KICAgMi4gJ3dpcmVsZXNzX21mdC5jZ2knDQoNClRoZSBsYXN0IGZpbGUgY29udGFpbnMgdGhlIE9TIGNvbW1hbmQgaW5qZWN0aW9uIHNob3dlZCBpbiB0aGUgZm9sbG93aW5nDQpzZWN0aW9uLg0KDQo3LjIuICpPUyBDb21tYW5kIEluamVjdGlvbiBpbiB3aXJlbGVzc19tZnQuY2dpKg0KDQpbQ1ZFLTIwMTMtMjU3M10gVGhlIGZpbGUgJy9jZ2ktYmluL21mdC93aXJlbGVzc19tZnQuY2dpJywgaGFzIGFuIE9TDQpjb21tYW5kIGluamVjdGlvbiBpbiB0aGUgcGFyYW1ldGVyICdhcCcgdGhhdCBjYW4gYmUgZXhwbG9pdGVkIHVzaW5nIHRoZQ0KaGFyZC1jb2RlZCBjcmVkZW50aWFscyBzaG93ZWQgaW4gdGhlIHByZXZpb3VzIHNlY3Rpb246DQoNCi8tLS0tLQ0KdXNlcm5hbWU6IG1hbnVmYWN0dXJlDQpwYXNzd29yZDogZXJ1dGNhZnVuYW0NCi0tLS0tLw0KDQpUaGUgZm9sbG93aW5nIHByb29mIG9mIGNvbmNlcHQgY29waWVzIHRoZSBmaWxlIHdoZXJlIHRoZSB1c2VyDQpjcmVkZW50aWFscyBhcmUgc3RvcmVkIGluIHRoZSB3ZWIgc2VydmVyIHJvb3QgZGlyZWN0b3J5Og0KDQovLS0tLS0NCmh0dHA6Ly8xOTIuMTY4LjEuMTAwL2NnaS1iaW4vbWZ0L3dpcmVsZXNzX21mdD9hcD10cmF2ZXN0aTtjcCUyMC92YXIvd3d3L3NlY3JldC5wYXNzd2QlMjAvd2ViL2h0bWwvY3JlZGVuY2lhbGVzDQotLS0tLS8NCg0KQWZ0ZXJ3YXJkcywgdGhlIHVzZXIgY3JlZGVudGlhbHMgY2FuIGJlIG9idGFpbmVkIGJ5IHJlcXVlc3Rpbmc6DQoNCi8tLS0tLQ0KaHR0cDovLzE5Mi4xNjguMS4xMDAvY3JlZGVuY2lhbGVzDQotLS0tLS8NCg0KOC4gKlJlcG9ydCBUaW1lbGluZSoNCg0KLiAyMDEzLTA0LTI5Og0KQ29yZSBTZWN1cml0eSBUZWNobm9sb2dpZXMgbm90aWZpZXMgdGhlIFRQLUxpbmsgQ3VzdG9tZXIgU3VwcG9ydCBvZiB0aGUNCnZ1bG5lcmFiaWxpdGllcy4gUHVibGljYXRpb24gZGF0ZSBpcyBzZXQgZm9yIE1heSAyOHRoLCAyMDEzLg0KDQouIDIwMTMtMDQtMzA6DQpUUC1MaW5rIHRlYW0gYXNrcyBmb3IgYSByZXBvcnQgd2l0aCB0ZWNobmljYWwgaW5mb3JtYXRpb24uDQoNCi4gMjAxMy0wNS0wMjoNClRlY2huaWNhbCBkZXRhaWxzIHNlbnQgdG8gVFAtTGluay4NCg0KLiAyMDEzLTA1LTEyOg0KVmVuZG9yIG5vdGlmaWVzIHRoYXQgYSBuZXcgZmlybXdhcmUgd2lsbCBiZSByZWxlYXNlZCBhcm91bmQgTWF5IDIwdGguDQoNCi4gMjAxMy0wNS0xNjoNCkNvcmUgYXNrcyB2ZW5kb3IgaWYgdGhleSBhcmUgcmVhZHkgZm9yIGNvb3JkaW5hdGVkIHB1YmxpYyBkaXNjbG9zdXJlIG9uDQpNYXkgMjB0aC4NCg0KLiAyMDEzLTA1LTE3Og0KVmVuZG9yIG5vdGlmaWVzIHRoYXQgdGhleSBoYXZlIGZpeGVkIHRoZSBmaXJtd2FyZSBidXQgdGhlIHRlc3RpbmcNCnByb2Nlc3Mgd29uJ3QgYmUgcmVhZHkgYmVmb3JlIE1heSAyNHRoLg0KDQouIDIwMTMtMDUtMjA6DQpDb3JlIG5vdGlmaWVzIHRoYXQgdGhlIGFkdmlzb3J5IHB1YmxpY2F0aW9uIHdhcyByZS1zY2hlZHVsZWQgZm9yIE1vbmRheQ0KMjd0aC4NCg0KLiAyMDEzLTA1LTIzOg0KVmVuZG9yIHNlbmRzIGEgY29weSBvZiB0aGUgYmV0YSBmaXJtd2FyZSBpbiBvcmRlciB0byBjb25maXJtIGlmIGlzc3Vlcw0Kd2VyZSBmaXhlZC4NCg0KLiAyMDEzLTA1LTI3Og0KVmVuZG9yIG5vdGlmaWVzIHRoYXQgY29uc3VtZXJzIGFyZSBhYmxlIHRvIGRvd25sb2FkIHRoZSBCZXRhIGZpcm13YXJlDQpmcm9tIFRQLUxpbmsgd2Vic2l0ZS4gVGhlIGZpbmFsIHJlbGVhc2Ugd2lsbCBiZSBtYWRlIHB1YmxpYyBpbiB0aGUNCmZvbGxvd2luZyBkYXlzLCBhbmQgd2lsbCBpbmNyZWFzZSBzb21lIG5ldyBmdW5jdGlvbnMuDQoNCi4gMjAxMy0wNS0yODoNCkFkdmlzb3J5IENPUkUtMjAxMy0wMzE4IHB1Ymxpc2hlZC4NCg0KOS4gKlJlZmVyZW5jZXMqDQoNClsxXSBodHRwOi8vd3d3LmJvYS5vcmcvLg0KDQoxMC4gKkFib3V0IENvcmVMYWJzKg0KDQpDb3JlTGFicywgdGhlIHJlc2VhcmNoIGNlbnRlciBvZiBDb3JlIFNlY3VyaXR5IFRlY2hub2xvZ2llcywgaXMgY2hhcmdlZA0Kd2l0aCBhbnRpY2lwYXRpbmcgdGhlIGZ1dHVyZSBuZWVkcyBhbmQgcmVxdWlyZW1lbnRzIGZvciBpbmZvcm1hdGlvbg0Kc2VjdXJpdHkgdGVjaG5vbG9naWVzLiBXZSBjb25kdWN0IG91ciByZXNlYXJjaCBpbiBzZXZlcmFsIGltcG9ydGFudA0KYXJlYXMgb2YgY29tcHV0ZXIgc2VjdXJpdHkgaW5jbHVkaW5nIHN5c3RlbSB2dWxuZXJhYmlsaXRpZXMsIGN5YmVyDQphdHRhY2sgcGxhbm5pbmcgYW5kIHNpbXVsYXRpb24sIHNvdXJjZSBjb2RlIGF1ZGl0aW5nLCBhbmQgY3J5cHRvZ3JhcGh5Lg0KT3VyIHJlc3VsdHMgaW5jbHVkZSBwcm9ibGVtIGZvcm1hbGl6YXRpb24sIGlkZW50aWZpY2F0aW9uIG9mDQp2dWxuZXJhYmlsaXRpZXMsIG5vdmVsIHNvbHV0aW9ucyBhbmQgcHJvdG90eXBlcyBmb3IgbmV3IHRlY2hub2xvZ2llcy4NCkNvcmVMYWJzIHJlZ3VsYXJseSBwdWJsaXNoZXMgc2VjdXJpdHkgYWR2aXNvcmllcywgdGVjaG5pY2FsIHBhcGVycywNCnByb2plY3QgaW5mb3JtYXRpb24gYW5kIHNoYXJlZCBzb2Z0d2FyZSB0b29scyBmb3IgcHVibGljIHVzZSBhdDoNCmh0dHA6Ly9jb3JlbGFicy5jb3Jlc2VjdXJpdHkuY29tLg0KDQoxMS4gKkFib3V0IENvcmUgU2VjdXJpdHkgVGVjaG5vbG9naWVzKg0KDQpDb3JlIFNlY3VyaXR5IFRlY2hub2xvZ2llcyBlbmFibGVzIG9yZ2FuaXphdGlvbnMgdG8gZ2V0IGFoZWFkIG9mIHRocmVhdHMNCndpdGggc2VjdXJpdHkgdGVzdCBhbmQgbWVhc3VyZW1lbnQgc29sdXRpb25zIHRoYXQgY29udGludW91c2x5IGlkZW50aWZ5DQphbmQgZGVtb25zdHJhdGUgcmVhbC13b3JsZCBleHBvc3VyZXMgdG8gdGhlaXIgbW9zdCBjcml0aWNhbCBhc3NldHMuIE91cg0KY3VzdG9tZXJzIGNhbiBnYWluIHJlYWwgdmlzaWJpbGl0eSBpbnRvIHRoZWlyIHNlY3VyaXR5IHN0YW5kaW5nLCByZWFsDQp2YWxpZGF0aW9uIG9mIHRoZWlyIHNlY3VyaXR5IGNvbnRyb2xzLCBhbmQgcmVhbCBtZXRyaWNzIHRvIG1vcmUNCmVmZmVjdGl2ZWx5IHNlY3VyZSB0aGVpciBvcmdhbml6YXRpb25zLg0KDQpDb3JlIFNlY3VyaXR5J3Mgc29mdHdhcmUgc29sdXRpb25zIGJ1aWxkIG9uIG92ZXIgYSBkZWNhZGUgb2YgdHJ1c3RlZA0KcmVzZWFyY2ggYW5kIGxlYWRpbmctZWRnZSB0aHJlYXQgZXhwZXJ0aXNlIGZyb20gdGhlIGNvbXBhbnkncyBTZWN1cml0eQ0KQ29uc3VsdGluZyBTZXJ2aWNlcywgQ29yZUxhYnMgYW5kIEVuZ2luZWVyaW5nIGdyb3Vwcy4gQ29yZSBTZWN1cml0eQ0KVGVjaG5vbG9naWVzIGNhbiBiZSByZWFjaGVkIGF0ICsxICg2MTcpIDM5OS02OTgwIG9yIG9uIHRoZSBXZWIgYXQ6DQpodHRwOi8vd3d3LmNvcmVzZWN1cml0eS5jb20uDQoNCjEyLiAqRGlzY2xhaW1lcioNCg0KVGhlIGNvbnRlbnRzIG9mIHRoaXMgYWR2aXNvcnkgYXJlIGNvcHlyaWdodCAoYykgMjAxMyBDb3JlIFNlY3VyaXR5DQpUZWNobm9sb2dpZXMgYW5kIChjKSAyMDEzIENvcmVMYWJzLCBhbmQgYXJlIGxpY2Vuc2VkIHVuZGVyIGEgQ3JlYXRpdmUNCkNvbW1vbnMgQXR0cmlidXRpb24gTm9uLUNvbW1lcmNpYWwgU2hhcmUtQWxpa2UgMy4wIChVbml0ZWQgU3RhdGVzKQ0KTGljZW5zZTogaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMtc2EvMy4wL3VzLw0KDQoxMy4gKlBHUC9HUEcgS2V5cyoNCg0KVGhpcyBhZHZpc29yeSBoYXMgYmVlbiBzaWduZWQgd2l0aCB0aGUgR1BHIGtleSBvZiBDb3JlIFNlY3VyaXR5DQpUZWNobm9sb2dpZXMgYWR2aXNvcmllcyB0ZWFtLCB3aGljaCBpcyBhdmFpbGFibGUgZm9yIGRvd25sb2FkIGF0DQpodHRwOi8vd3d3LmNvcmVzZWN1cml0eS5jb20vZmlsZXMvYXR0YWNobWVudHMvY29yZV9zZWN1cml0eV9hZHZpc29yaWVzLmFzYy4=", 
    "filename": "platforms/hardware/webapps/25812.txt", 
    "id": "25812", 
    "cves": [
        "CVE-2013-2573", 
        "CVE-2013-2572"
    ]
}