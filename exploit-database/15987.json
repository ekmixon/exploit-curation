{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/cgi/webapps/15987.py", 
    "id": "15987", 
    "cves": [
        "CVE-2007-6515"
    ]
}