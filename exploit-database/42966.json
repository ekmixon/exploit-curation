{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/jsp/webapps/42966.py", 
    "id": "42966", 
    "cves": [
        "CVE-2017-12617"
    ]
}