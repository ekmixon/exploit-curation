{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/webapps/28653.txt", 
    "id": "28653", 
    "cves": [
        "CVE-2013-5697"
    ]
}