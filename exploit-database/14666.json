{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/dos/14666.txt", 
    "id": "14666", 
    "cves": [
        "CVE-2010-1888"
    ]
}