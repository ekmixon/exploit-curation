{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/remote/40339.py", 
    "id": "40339", 
    "cves": [
        "CVE-2015-7547"
    ]
}