{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/php/webapps/22216.txt", 
    "id": "22216", 
    "cves": [
        "CVE-2012-5193", 
        "CVE-2012-5192"
    ]
}