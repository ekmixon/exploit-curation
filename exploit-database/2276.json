{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/2276.pm", 
    "id": "2276", 
    "cves": [
        "CVE-2006-4221"
    ]
}