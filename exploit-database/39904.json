{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/asp/webapps/39904.txt", 
    "id": "39904", 
    "cves": [
        "CVE-2016-1328", 
        "CVE-2016-1337", 
        "CVE-2015-6401", 
        "CVE-2016-1336", 
        "CVE-2015-6402"
    ]
}