{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/windows/remote/18485.rb", 
    "id": "18485", 
    "cves": [
        "CVE-2010-0842"
    ]
}