{
    "cpes": {
        "cpe:/o:redhat:enterprise_linux:7.0:ga:server": {
            "scores": {
                "stride": "000000"
            }
        }
    }, 
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/linux/local/40678.c", 
    "id": "40678", 
    "cves": [
        "CVE-2016-6662", 
        "CVE-2016-6663", 
        "CVE-2016-6664", 
        "CVE-2016-5616"
    ]
}