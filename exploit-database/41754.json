{
    "source": "exploit-database", 
    "exploit": "", 
    "filename": "platforms/hardware/local/41754.txt", 
    "id": "41754", 
    "cves": [
        "CVE-2017-5671"
    ]
}